[{"/Users/radhika.bajaj/Documents/knowledgegraph_frontend/src/index.js":"1","/Users/radhika.bajaj/Documents/knowledgegraph_frontend/src/App.js":"2","/Users/radhika.bajaj/Documents/knowledgegraph_frontend/src/components/Navigation.js":"3","/Users/radhika.bajaj/Documents/knowledgegraph_frontend/src/pages/Home.js":"4","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/index.js":"5","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/App.js":"6","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/pages/Home.js":"7","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/Navigation.js":"8","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/HorizontalTabPanel.js":"9","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/InputWindow.js":"10","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/OutputWindow.js":"11","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/GetForms/GetSiblingsByImportIdForm.js":"12","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/GetForms/GetNodeByNameForm.js":"13","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/GetForms/GetGraphForm.js":"14","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/GetForms/GetNodesByLabelForm.js":"15","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/GetForms/GetNodeByImportIdForm.js":"16","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/VerticalTabPanels/GetVerticalTabPanel.js":"17","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/ForceGraph.js":"18","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/ForceGraphGenerator.js":"19"},{"size":253,"mtime":1699384621696,"results":"20","hashOfConfig":"21"},{"size":792,"mtime":1699386614683,"results":"22","hashOfConfig":"21"},{"size":459,"mtime":1699386452537,"results":"23","hashOfConfig":"21"},{"size":44,"mtime":1699386600023,"results":"24","hashOfConfig":"21"},{"size":253,"mtime":1699384621696,"results":"25","hashOfConfig":"26"},{"size":423,"mtime":1699511349389,"results":"27","hashOfConfig":"26"},{"size":400,"mtime":1701366755787,"results":"28","hashOfConfig":"26"},{"size":459,"mtime":1699386452537,"results":"29","hashOfConfig":"26"},{"size":2161,"mtime":1700678962192,"results":"30","hashOfConfig":"26"},{"size":298,"mtime":1700174116526,"results":"31","hashOfConfig":"26"},{"size":771,"mtime":1701452211212,"results":"32","hashOfConfig":"26"},{"size":1752,"mtime":1700505271423,"results":"33","hashOfConfig":"26"},{"size":2283,"mtime":1700505256578,"results":"34","hashOfConfig":"26"},{"size":1351,"mtime":1700511073811,"results":"35","hashOfConfig":"26"},{"size":1709,"mtime":1700505262242,"results":"36","hashOfConfig":"26"},{"size":2328,"mtime":1700505961703,"results":"37","hashOfConfig":"26"},{"size":2760,"mtime":1700506204332,"results":"38","hashOfConfig":"26"},{"size":680,"mtime":1701198148799,"results":"39","hashOfConfig":"26"},{"size":4643,"mtime":1701459186686,"results":"40","hashOfConfig":"26"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lkwdnm",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1mf0j2g",{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/radhika.bajaj/Documents/knowledgegraph_frontend/src/index.js",[],[],"/Users/radhika.bajaj/Documents/knowledgegraph_frontend/src/App.js",["105","106"],[],"/Users/radhika.bajaj/Documents/knowledgegraph_frontend/src/components/Navigation.js",["107"],[],"/Users/radhika.bajaj/Documents/knowledgegraph_frontend/src/pages/Home.js",[],[],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/index.js",[],[],["108"],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/App.js",[],[],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/pages/Home.js",[],[],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/Navigation.js",["109"],[],"import Navbar from 'react-bootstrap/Navbar';\nimport logo from '../img/Logo.jpeg';\nimport {Link} from 'react-router-dom';\n\nconst Navigation = () => {\n    return (\n        <div className=\"Navigation\">\n          <Navbar sticky=\"top\">\n                  <Navbar.Brand>\n                        <Link to =\"/\"><img className='navbar-content' src={logo}/></Link>\n                </Navbar.Brand>\n            </Navbar>\n        </div>\n      )\n}\n\nexport default Navigation","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/HorizontalTabPanel.js",[],[],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/InputWindow.js",[],[],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/OutputWindow.js",[],[],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/GetForms/GetSiblingsByImportIdForm.js",["110"],[],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/system/Stack';\nimport Button from '@mui/material/Button';\nimport { useState, useEffect} from 'react';\n\nconst GetSiblingsByImportIdForm = ({graph, setGraph}) => {\n    const [importId, setImportId] = useState('');\n    const [error, setError] = useState('');\n\n    const handleChange = (event) => {\n        setImportId(event.target.value)\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setError('');\n        const response = await fetch(`http://localhost:9092/get-siblings-by-importId?importId=${importId}`);\n\n        if (response.ok) {\n            const data = await response.json();\n            setGraph({\n                nodes: data.nodes,\n                links: data.links\n            });\n            setImportId(''); \n            console.log(graph);    \n        } else {\n            setError(\"Invalid Input!\")\n        }\n    }\n\n  return (\n    <div className=\"form\">\n        <Box\n        sx={{\n            '& > :not(style)': { m: 1, width: '25ch' },\n        }}\n        noValidate\n        autoComplete=\"off\"\n        >\n        \n            \n            <form onSubmit={handleSubmit}>\n                <Stack spacing={4}>\n                <TextField id=\"filled-basic\" label=\"Import Id\" variant=\"filled\" type=\"text\" value={importId} onChange={handleChange}/>\n                <Button variant=\"contained\" type=\"submit\" >Submit</Button>\n                </Stack>\n                {error && <div className='error' style={{color: \"#cc0000\"}}>{error}</div>}\n            </form>\n        \n        </Box>\n\n        \n\n        \n    </div>\n  )\n}\n\nexport default GetSiblingsByImportIdForm;","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/GetForms/GetNodeByNameForm.js",["111"],[],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/system/Stack';\nimport Button from '@mui/material/Button';\nimport { useState, useEffect} from 'react';\n\nconst GetNodeByNameForm = ({graph, setGraph}) => {\n    const [name, setName] = useState('');\n    const [error, setError] = useState('');\n\n    const handleChange = (event) => {\n        setName(event.target.value)\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setError('');\n        const response = await fetch(`http://localhost:9092/get-node-by-name?name=${name}`);\n\n        if (response.ok) {\n            const data = await response.json();\n            setGraph({\n                nodes: data.nodes,\n                links: data.links\n            });\n            setName(''); \n            console.log(graph);    \n        } else {\n            setError(\"Invalid Input!\")\n        }\n    }\n    // const handleSubmit = async (event) => {\n    //     event.preventDefault();\n    //     setError('');\n        \n    //     const response = await fetch(`http://localhost:9092/get-node-by-importId?importId=${importId}`);\n    //     if (response.ok) {\n    //         const data = await response.json();\n    //         setGraph({\n    //             nodes: data.nodes,\n    //             links: data.links\n    //         })\n    //         setImportId('');\n    //         console.log(graph);\n    //     }\n    //      else {\n    //         setError(\"Invalid input!\");\n    //     }\n    // }\n\n  return (\n    <div className=\"form\">\n        <Box\n        sx={{\n            '& > :not(style)': { m: 1, width: '25ch' },\n        }}\n        noValidate\n        autoComplete=\"off\"\n        >\n        \n            \n            <form onSubmit={handleSubmit}>\n                <Stack spacing={4}>\n                <TextField id=\"filled-basic\" label=\"Name\" variant=\"filled\" type=\"text\" value={name} onChange={handleChange}/>\n                <Button variant=\"contained\" type=\"submit\" >Submit</Button>\n                </Stack>\n                {error && <div className='error' style={{color: \"#cc0000\"}}>{error}</div>}\n            </form>\n        \n        </Box>\n\n        \n\n        \n    </div>\n  )\n}\n\nexport default GetNodeByNameForm;","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/GetForms/GetGraphForm.js",["112"],[],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/system/Stack';\nimport Button from '@mui/material/Button';\nimport { useState, useEffect} from 'react';\n\nconst GetGraphForm = ({graph, setGraph}) => {\n    const [error, setError] = useState('');\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setError('');\n        const response = await fetch(`http://localhost:9092/get-graph`);\n\n        if (response.ok) {\n            const data = await response.json();\n            setGraph({\n                nodes: data.nodes,\n                links: data.links\n            });\n            console.log(graph);    \n        } else {\n            setError(\"Unable to fetch graph\")\n        }\n    }\n\n  return (\n    <div className=\"form\">\n        <Box\n        sx={{\n            '& > :not(style)': { m: 1, width: '25ch' },\n        }}\n        noValidate\n        autoComplete=\"off\"\n        >\n        \n            \n            <form onSubmit={handleSubmit}>\n                <Stack spacing={4}>\n                <Button variant=\"contained\" type=\"submit\" >Get Graph</Button>\n                </Stack>\n                {error && <div className='error' style={{color: \"#cc0000\"}}>{error}</div>}\n            </form>\n        \n        </Box>\n\n        \n\n        \n    </div>\n  )\n}\n\nexport default GetGraphForm;","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/GetForms/GetNodesByLabelForm.js",["113"],[],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/system/Stack';\nimport Button from '@mui/material/Button';\nimport { useState, useEffect} from 'react';\n\nconst GetNodesByLabelForm = ({graph, setGraph}) => {\n    const [label, setLabel] = useState('');\n    const [error, setError] = useState('');\n\n    const handleChange = (event) => {\n        setLabel(event.target.value)\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setError('');\n        const response = await fetch(`http://localhost:9092/get-nodes-by-label?label=${label}`);\n\n        if (response.ok) {\n            const data = await response.json();\n            setGraph({\n                nodes: data.nodes,\n                links: data.links\n            });\n            setLabel(''); \n            console.log(graph);    \n        } else {\n            setError(\"Invalid Input!\")\n        }\n    }\n\n  return (\n    <div className=\"form\">\n        <Box\n        sx={{\n            '& > :not(style)': { m: 1, width: '25ch' },\n        }}\n        noValidate\n        autoComplete=\"off\"\n        >\n        \n            \n            <form onSubmit={handleSubmit}>\n                <Stack spacing={4}>\n                <TextField id=\"filled-basic\" label=\"Label\" variant=\"filled\" type=\"text\" value={label} onChange={handleChange}/>\n                <Button variant=\"contained\" type=\"submit\" >Submit</Button>\n                </Stack>\n                {error && <div className='error' style={{color: \"#cc0000\"}}>{error}</div>}\n            </form>\n        \n        </Box>\n\n        \n\n        \n    </div>\n  )\n}\n\nexport default GetNodesByLabelForm;","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/GetForms/GetNodeByImportIdForm.js",["114"],[],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/system/Stack';\nimport Button from '@mui/material/Button';\nimport { useState, useEffect} from 'react';\n\nconst GetNodeByImportIdForm = ({graph, setGraph}) => {\n    const [importId, setImportId] = useState('');\n    const [error, setError] = useState('');\n\n    const handleChange = (event) => {\n        setImportId(event.target.value)\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setError('');\n        const response = await fetch(`http://localhost:9092/get-node-by-importId?importId=${importId}`);\n\n        if (response.ok) {\n            const data = await response.json();\n            setGraph({\n                nodes: data.nodes,\n                links: data.links\n            });\n            setImportId(''); \n            console.log(graph);    \n        } else {\n            setError(\"Invalid Input!\")\n        }\n    }\n    // const handleSubmit = async (event) => {\n    //     event.preventDefault();\n    //     setError('');\n        \n    //     const response = await fetch(`http://localhost:9092/get-node-by-importId?importId=${importId}`);\n    //     if (response.ok) {\n    //         const data = await response.json();\n    //         setGraph({\n    //             nodes: data.nodes,\n    //             links: data.links\n    //         })\n    //         setImportId('');\n    //         console.log(graph);\n    //     }\n    //      else {\n    //         setError(\"Invalid input!\");\n    //     }\n    // }\n\n  return (\n    <div className=\"form\">\n        <Box\n        sx={{\n            '& > :not(style)': { m: 1, width: '25ch' },\n        }}\n        noValidate\n        autoComplete=\"off\"\n        >\n        \n            \n            <form onSubmit={handleSubmit}>\n                <Stack spacing={4}>\n                <TextField id=\"filled-basic\" label=\"Import Id\" variant=\"filled\" type=\"text\" value={importId} onChange={handleChange}/>\n                <Button variant=\"contained\" type=\"submit\" >Submit</Button>\n                </Stack>\n                {error && <div className='error' style={{color: \"#cc0000\"}}>{error}</div>}\n            </form>\n        \n        </Box>\n\n        \n\n        \n    </div>\n  )\n}\n\nexport default GetNodeByImportIdForm;","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/VerticalTabPanels/GetVerticalTabPanel.js",[],[],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/ForceGraph.js",[],[],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/ForceGraphGenerator.js",["115","116","117","118"],[],{"ruleId":"119","severity":1,"message":"120","line":1,"column":16,"nodeType":"121","messageId":"122","endLine":1,"endColumn":24},{"ruleId":"119","severity":1,"message":"123","line":1,"column":26,"nodeType":"121","messageId":"122","endLine":1,"endColumn":35},{"ruleId":"124","severity":1,"message":"125","line":10,"column":39,"nodeType":"126","endLine":10,"endColumn":83},{"ruleId":"127","replacedBy":"128"},{"ruleId":"124","severity":1,"message":"125","line":10,"column":39,"nodeType":"126","endLine":10,"endColumn":83},{"ruleId":"119","severity":1,"message":"123","line":6,"column":20,"nodeType":"121","messageId":"122","endLine":6,"endColumn":29},{"ruleId":"119","severity":1,"message":"123","line":6,"column":20,"nodeType":"121","messageId":"122","endLine":6,"endColumn":29},{"ruleId":"119","severity":1,"message":"123","line":5,"column":20,"nodeType":"121","messageId":"122","endLine":5,"endColumn":29},{"ruleId":"119","severity":1,"message":"123","line":6,"column":20,"nodeType":"121","messageId":"122","endLine":6,"endColumn":29},{"ruleId":"119","severity":1,"message":"123","line":6,"column":20,"nodeType":"121","messageId":"122","endLine":6,"endColumn":29},{"ruleId":"119","severity":1,"message":"129","line":3,"column":8,"nodeType":"121","messageId":"122","endLine":3,"endColumn":14},{"ruleId":"119","severity":1,"message":"130","line":5,"column":10,"nodeType":"121","messageId":"122","endLine":5,"endColumn":25},{"ruleId":"119","severity":1,"message":"131","line":6,"column":8,"nodeType":"121","messageId":"122","endLine":6,"endColumn":23},{"ruleId":"132","severity":1,"message":"133","line":32,"column":6,"nodeType":"134","endLine":32,"endColumn":8,"suggestions":"135"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-new-object",["136"],"'styles' is defined but never used.","'useLayoutEffect' is defined but never used.","'d3ForceBoundary' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getSvgContainerSize'. Either include it or remove the dependency array.","ArrayExpression",["137"],"no-object-constructor",{"desc":"138","fix":"139"},"Update the dependencies array to be: [getSvgContainerSize]",{"range":"140","text":"141"},[1111,1113],"[getSvgContainerSize]"]