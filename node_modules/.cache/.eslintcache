[{"/Users/radhika.bajaj/Documents/knowledgegraph_frontend/src/index.js":"1","/Users/radhika.bajaj/Documents/knowledgegraph_frontend/src/App.js":"2","/Users/radhika.bajaj/Documents/knowledgegraph_frontend/src/components/Navigation.js":"3","/Users/radhika.bajaj/Documents/knowledgegraph_frontend/src/pages/Home.js":"4","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/index.js":"5","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/App.js":"6","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/pages/Home.js":"7","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/Navigation.js":"8","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/HorizontalTabPanel.js":"9","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/InputWindow.js":"10","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/OutputWindow.js":"11","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/GetForms/GetSiblingsByImportIdForm.js":"12","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/GetForms/GetNodeByNameForm.js":"13","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/GetForms/GetGraphForm.js":"14","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/GetForms/GetNodesByLabelForm.js":"15","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/GetForms/GetNodeByImportIdForm.js":"16","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/VerticalTabPanels/GetVerticalTabPanel.js":"17","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/NetworkDiagramGenerator.js":"18","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/NetworkDiagram.js":"19","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/DrawNetwork.js":"20","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/useDimensions.js":"21","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/ForceGraph.js":"22","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/ForceGraphGenerator.js":"23"},{"size":253,"mtime":1699384621696,"results":"24","hashOfConfig":"25"},{"size":792,"mtime":1699386614683,"results":"26","hashOfConfig":"25"},{"size":459,"mtime":1699386452537,"results":"27","hashOfConfig":"25"},{"size":44,"mtime":1699386600023,"results":"28","hashOfConfig":"25"},{"size":253,"mtime":1699384621696,"results":"29","hashOfConfig":"30"},{"size":423,"mtime":1699511349389,"results":"31","hashOfConfig":"30"},{"size":400,"mtime":1700678939640,"results":"32","hashOfConfig":"30"},{"size":459,"mtime":1699386452537,"results":"33","hashOfConfig":"30"},{"size":2161,"mtime":1700678962192,"results":"34","hashOfConfig":"30"},{"size":298,"mtime":1700174116526,"results":"35","hashOfConfig":"30"},{"size":866,"mtime":1701058437088,"results":"36","hashOfConfig":"30"},{"size":1752,"mtime":1700505271423,"results":"37","hashOfConfig":"30"},{"size":2283,"mtime":1700505256578,"results":"38","hashOfConfig":"30"},{"size":1351,"mtime":1700511073811,"results":"39","hashOfConfig":"30"},{"size":1709,"mtime":1700505262242,"results":"40","hashOfConfig":"30"},{"size":2328,"mtime":1700505961703,"results":"41","hashOfConfig":"30"},{"size":2760,"mtime":1700506204332,"results":"42","hashOfConfig":"30"},{"size":275,"mtime":1700773385782,"results":"43","hashOfConfig":"30"},{"size":5428,"mtime":1701058421485,"results":"44","hashOfConfig":"30"},{"size":2004,"mtime":1700759701328,"results":"45","hashOfConfig":"30"},{"size":763,"mtime":1700680115712,"results":"46","hashOfConfig":"30"},{"size":687,"mtime":1700776837231,"results":"47","hashOfConfig":"30"},{"size":3683,"mtime":1700776825214,"results":"48","hashOfConfig":"30"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lkwdnm",{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1mf0j2g",{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/radhika.bajaj/Documents/knowledgegraph_frontend/src/index.js",[],[],"/Users/radhika.bajaj/Documents/knowledgegraph_frontend/src/App.js",["125","126"],[],"/Users/radhika.bajaj/Documents/knowledgegraph_frontend/src/components/Navigation.js",["127"],[],"/Users/radhika.bajaj/Documents/knowledgegraph_frontend/src/pages/Home.js",[],[],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/index.js",[],[],["128"],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/App.js",[],[],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/pages/Home.js",[],[],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/Navigation.js",["129"],[],"import Navbar from 'react-bootstrap/Navbar';\nimport logo from '../img/Logo.jpeg';\nimport {Link} from 'react-router-dom';\n\nconst Navigation = () => {\n    return (\n        <div className=\"Navigation\">\n          <Navbar sticky=\"top\">\n                  <Navbar.Brand>\n                        <Link to =\"/\"><img className='navbar-content' src={logo}/></Link>\n                </Navbar.Brand>\n            </Navbar>\n        </div>\n      )\n}\n\nexport default Navigation","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/HorizontalTabPanel.js",[],[],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/InputWindow.js",[],[],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/OutputWindow.js",["130","131","132"],[],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/GetForms/GetSiblingsByImportIdForm.js",["133"],[],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/system/Stack';\nimport Button from '@mui/material/Button';\nimport { useState, useEffect} from 'react';\n\nconst GetSiblingsByImportIdForm = ({graph, setGraph}) => {\n    const [importId, setImportId] = useState('');\n    const [error, setError] = useState('');\n\n    const handleChange = (event) => {\n        setImportId(event.target.value)\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setError('');\n        const response = await fetch(`http://localhost:9092/get-siblings-by-importId?importId=${importId}`);\n\n        if (response.ok) {\n            const data = await response.json();\n            setGraph({\n                nodes: data.nodes,\n                links: data.links\n            });\n            setImportId(''); \n            console.log(graph);    \n        } else {\n            setError(\"Invalid Input!\")\n        }\n    }\n\n  return (\n    <div className=\"form\">\n        <Box\n        sx={{\n            '& > :not(style)': { m: 1, width: '25ch' },\n        }}\n        noValidate\n        autoComplete=\"off\"\n        >\n        \n            \n            <form onSubmit={handleSubmit}>\n                <Stack spacing={4}>\n                <TextField id=\"filled-basic\" label=\"Import Id\" variant=\"filled\" type=\"text\" value={importId} onChange={handleChange}/>\n                <Button variant=\"contained\" type=\"submit\" >Submit</Button>\n                </Stack>\n                {error && <div className='error' style={{color: \"#cc0000\"}}>{error}</div>}\n            </form>\n        \n        </Box>\n\n        \n\n        \n    </div>\n  )\n}\n\nexport default GetSiblingsByImportIdForm;","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/GetForms/GetNodeByNameForm.js",["134"],[],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/system/Stack';\nimport Button from '@mui/material/Button';\nimport { useState, useEffect} from 'react';\n\nconst GetNodeByNameForm = ({graph, setGraph}) => {\n    const [name, setName] = useState('');\n    const [error, setError] = useState('');\n\n    const handleChange = (event) => {\n        setName(event.target.value)\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setError('');\n        const response = await fetch(`http://localhost:9092/get-node-by-name?name=${name}`);\n\n        if (response.ok) {\n            const data = await response.json();\n            setGraph({\n                nodes: data.nodes,\n                links: data.links\n            });\n            setName(''); \n            console.log(graph);    \n        } else {\n            setError(\"Invalid Input!\")\n        }\n    }\n    // const handleSubmit = async (event) => {\n    //     event.preventDefault();\n    //     setError('');\n        \n    //     const response = await fetch(`http://localhost:9092/get-node-by-importId?importId=${importId}`);\n    //     if (response.ok) {\n    //         const data = await response.json();\n    //         setGraph({\n    //             nodes: data.nodes,\n    //             links: data.links\n    //         })\n    //         setImportId('');\n    //         console.log(graph);\n    //     }\n    //      else {\n    //         setError(\"Invalid input!\");\n    //     }\n    // }\n\n  return (\n    <div className=\"form\">\n        <Box\n        sx={{\n            '& > :not(style)': { m: 1, width: '25ch' },\n        }}\n        noValidate\n        autoComplete=\"off\"\n        >\n        \n            \n            <form onSubmit={handleSubmit}>\n                <Stack spacing={4}>\n                <TextField id=\"filled-basic\" label=\"Name\" variant=\"filled\" type=\"text\" value={name} onChange={handleChange}/>\n                <Button variant=\"contained\" type=\"submit\" >Submit</Button>\n                </Stack>\n                {error && <div className='error' style={{color: \"#cc0000\"}}>{error}</div>}\n            </form>\n        \n        </Box>\n\n        \n\n        \n    </div>\n  )\n}\n\nexport default GetNodeByNameForm;","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/GetForms/GetGraphForm.js",["135"],[],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/system/Stack';\nimport Button from '@mui/material/Button';\nimport { useState, useEffect} from 'react';\n\nconst GetGraphForm = ({graph, setGraph}) => {\n    const [error, setError] = useState('');\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setError('');\n        const response = await fetch(`http://localhost:9092/get-graph`);\n\n        if (response.ok) {\n            const data = await response.json();\n            setGraph({\n                nodes: data.nodes,\n                links: data.links\n            });\n            console.log(graph);    \n        } else {\n            setError(\"Unable to fetch graph\")\n        }\n    }\n\n  return (\n    <div className=\"form\">\n        <Box\n        sx={{\n            '& > :not(style)': { m: 1, width: '25ch' },\n        }}\n        noValidate\n        autoComplete=\"off\"\n        >\n        \n            \n            <form onSubmit={handleSubmit}>\n                <Stack spacing={4}>\n                <Button variant=\"contained\" type=\"submit\" >Get Graph</Button>\n                </Stack>\n                {error && <div className='error' style={{color: \"#cc0000\"}}>{error}</div>}\n            </form>\n        \n        </Box>\n\n        \n\n        \n    </div>\n  )\n}\n\nexport default GetGraphForm;","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/GetForms/GetNodesByLabelForm.js",["136"],[],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/system/Stack';\nimport Button from '@mui/material/Button';\nimport { useState, useEffect} from 'react';\n\nconst GetNodesByLabelForm = ({graph, setGraph}) => {\n    const [label, setLabel] = useState('');\n    const [error, setError] = useState('');\n\n    const handleChange = (event) => {\n        setLabel(event.target.value)\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setError('');\n        const response = await fetch(`http://localhost:9092/get-nodes-by-label?label=${label}`);\n\n        if (response.ok) {\n            const data = await response.json();\n            setGraph({\n                nodes: data.nodes,\n                links: data.links\n            });\n            setLabel(''); \n            console.log(graph);    \n        } else {\n            setError(\"Invalid Input!\")\n        }\n    }\n\n  return (\n    <div className=\"form\">\n        <Box\n        sx={{\n            '& > :not(style)': { m: 1, width: '25ch' },\n        }}\n        noValidate\n        autoComplete=\"off\"\n        >\n        \n            \n            <form onSubmit={handleSubmit}>\n                <Stack spacing={4}>\n                <TextField id=\"filled-basic\" label=\"Label\" variant=\"filled\" type=\"text\" value={label} onChange={handleChange}/>\n                <Button variant=\"contained\" type=\"submit\" >Submit</Button>\n                </Stack>\n                {error && <div className='error' style={{color: \"#cc0000\"}}>{error}</div>}\n            </form>\n        \n        </Box>\n\n        \n\n        \n    </div>\n  )\n}\n\nexport default GetNodesByLabelForm;","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/GetForms/GetNodeByImportIdForm.js",["137"],[],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/system/Stack';\nimport Button from '@mui/material/Button';\nimport { useState, useEffect} from 'react';\n\nconst GetNodeByImportIdForm = ({graph, setGraph}) => {\n    const [importId, setImportId] = useState('');\n    const [error, setError] = useState('');\n\n    const handleChange = (event) => {\n        setImportId(event.target.value)\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setError('');\n        const response = await fetch(`http://localhost:9092/get-node-by-importId?importId=${importId}`);\n\n        if (response.ok) {\n            const data = await response.json();\n            setGraph({\n                nodes: data.nodes,\n                links: data.links\n            });\n            setImportId(''); \n            console.log(graph);    \n        } else {\n            setError(\"Invalid Input!\")\n        }\n    }\n    // const handleSubmit = async (event) => {\n    //     event.preventDefault();\n    //     setError('');\n        \n    //     const response = await fetch(`http://localhost:9092/get-node-by-importId?importId=${importId}`);\n    //     if (response.ok) {\n    //         const data = await response.json();\n    //         setGraph({\n    //             nodes: data.nodes,\n    //             links: data.links\n    //         })\n    //         setImportId('');\n    //         console.log(graph);\n    //     }\n    //      else {\n    //         setError(\"Invalid input!\");\n    //     }\n    // }\n\n  return (\n    <div className=\"form\">\n        <Box\n        sx={{\n            '& > :not(style)': { m: 1, width: '25ch' },\n        }}\n        noValidate\n        autoComplete=\"off\"\n        >\n        \n            \n            <form onSubmit={handleSubmit}>\n                <Stack spacing={4}>\n                <TextField id=\"filled-basic\" label=\"Import Id\" variant=\"filled\" type=\"text\" value={importId} onChange={handleChange}/>\n                <Button variant=\"contained\" type=\"submit\" >Submit</Button>\n                </Stack>\n                {error && <div className='error' style={{color: \"#cc0000\"}}>{error}</div>}\n            </form>\n        \n        </Box>\n\n        \n\n        \n    </div>\n  )\n}\n\nexport default GetNodeByImportIdForm;","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/VerticalTabPanels/GetVerticalTabPanel.js",[],[],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/NetworkDiagramGenerator.js",["138","139"],[],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/NetworkDiagram.js",[],[],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/DrawNetwork.js",[],[],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/useDimensions.js",["140","141"],[],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/ForceGraph.js",["142"],[],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/ForceGraphGenerator.js",[],[],{"ruleId":"143","severity":1,"message":"144","line":1,"column":16,"nodeType":"145","messageId":"146","endLine":1,"endColumn":24},{"ruleId":"143","severity":1,"message":"147","line":1,"column":26,"nodeType":"145","messageId":"146","endLine":1,"endColumn":35},{"ruleId":"148","severity":1,"message":"149","line":10,"column":39,"nodeType":"150","endLine":10,"endColumn":83},{"ruleId":"151","replacedBy":"152"},{"ruleId":"148","severity":1,"message":"149","line":10,"column":39,"nodeType":"150","endLine":10,"endColumn":83},{"ruleId":"143","severity":1,"message":"147","line":1,"column":10,"nodeType":"145","messageId":"146","endLine":1,"endColumn":19},{"ruleId":"143","severity":1,"message":"153","line":3,"column":8,"nodeType":"145","messageId":"146","endLine":3,"endColumn":31},{"ruleId":"143","severity":1,"message":"154","line":4,"column":17,"nodeType":"145","messageId":"146","endLine":4,"endColumn":23},{"ruleId":"143","severity":1,"message":"147","line":6,"column":20,"nodeType":"145","messageId":"146","endLine":6,"endColumn":29},{"ruleId":"143","severity":1,"message":"147","line":6,"column":20,"nodeType":"145","messageId":"146","endLine":6,"endColumn":29},{"ruleId":"143","severity":1,"message":"147","line":5,"column":20,"nodeType":"145","messageId":"146","endLine":5,"endColumn":29},{"ruleId":"143","severity":1,"message":"147","line":6,"column":20,"nodeType":"145","messageId":"146","endLine":6,"endColumn":29},{"ruleId":"143","severity":1,"message":"147","line":6,"column":20,"nodeType":"145","messageId":"146","endLine":6,"endColumn":29},{"ruleId":"143","severity":1,"message":"155","line":2,"column":10,"nodeType":"145","messageId":"146","endLine":2,"endColumn":26},{"ruleId":"143","severity":1,"message":"156","line":2,"column":28,"nodeType":"145","messageId":"146","endLine":2,"endColumn":46},{"ruleId":"157","severity":1,"message":"158","line":21,"column":8,"nodeType":"159","endLine":21,"endColumn":19,"suggestions":"160"},{"ruleId":"157","severity":1,"message":"161","line":25,"column":8,"nodeType":"159","endLine":25,"endColumn":19,"suggestions":"162"},{"ruleId":"157","severity":1,"message":"163","line":19,"column":6,"nodeType":"159","endLine":19,"endColumn":13,"suggestions":"164"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-new-object",["165"],"'NetworkDiagramGenerator' is defined but never used.","'useRef' is defined but never used.","'TransformWrapper' is defined but never used.","'TransformComponent' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleResize'. Either include it or remove the dependency array.","ArrayExpression",["166"],"React Hook useLayoutEffect has a missing dependency: 'handleResize'. Either include it or remove the dependency array.",["167"],"React Hook React.useEffect has missing dependencies: 'linksData', 'nodeHoverTooltip', and 'nodesData'. Either include them or remove the dependency array.",["168"],"no-object-constructor",{"desc":"169","fix":"170"},{"desc":"169","fix":"171"},{"desc":"172","fix":"173"},"Update the dependencies array to be: [handleResize, targetRef]",{"range":"174","text":"175"},{"range":"176","text":"175"},"Update the dependencies array to be: [graph, linksData, nodeHoverTooltip, nodesData]",{"range":"177","text":"178"},[614,625],"[handleResize, targetRef]",[688,699],[610,617],"[graph, linksData, nodeHoverTooltip, nodesData]"]