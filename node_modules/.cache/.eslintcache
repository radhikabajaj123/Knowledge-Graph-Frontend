[{"/Users/radhika.bajaj/Documents/knowledgegraph_frontend/src/index.js":"1","/Users/radhika.bajaj/Documents/knowledgegraph_frontend/src/App.js":"2","/Users/radhika.bajaj/Documents/knowledgegraph_frontend/src/components/Navigation.js":"3","/Users/radhika.bajaj/Documents/knowledgegraph_frontend/src/pages/Home.js":"4","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/index.js":"5","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/App.js":"6","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/pages/Home.js":"7","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/Navigation.js":"8","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/HorizontalTabPanel.js":"9","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/InputWindow.js":"10","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/OutputWindow.js":"11","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/GetForms/GetSiblingsByImportIdForm.js":"12","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/GetForms/GetNodeByNameForm.js":"13","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/GetForms/GetGraphForm.js":"14","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/GetForms/GetNodesByLabelForm.js":"15","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/GetForms/GetNodeByImportIdForm.js":"16","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/VerticalTabPanels/GetVerticalTabPanel.js":"17","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/useDimensions.js":"18","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/ForceGraph.js":"19","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/ForceGraphGenerator.js":"20"},{"size":253,"mtime":1699384621696,"results":"21","hashOfConfig":"22"},{"size":792,"mtime":1699386614683,"results":"23","hashOfConfig":"22"},{"size":459,"mtime":1699386452537,"results":"24","hashOfConfig":"22"},{"size":44,"mtime":1699386600023,"results":"25","hashOfConfig":"22"},{"size":253,"mtime":1699384621696,"results":"26","hashOfConfig":"27"},{"size":423,"mtime":1699511349389,"results":"28","hashOfConfig":"27"},{"size":464,"mtime":1701305967739,"results":"29","hashOfConfig":"27"},{"size":459,"mtime":1699386452537,"results":"30","hashOfConfig":"27"},{"size":2161,"mtime":1700678962192,"results":"31","hashOfConfig":"27"},{"size":298,"mtime":1700174116526,"results":"32","hashOfConfig":"27"},{"size":612,"mtime":1701305549594,"results":"33","hashOfConfig":"27"},{"size":1752,"mtime":1700505271423,"results":"34","hashOfConfig":"27"},{"size":2283,"mtime":1700505256578,"results":"35","hashOfConfig":"27"},{"size":1351,"mtime":1700511073811,"results":"36","hashOfConfig":"27"},{"size":1709,"mtime":1700505262242,"results":"37","hashOfConfig":"27"},{"size":2328,"mtime":1700505961703,"results":"38","hashOfConfig":"27"},{"size":2760,"mtime":1700506204332,"results":"39","hashOfConfig":"27"},{"size":763,"mtime":1700680115712,"results":"40","hashOfConfig":"27"},{"size":680,"mtime":1701198148799,"results":"41","hashOfConfig":"27"},{"size":3833,"mtime":1701305842947,"results":"42","hashOfConfig":"27"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lkwdnm",{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1mf0j2g",{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/radhika.bajaj/Documents/knowledgegraph_frontend/src/index.js",[],[],"/Users/radhika.bajaj/Documents/knowledgegraph_frontend/src/App.js",["110","111"],[],"/Users/radhika.bajaj/Documents/knowledgegraph_frontend/src/components/Navigation.js",["112"],[],"/Users/radhika.bajaj/Documents/knowledgegraph_frontend/src/pages/Home.js",[],[],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/index.js",[],[],["113"],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/App.js",[],[],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/pages/Home.js",["114"],[],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/Navigation.js",["115"],[],"import Navbar from 'react-bootstrap/Navbar';\nimport logo from '../img/Logo.jpeg';\nimport {Link} from 'react-router-dom';\n\nconst Navigation = () => {\n    return (\n        <div className=\"Navigation\">\n          <Navbar sticky=\"top\">\n                  <Navbar.Brand>\n                        <Link to =\"/\"><img className='navbar-content' src={logo}/></Link>\n                </Navbar.Brand>\n            </Navbar>\n        </div>\n      )\n}\n\nexport default Navigation","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/HorizontalTabPanel.js",[],[],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/InputWindow.js",[],[],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/OutputWindow.js",["116"],[],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/GetForms/GetSiblingsByImportIdForm.js",["117"],[],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/system/Stack';\nimport Button from '@mui/material/Button';\nimport { useState, useEffect} from 'react';\n\nconst GetSiblingsByImportIdForm = ({graph, setGraph}) => {\n    const [importId, setImportId] = useState('');\n    const [error, setError] = useState('');\n\n    const handleChange = (event) => {\n        setImportId(event.target.value)\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setError('');\n        const response = await fetch(`http://localhost:9092/get-siblings-by-importId?importId=${importId}`);\n\n        if (response.ok) {\n            const data = await response.json();\n            setGraph({\n                nodes: data.nodes,\n                links: data.links\n            });\n            setImportId(''); \n            console.log(graph);    \n        } else {\n            setError(\"Invalid Input!\")\n        }\n    }\n\n  return (\n    <div className=\"form\">\n        <Box\n        sx={{\n            '& > :not(style)': { m: 1, width: '25ch' },\n        }}\n        noValidate\n        autoComplete=\"off\"\n        >\n        \n            \n            <form onSubmit={handleSubmit}>\n                <Stack spacing={4}>\n                <TextField id=\"filled-basic\" label=\"Import Id\" variant=\"filled\" type=\"text\" value={importId} onChange={handleChange}/>\n                <Button variant=\"contained\" type=\"submit\" >Submit</Button>\n                </Stack>\n                {error && <div className='error' style={{color: \"#cc0000\"}}>{error}</div>}\n            </form>\n        \n        </Box>\n\n        \n\n        \n    </div>\n  )\n}\n\nexport default GetSiblingsByImportIdForm;","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/GetForms/GetNodeByNameForm.js",["118"],[],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/system/Stack';\nimport Button from '@mui/material/Button';\nimport { useState, useEffect} from 'react';\n\nconst GetNodeByNameForm = ({graph, setGraph}) => {\n    const [name, setName] = useState('');\n    const [error, setError] = useState('');\n\n    const handleChange = (event) => {\n        setName(event.target.value)\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setError('');\n        const response = await fetch(`http://localhost:9092/get-node-by-name?name=${name}`);\n\n        if (response.ok) {\n            const data = await response.json();\n            setGraph({\n                nodes: data.nodes,\n                links: data.links\n            });\n            setName(''); \n            console.log(graph);    \n        } else {\n            setError(\"Invalid Input!\")\n        }\n    }\n    // const handleSubmit = async (event) => {\n    //     event.preventDefault();\n    //     setError('');\n        \n    //     const response = await fetch(`http://localhost:9092/get-node-by-importId?importId=${importId}`);\n    //     if (response.ok) {\n    //         const data = await response.json();\n    //         setGraph({\n    //             nodes: data.nodes,\n    //             links: data.links\n    //         })\n    //         setImportId('');\n    //         console.log(graph);\n    //     }\n    //      else {\n    //         setError(\"Invalid input!\");\n    //     }\n    // }\n\n  return (\n    <div className=\"form\">\n        <Box\n        sx={{\n            '& > :not(style)': { m: 1, width: '25ch' },\n        }}\n        noValidate\n        autoComplete=\"off\"\n        >\n        \n            \n            <form onSubmit={handleSubmit}>\n                <Stack spacing={4}>\n                <TextField id=\"filled-basic\" label=\"Name\" variant=\"filled\" type=\"text\" value={name} onChange={handleChange}/>\n                <Button variant=\"contained\" type=\"submit\" >Submit</Button>\n                </Stack>\n                {error && <div className='error' style={{color: \"#cc0000\"}}>{error}</div>}\n            </form>\n        \n        </Box>\n\n        \n\n        \n    </div>\n  )\n}\n\nexport default GetNodeByNameForm;","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/GetForms/GetGraphForm.js",["119"],[],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/system/Stack';\nimport Button from '@mui/material/Button';\nimport { useState, useEffect} from 'react';\n\nconst GetGraphForm = ({graph, setGraph}) => {\n    const [error, setError] = useState('');\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setError('');\n        const response = await fetch(`http://localhost:9092/get-graph`);\n\n        if (response.ok) {\n            const data = await response.json();\n            setGraph({\n                nodes: data.nodes,\n                links: data.links\n            });\n            console.log(graph);    \n        } else {\n            setError(\"Unable to fetch graph\")\n        }\n    }\n\n  return (\n    <div className=\"form\">\n        <Box\n        sx={{\n            '& > :not(style)': { m: 1, width: '25ch' },\n        }}\n        noValidate\n        autoComplete=\"off\"\n        >\n        \n            \n            <form onSubmit={handleSubmit}>\n                <Stack spacing={4}>\n                <Button variant=\"contained\" type=\"submit\" >Get Graph</Button>\n                </Stack>\n                {error && <div className='error' style={{color: \"#cc0000\"}}>{error}</div>}\n            </form>\n        \n        </Box>\n\n        \n\n        \n    </div>\n  )\n}\n\nexport default GetGraphForm;","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/GetForms/GetNodesByLabelForm.js",["120"],[],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/system/Stack';\nimport Button from '@mui/material/Button';\nimport { useState, useEffect} from 'react';\n\nconst GetNodesByLabelForm = ({graph, setGraph}) => {\n    const [label, setLabel] = useState('');\n    const [error, setError] = useState('');\n\n    const handleChange = (event) => {\n        setLabel(event.target.value)\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setError('');\n        const response = await fetch(`http://localhost:9092/get-nodes-by-label?label=${label}`);\n\n        if (response.ok) {\n            const data = await response.json();\n            setGraph({\n                nodes: data.nodes,\n                links: data.links\n            });\n            setLabel(''); \n            console.log(graph);    \n        } else {\n            setError(\"Invalid Input!\")\n        }\n    }\n\n  return (\n    <div className=\"form\">\n        <Box\n        sx={{\n            '& > :not(style)': { m: 1, width: '25ch' },\n        }}\n        noValidate\n        autoComplete=\"off\"\n        >\n        \n            \n            <form onSubmit={handleSubmit}>\n                <Stack spacing={4}>\n                <TextField id=\"filled-basic\" label=\"Label\" variant=\"filled\" type=\"text\" value={label} onChange={handleChange}/>\n                <Button variant=\"contained\" type=\"submit\" >Submit</Button>\n                </Stack>\n                {error && <div className='error' style={{color: \"#cc0000\"}}>{error}</div>}\n            </form>\n        \n        </Box>\n\n        \n\n        \n    </div>\n  )\n}\n\nexport default GetNodesByLabelForm;","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/GetForms/GetNodeByImportIdForm.js",["121"],[],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/system/Stack';\nimport Button from '@mui/material/Button';\nimport { useState, useEffect} from 'react';\n\nconst GetNodeByImportIdForm = ({graph, setGraph}) => {\n    const [importId, setImportId] = useState('');\n    const [error, setError] = useState('');\n\n    const handleChange = (event) => {\n        setImportId(event.target.value)\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setError('');\n        const response = await fetch(`http://localhost:9092/get-node-by-importId?importId=${importId}`);\n\n        if (response.ok) {\n            const data = await response.json();\n            setGraph({\n                nodes: data.nodes,\n                links: data.links\n            });\n            setImportId(''); \n            console.log(graph);    \n        } else {\n            setError(\"Invalid Input!\")\n        }\n    }\n    // const handleSubmit = async (event) => {\n    //     event.preventDefault();\n    //     setError('');\n        \n    //     const response = await fetch(`http://localhost:9092/get-node-by-importId?importId=${importId}`);\n    //     if (response.ok) {\n    //         const data = await response.json();\n    //         setGraph({\n    //             nodes: data.nodes,\n    //             links: data.links\n    //         })\n    //         setImportId('');\n    //         console.log(graph);\n    //     }\n    //      else {\n    //         setError(\"Invalid input!\");\n    //     }\n    // }\n\n  return (\n    <div className=\"form\">\n        <Box\n        sx={{\n            '& > :not(style)': { m: 1, width: '25ch' },\n        }}\n        noValidate\n        autoComplete=\"off\"\n        >\n        \n            \n            <form onSubmit={handleSubmit}>\n                <Stack spacing={4}>\n                <TextField id=\"filled-basic\" label=\"Import Id\" variant=\"filled\" type=\"text\" value={importId} onChange={handleChange}/>\n                <Button variant=\"contained\" type=\"submit\" >Submit</Button>\n                </Stack>\n                {error && <div className='error' style={{color: \"#cc0000\"}}>{error}</div>}\n            </form>\n        \n        </Box>\n\n        \n\n        \n    </div>\n  )\n}\n\nexport default GetNodeByImportIdForm;","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/VerticalTabPanels/GetVerticalTabPanel.js",[],[],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/useDimensions.js",["122","123"],[],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/ForceGraph.js",[],[],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/ForceGraphGenerator.js",["124"],[],{"ruleId":"125","severity":1,"message":"126","line":1,"column":16,"nodeType":"127","messageId":"128","endLine":1,"endColumn":24},{"ruleId":"125","severity":1,"message":"129","line":1,"column":26,"nodeType":"127","messageId":"128","endLine":1,"endColumn":35},{"ruleId":"130","severity":1,"message":"131","line":10,"column":39,"nodeType":"132","endLine":10,"endColumn":83},{"ruleId":"133","replacedBy":"134"},{"ruleId":"125","severity":1,"message":"135","line":3,"column":8,"nodeType":"127","messageId":"128","endLine":3,"endColumn":20},{"ruleId":"130","severity":1,"message":"131","line":10,"column":39,"nodeType":"132","endLine":10,"endColumn":83},{"ruleId":"125","severity":1,"message":"136","line":2,"column":17,"nodeType":"127","messageId":"128","endLine":2,"endColumn":23},{"ruleId":"125","severity":1,"message":"129","line":6,"column":20,"nodeType":"127","messageId":"128","endLine":6,"endColumn":29},{"ruleId":"125","severity":1,"message":"129","line":6,"column":20,"nodeType":"127","messageId":"128","endLine":6,"endColumn":29},{"ruleId":"125","severity":1,"message":"129","line":5,"column":20,"nodeType":"127","messageId":"128","endLine":5,"endColumn":29},{"ruleId":"125","severity":1,"message":"129","line":6,"column":20,"nodeType":"127","messageId":"128","endLine":6,"endColumn":29},{"ruleId":"125","severity":1,"message":"129","line":6,"column":20,"nodeType":"127","messageId":"128","endLine":6,"endColumn":29},{"ruleId":"137","severity":1,"message":"138","line":21,"column":8,"nodeType":"139","endLine":21,"endColumn":19,"suggestions":"140"},{"ruleId":"137","severity":1,"message":"141","line":25,"column":8,"nodeType":"139","endLine":25,"endColumn":19,"suggestions":"142"},{"ruleId":"125","severity":1,"message":"143","line":3,"column":8,"nodeType":"127","messageId":"128","endLine":3,"endColumn":14},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-new-object",["144"],"'OutputWindow' is defined but never used.","'useRef' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleResize'. Either include it or remove the dependency array.","ArrayExpression",["145"],"React Hook useLayoutEffect has a missing dependency: 'handleResize'. Either include it or remove the dependency array.",["146"],"'styles' is defined but never used.","no-object-constructor",{"desc":"147","fix":"148"},{"desc":"147","fix":"149"},"Update the dependencies array to be: [handleResize, targetRef]",{"range":"150","text":"151"},{"range":"152","text":"151"},[614,625],"[handleResize, targetRef]",[688,699]]