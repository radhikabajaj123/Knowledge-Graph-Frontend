[{"/Users/radhika.bajaj/Documents/knowledgegraph_frontend/src/index.js":"1","/Users/radhika.bajaj/Documents/knowledgegraph_frontend/src/App.js":"2","/Users/radhika.bajaj/Documents/knowledgegraph_frontend/src/components/Navigation.js":"3","/Users/radhika.bajaj/Documents/knowledgegraph_frontend/src/pages/Home.js":"4","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/index.js":"5","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/App.js":"6","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/pages/Home.js":"7","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/Navigation.js":"8","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/HorizontalTabPanel.js":"9","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/InputWindow.js":"10","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/OutputWindow.js":"11","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/GetForms/GetSiblingsByImportIdForm.js":"12","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/GetForms/GetNodeByNameForm.js":"13","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/GetForms/GetGraphForm.js":"14","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/GetForms/GetNodesByLabelForm.js":"15","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/GetForms/GetNodeByImportIdForm.js":"16","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/VerticalTabPanels/GetVerticalTabPanel.js":"17","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/ForceGraph.js":"18"},{"size":253,"mtime":1699384621696,"results":"19","hashOfConfig":"20"},{"size":792,"mtime":1699386614683,"results":"21","hashOfConfig":"20"},{"size":459,"mtime":1699386452537,"results":"22","hashOfConfig":"20"},{"size":44,"mtime":1699386600023,"results":"23","hashOfConfig":"20"},{"size":253,"mtime":1699384621696,"results":"24","hashOfConfig":"25"},{"size":423,"mtime":1699511349389,"results":"26","hashOfConfig":"25"},{"size":400,"mtime":1701366755787,"results":"27","hashOfConfig":"25"},{"size":459,"mtime":1699386452537,"results":"28","hashOfConfig":"25"},{"size":2169,"mtime":1702403062658,"results":"29","hashOfConfig":"25"},{"size":298,"mtime":1700174116526,"results":"30","hashOfConfig":"25"},{"size":762,"mtime":1703009658944,"results":"31","hashOfConfig":"25"},{"size":1752,"mtime":1700505271423,"results":"32","hashOfConfig":"25"},{"size":2288,"mtime":1702345647376,"results":"33","hashOfConfig":"25"},{"size":1351,"mtime":1700511073811,"results":"34","hashOfConfig":"25"},{"size":1709,"mtime":1700505262242,"results":"35","hashOfConfig":"25"},{"size":2328,"mtime":1702343802201,"results":"36","hashOfConfig":"25"},{"size":2760,"mtime":1700506204332,"results":"37","hashOfConfig":"25"},{"size":9697,"mtime":1702161944642,"results":"38","hashOfConfig":"25"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lkwdnm",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1mf0j2g",{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},"/Users/radhika.bajaj/Documents/knowledgegraph_frontend/src/index.js",[],[],"/Users/radhika.bajaj/Documents/knowledgegraph_frontend/src/App.js",["98","99"],[],"/Users/radhika.bajaj/Documents/knowledgegraph_frontend/src/components/Navigation.js",["100"],[],"/Users/radhika.bajaj/Documents/knowledgegraph_frontend/src/pages/Home.js",[],[],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/index.js",[],[],["101"],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/App.js",[],[],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/pages/Home.js",[],[],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/Navigation.js",["102"],[],"import Navbar from 'react-bootstrap/Navbar';\nimport logo from '../img/Logo.jpeg';\nimport {Link} from 'react-router-dom';\n\nconst Navigation = () => {\n    return (\n        <div className=\"Navigation\">\n          <Navbar sticky=\"top\">\n                  <Navbar.Brand>\n                        <Link to =\"/\"><img className='navbar-content' src={logo}/></Link>\n                </Navbar.Brand>\n            </Navbar>\n        </div>\n      )\n}\n\nexport default Navigation","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/HorizontalTabPanel.js",[],[],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/InputWindow.js",[],[],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/OutputWindow.js",[],[],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/GetForms/GetSiblingsByImportIdForm.js",["103"],[],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/system/Stack';\nimport Button from '@mui/material/Button';\nimport { useState, useEffect} from 'react';\n\nconst GetSiblingsByImportIdForm = ({graph, setGraph}) => {\n    const [importId, setImportId] = useState('');\n    const [error, setError] = useState('');\n\n    const handleChange = (event) => {\n        setImportId(event.target.value)\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setError('');\n        const response = await fetch(`http://localhost:9092/get-siblings-by-importId?importId=${importId}`);\n\n        if (response.ok) {\n            const data = await response.json();\n            setGraph({\n                nodes: data.nodes,\n                links: data.links\n            });\n            setImportId(''); \n            console.log(graph);    \n        } else {\n            setError(\"Invalid Input!\")\n        }\n    }\n\n  return (\n    <div className=\"form\">\n        <Box\n        sx={{\n            '& > :not(style)': { m: 1, width: '25ch' },\n        }}\n        noValidate\n        autoComplete=\"off\"\n        >\n        \n            \n            <form onSubmit={handleSubmit}>\n                <Stack spacing={4}>\n                <TextField id=\"filled-basic\" label=\"Import Id\" variant=\"filled\" type=\"text\" value={importId} onChange={handleChange}/>\n                <Button variant=\"contained\" type=\"submit\" >Submit</Button>\n                </Stack>\n                {error && <div className='error' style={{color: \"#cc0000\"}}>{error}</div>}\n            </form>\n        \n        </Box>\n\n        \n\n        \n    </div>\n  )\n}\n\nexport default GetSiblingsByImportIdForm;","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/GetForms/GetNodeByNameForm.js",["104"],[],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/GetForms/GetGraphForm.js",["105"],[],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/system/Stack';\nimport Button from '@mui/material/Button';\nimport { useState, useEffect} from 'react';\n\nconst GetGraphForm = ({graph, setGraph}) => {\n    const [error, setError] = useState('');\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setError('');\n        const response = await fetch(`http://localhost:9092/get-graph`);\n\n        if (response.ok) {\n            const data = await response.json();\n            setGraph({\n                nodes: data.nodes,\n                links: data.links\n            });\n            console.log(graph);    \n        } else {\n            setError(\"Unable to fetch graph\")\n        }\n    }\n\n  return (\n    <div className=\"form\">\n        <Box\n        sx={{\n            '& > :not(style)': { m: 1, width: '25ch' },\n        }}\n        noValidate\n        autoComplete=\"off\"\n        >\n        \n            \n            <form onSubmit={handleSubmit}>\n                <Stack spacing={4}>\n                <Button variant=\"contained\" type=\"submit\" >Get Graph</Button>\n                </Stack>\n                {error && <div className='error' style={{color: \"#cc0000\"}}>{error}</div>}\n            </form>\n        \n        </Box>\n\n        \n\n        \n    </div>\n  )\n}\n\nexport default GetGraphForm;","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/GetForms/GetNodesByLabelForm.js",["106"],[],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/system/Stack';\nimport Button from '@mui/material/Button';\nimport { useState, useEffect} from 'react';\n\nconst GetNodesByLabelForm = ({graph, setGraph}) => {\n    const [label, setLabel] = useState('');\n    const [error, setError] = useState('');\n\n    const handleChange = (event) => {\n        setLabel(event.target.value)\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setError('');\n        const response = await fetch(`http://localhost:9092/get-nodes-by-label?label=${label}`);\n\n        if (response.ok) {\n            const data = await response.json();\n            setGraph({\n                nodes: data.nodes,\n                links: data.links\n            });\n            setLabel(''); \n            console.log(graph);    \n        } else {\n            setError(\"Invalid Input!\")\n        }\n    }\n\n  return (\n    <div className=\"form\">\n        <Box\n        sx={{\n            '& > :not(style)': { m: 1, width: '25ch' },\n        }}\n        noValidate\n        autoComplete=\"off\"\n        >\n        \n            \n            <form onSubmit={handleSubmit}>\n                <Stack spacing={4}>\n                <TextField id=\"filled-basic\" label=\"Label\" variant=\"filled\" type=\"text\" value={label} onChange={handleChange}/>\n                <Button variant=\"contained\" type=\"submit\" >Submit</Button>\n                </Stack>\n                {error && <div className='error' style={{color: \"#cc0000\"}}>{error}</div>}\n            </form>\n        \n        </Box>\n\n        \n\n        \n    </div>\n  )\n}\n\nexport default GetNodesByLabelForm;","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/GetForms/GetNodeByImportIdForm.js",["107"],[],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/VerticalTabPanels/GetVerticalTabPanel.js",[],[],"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/ForceGraph.js",["108","109","110"],[],{"ruleId":"111","severity":1,"message":"112","line":1,"column":16,"nodeType":"113","messageId":"114","endLine":1,"endColumn":24},{"ruleId":"111","severity":1,"message":"115","line":1,"column":26,"nodeType":"113","messageId":"114","endLine":1,"endColumn":35},{"ruleId":"116","severity":1,"message":"117","line":10,"column":39,"nodeType":"118","endLine":10,"endColumn":83},{"ruleId":"119","replacedBy":"120"},{"ruleId":"116","severity":1,"message":"117","line":10,"column":39,"nodeType":"118","endLine":10,"endColumn":83},{"ruleId":"111","severity":1,"message":"115","line":6,"column":20,"nodeType":"113","messageId":"114","endLine":6,"endColumn":29},{"ruleId":"111","severity":1,"message":"115","line":6,"column":20,"nodeType":"113","messageId":"114","endLine":6,"endColumn":29},{"ruleId":"111","severity":1,"message":"115","line":5,"column":20,"nodeType":"113","messageId":"114","endLine":5,"endColumn":29},{"ruleId":"111","severity":1,"message":"115","line":6,"column":20,"nodeType":"113","messageId":"114","endLine":6,"endColumn":29},{"ruleId":"111","severity":1,"message":"115","line":6,"column":20,"nodeType":"113","messageId":"114","endLine":6,"endColumn":29},{"ruleId":"121","severity":1,"message":"122","line":28,"column":6,"nodeType":"123","endLine":28,"endColumn":8,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":187,"column":26,"nodeType":"127","messageId":"128","endLine":205,"endColumn":15,"fix":"129"},{"ruleId":"125","severity":1,"message":"126","line":187,"column":26,"nodeType":"127","messageId":"128","endLine":201,"endColumn":15,"fix":"130"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-new-object",["131"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getSvgContainerSize'. Either include it or remove the dependency array.","ArrayExpression",["132"],"no-whitespace-before-property","Unexpected whitespace before property on.","MemberExpression","unexpectedWhitespace",{"range":"133","text":"134"},{"range":"135","text":"134"},"no-object-constructor",{"desc":"136","fix":"137"},[6741,6743],".",[6583,6585],"Update the dependencies array to be: [getSvgContainerSize]",{"range":"138","text":"139"},[937,939],"[getSvgContainerSize]"]