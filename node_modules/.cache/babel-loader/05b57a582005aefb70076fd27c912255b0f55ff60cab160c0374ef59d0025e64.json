{"ast":null,"code":"// import * as d3 from \"d3\";\n// import styles from \"../components/ForceGraph.css\";\n// import \"@fortawesome/fontawesome-free/css/all.min.css\";\n\n// export function runForceGraph(\n//   container,\n//   linksData,\n//   nodesData,\n//   nodeHoverTooltip\n// ) {\n//   const links = linksData.map((d) => Object.assign({}, d));\n//   const nodes = nodesData.map((d) => Object.assign({}, d));\n\n//   const containerRect = container.getBoundingClientRect();\n//   const height = containerRect.height;\n//   const width = containerRect.width;\n\n//   const color = () => { return \"#9D79A0\"; };\n\n//   const drag = (simulation) => {\n//     const dragstarted = (d) => {\n//       if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n//       d.fx = d.x;\n//       d.fy = d.y;\n//     };\n\n//     const dragged = (d) => {\n//       d.fx = d3.event.x;\n//       d.fy = d3.event.y;\n//     };\n\n//     const dragended = (d) => {\n//       if (!d3.event.active) simulation.alphaTarget(0);\n//       d.fx = null;\n//       d.fy = null;\n//     };\n\n//     return d3\n//       .drag()\n//       .on(\"start\", dragstarted)\n//       .on(\"drag\", dragged)\n//       .on(\"end\", dragended);\n//   };\n\n//   // Add the tooltip element to the graph\n//   const tooltip = document.querySelector(\"#graph-tooltip\");\n//   if (!tooltip) {\n//     const tooltipDiv = document.createElement(\"div\");\n//     tooltipDiv.classList.add(styles.tooltip);\n//     tooltipDiv.style.opacity = \"0\";\n//     tooltipDiv.id = \"graph-tooltip\";\n//     document.body.appendChild(tooltipDiv);\n//   }\n//   const div = d3.select(\"#graph-tooltip\");\n\n//   const addTooltip = (hoverTooltip, d, x, y) => {\n//     div\n//       .transition()\n//       .duration(200)\n//       .style(\"opacity\", 0.9);\n//     div\n//       .html(hoverTooltip(d))\n//       .style(\"left\", `${x}px`)\n//       .style(\"top\", `${y - 28}px`);\n//   };\n\n//   const removeTooltip = () => {\n//     div\n//       .transition()\n//       .duration(200)\n//       .style(\"opacity\", 0);\n//   };\n\n//   const simulation = d3\n//     .forceSimulation(nodes)\n//     .force(\"link\", d3.forceLink(links).id(d => d.id))\n//     .force(\"charge\", d3.forceManyBody().strength(-150))\n//     .force(\"x\", d3.forceX())\n//     .force(\"y\", d3.forceY());\n\n//   const svg = d3\n//     .select(container)\n//     .append(\"svg\")\n//     .attr(\"viewBox\", [-width / 2, -height / 2, width, height])\n//     .call(d3.zoom().on(\"zoom\", function () {\n//       svg.attr(\"transform\", d3.event.transform);\n//     }));\n\n//   const link = svg\n//     .append(\"g\")\n//     .attr(\"stroke\", \"#999\")\n//     .attr(\"stroke-opacity\", 0.6)\n//     .selectAll(\"line\")\n//     .data(links)\n//     .join(\"line\")\n//     .attr(\"stroke-width\", d => Math.sqrt(d.value));\n\n//   const node = svg\n//     .append(\"g\")\n//     .attr(\"stroke\", \"#fff\")\n//     .attr(\"stroke-width\", 2)\n//     .selectAll(\"circle\")\n//     .data(nodes)\n//     .join(\"circle\")\n//     .attr(\"r\", 12)\n//     .attr(\"fill\", color)\n//     .call(drag(simulation))\n//     .text(\"labels\");\n\n//   const label = svg.append(\"g\")\n//     .attr(\"class\", \"labels\")\n//     .selectAll(\"text\")\n//     .data(nodes)\n//     .enter()\n//     .append(\"text\")\n//     .attr('text-anchor', 'middle')\n//     .attr('dominant-baseline', 'central')\n//     .text(d => {return d.id;})\n//     .call(drag(simulation));\n\n//   label.on(\"mouseover\", (d) => {\n//     addTooltip(nodeHoverTooltip, d, d3.event.pageX, d3.event.pageY);\n//   })\n//     .on(\"mouseout\", () => {\n//       removeTooltip();\n//     });\n\n//   simulation.on(\"tick\", () => {\n//     //update link positions\n//     link\n//       .attr(\"x1\", d => d.source.x)\n//       .attr(\"y1\", d => d.source.y)\n//       .attr(\"x2\", d => d.target.x)\n//       .attr(\"y2\", d => d.target.y);\n\n//     // update node positions\n//     node\n//       .attr(\"cx\", d => d.x)\n//       .attr(\"cy\", d => d.y);\n\n//     // update label positions\n//     label\n//       .attr(\"x\", d => { return d.x; })\n//       .attr(\"y\", d => { return d.y; })\n//   });\n\n//   return {\n//     destroy: () => {\n//       simulation.stop();\n//     },\n//     nodes: () => {\n//       return svg.node();\n//     }\n//   };\n// }\nimport * as d3 from \"d3\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport styles from \"./forceGraph.module.css\";\nexport function runForceGraph(container, linksData, nodesData, nodeHoverTooltip) {\n  const links = linksData.map(d => Object.assign({}, d));\n  const nodes = nodesData.map(d => Object.assign({}, d));\n  const containerRect = container.getBoundingClientRect();\n  const height = containerRect.height;\n  const width = containerRect.width;\n  const color = () => {\n    return \"#9D79A0\";\n  };\n  const icon = d => {\n    return d.gender === \"male\" ? \"\\uf222\" : \"\\uf221\";\n  };\n  const getClass = d => {\n    return d.gender === \"male\" ? styles.male : styles.female;\n  };\n  const drag = simulation => {\n    const dragstarted = d => {\n      if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    };\n    const dragged = d => {\n      d.fx = d3.event.x;\n      d.fy = d3.event.y;\n    };\n    const dragended = d => {\n      if (!d3.event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    };\n    return d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended);\n  };\n\n  // Add the tooltip element to the graph\n  const tooltip = document.querySelector(\"#graph-tooltip\");\n  if (!tooltip) {\n    const tooltipDiv = document.createElement(\"div\");\n    tooltipDiv.classList.add(styles.tooltip);\n    tooltipDiv.style.opacity = \"0\";\n    tooltipDiv.id = \"graph-tooltip\";\n    document.body.appendChild(tooltipDiv);\n  }\n  const div = d3.select(\"#graph-tooltip\");\n  const addTooltip = (hoverTooltip, d, x, y) => {\n    div.transition().duration(200).style(\"opacity\", 0.9);\n    div.html(hoverTooltip(d)).style(\"left\", `${x}px`).style(\"top\", `${y - 28}px`);\n  };\n  const removeTooltip = () => {\n    div.transition().duration(200).style(\"opacity\", 0);\n  };\n  const simulation = d3.forceSimulation(nodes).force(\"link\", d3.forceLink(links).id(d => d.id)).force(\"charge\", d3.forceManyBody().strength(-150)).force(\"x\", d3.forceX()).force(\"y\", d3.forceY());\n  const svg = d3.select(container).append(\"svg\").attr(\"viewBox\", [-width / 2, -height / 2, width, height]).call(d3.zoom().on(\"zoom\", function () {\n    svg.attr(\"transform\", d3.event.transform);\n  }));\n  const link = svg.append(\"g\").attr(\"stroke\", \"#999\").attr(\"stroke-opacity\", 0.6).selectAll(\"line\").data(links).join(\"line\").attr(\"stroke-width\", d => Math.sqrt(d.value));\n  const node = svg.append(\"g\").attr(\"stroke\", \"#fff\").attr(\"stroke-width\", 2).selectAll(\"circle\").data(nodes).join(\"circle\").attr(\"r\", 12).attr(\"fill\", color).call(drag(simulation));\n  const label = svg.append(\"g\").attr(\"class\", \"labels\").selectAll(\"text\").data(nodes).enter().append(\"text\").attr('text-anchor', 'middle').attr('dominant-baseline', 'central').attr(\"class\", d => `fa ${getClass(d)}`).text(d => {\n    return icon(d);\n  }).call(drag(simulation));\n  label.on(\"mouseover\", d => {\n    addTooltip(nodeHoverTooltip, d, d3.event.pageX, d3.event.pageY);\n  }).on(\"mouseout\", () => {\n    removeTooltip();\n  });\n  simulation.on(\"tick\", () => {\n    //update link positions\n    link.attr(\"x1\", d => d.source.x).attr(\"y1\", d => d.source.y).attr(\"x2\", d => d.target.x).attr(\"y2\", d => d.target.y);\n\n    // update node positions\n    node.attr(\"cx\", d => d.x).attr(\"cy\", d => d.y);\n\n    // update label positions\n    label.attr(\"x\", d => {\n      return d.x;\n    }).attr(\"y\", d => {\n      return d.y;\n    });\n  });\n  return {\n    destroy: () => {\n      simulation.stop();\n    },\n    nodes: () => {\n      return svg.node();\n    }\n  };\n}","map":{"version":3,"names":["d3","styles","runForceGraph","container","linksData","nodesData","nodeHoverTooltip","links","map","d","Object","assign","nodes","containerRect","getBoundingClientRect","height","width","color","icon","gender","getClass","male","female","drag","simulation","dragstarted","event","active","alphaTarget","restart","fx","x","fy","y","dragged","dragended","on","tooltip","document","querySelector","tooltipDiv","createElement","classList","add","style","opacity","id","body","appendChild","div","select","addTooltip","hoverTooltip","transition","duration","html","removeTooltip","forceSimulation","force","forceLink","forceManyBody","strength","forceX","forceY","svg","append","attr","call","zoom","transform","link","selectAll","data","join","Math","sqrt","value","node","label","enter","text","pageX","pageY","source","target","destroy","stop"],"sources":["/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/ForceGraphGenerator.js"],"sourcesContent":["\n// import * as d3 from \"d3\";\n// import styles from \"../components/ForceGraph.css\";\n// import \"@fortawesome/fontawesome-free/css/all.min.css\";\n\n// export function runForceGraph(\n//   container,\n//   linksData,\n//   nodesData,\n//   nodeHoverTooltip\n// ) {\n//   const links = linksData.map((d) => Object.assign({}, d));\n//   const nodes = nodesData.map((d) => Object.assign({}, d));\n\n//   const containerRect = container.getBoundingClientRect();\n//   const height = containerRect.height;\n//   const width = containerRect.width;\n\n//   const color = () => { return \"#9D79A0\"; };\n\n//   const drag = (simulation) => {\n//     const dragstarted = (d) => {\n//       if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n//       d.fx = d.x;\n//       d.fy = d.y;\n//     };\n\n//     const dragged = (d) => {\n//       d.fx = d3.event.x;\n//       d.fy = d3.event.y;\n//     };\n\n//     const dragended = (d) => {\n//       if (!d3.event.active) simulation.alphaTarget(0);\n//       d.fx = null;\n//       d.fy = null;\n//     };\n\n//     return d3\n//       .drag()\n//       .on(\"start\", dragstarted)\n//       .on(\"drag\", dragged)\n//       .on(\"end\", dragended);\n//   };\n\n//   // Add the tooltip element to the graph\n//   const tooltip = document.querySelector(\"#graph-tooltip\");\n//   if (!tooltip) {\n//     const tooltipDiv = document.createElement(\"div\");\n//     tooltipDiv.classList.add(styles.tooltip);\n//     tooltipDiv.style.opacity = \"0\";\n//     tooltipDiv.id = \"graph-tooltip\";\n//     document.body.appendChild(tooltipDiv);\n//   }\n//   const div = d3.select(\"#graph-tooltip\");\n\n//   const addTooltip = (hoverTooltip, d, x, y) => {\n//     div\n//       .transition()\n//       .duration(200)\n//       .style(\"opacity\", 0.9);\n//     div\n//       .html(hoverTooltip(d))\n//       .style(\"left\", `${x}px`)\n//       .style(\"top\", `${y - 28}px`);\n//   };\n\n//   const removeTooltip = () => {\n//     div\n//       .transition()\n//       .duration(200)\n//       .style(\"opacity\", 0);\n//   };\n\n//   const simulation = d3\n//     .forceSimulation(nodes)\n//     .force(\"link\", d3.forceLink(links).id(d => d.id))\n//     .force(\"charge\", d3.forceManyBody().strength(-150))\n//     .force(\"x\", d3.forceX())\n//     .force(\"y\", d3.forceY());\n\n//   const svg = d3\n//     .select(container)\n//     .append(\"svg\")\n//     .attr(\"viewBox\", [-width / 2, -height / 2, width, height])\n//     .call(d3.zoom().on(\"zoom\", function () {\n//       svg.attr(\"transform\", d3.event.transform);\n//     }));\n\n//   const link = svg\n//     .append(\"g\")\n//     .attr(\"stroke\", \"#999\")\n//     .attr(\"stroke-opacity\", 0.6)\n//     .selectAll(\"line\")\n//     .data(links)\n//     .join(\"line\")\n//     .attr(\"stroke-width\", d => Math.sqrt(d.value));\n\n//   const node = svg\n//     .append(\"g\")\n//     .attr(\"stroke\", \"#fff\")\n//     .attr(\"stroke-width\", 2)\n//     .selectAll(\"circle\")\n//     .data(nodes)\n//     .join(\"circle\")\n//     .attr(\"r\", 12)\n//     .attr(\"fill\", color)\n//     .call(drag(simulation))\n//     .text(\"labels\");\n\n//   const label = svg.append(\"g\")\n//     .attr(\"class\", \"labels\")\n//     .selectAll(\"text\")\n//     .data(nodes)\n//     .enter()\n//     .append(\"text\")\n//     .attr('text-anchor', 'middle')\n//     .attr('dominant-baseline', 'central')\n//     .text(d => {return d.id;})\n//     .call(drag(simulation));\n\n//   label.on(\"mouseover\", (d) => {\n//     addTooltip(nodeHoverTooltip, d, d3.event.pageX, d3.event.pageY);\n//   })\n//     .on(\"mouseout\", () => {\n//       removeTooltip();\n//     });\n\n//   simulation.on(\"tick\", () => {\n//     //update link positions\n//     link\n//       .attr(\"x1\", d => d.source.x)\n//       .attr(\"y1\", d => d.source.y)\n//       .attr(\"x2\", d => d.target.x)\n//       .attr(\"y2\", d => d.target.y);\n\n//     // update node positions\n//     node\n//       .attr(\"cx\", d => d.x)\n//       .attr(\"cy\", d => d.y);\n\n//     // update label positions\n//     label\n//       .attr(\"x\", d => { return d.x; })\n//       .attr(\"y\", d => { return d.y; })\n//   });\n\n//   return {\n//     destroy: () => {\n//       simulation.stop();\n//     },\n//     nodes: () => {\n//       return svg.node();\n//     }\n//   };\n// }\nimport * as d3 from \"d3\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport styles from \"./forceGraph.module.css\";\n\nexport function runForceGraph(\n  container,\n  linksData,\n  nodesData,\n  nodeHoverTooltip\n) {\n  const links = linksData.map((d) => Object.assign({}, d));\n  const nodes = nodesData.map((d) => Object.assign({}, d));\n\n  const containerRect = container.getBoundingClientRect();\n  const height = containerRect.height;\n  const width = containerRect.width;\n\n  const color = () => { return \"#9D79A0\"; };\n\n  const icon = (d) => {\n    return d.gender === \"male\" ? \"\\uf222\" : \"\\uf221\";\n  }\n\n  const getClass = (d) => {\n    return d.gender === \"male\" ? styles.male : styles.female;\n  };\n\n  const drag = (simulation) => {\n    const dragstarted = (d) => {\n      if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    };\n\n    const dragged = (d) => {\n      d.fx = d3.event.x;\n      d.fy = d3.event.y;\n    };\n\n    const dragended = (d) => {\n      if (!d3.event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    };\n\n    return d3\n      .drag()\n      .on(\"start\", dragstarted)\n      .on(\"drag\", dragged)\n      .on(\"end\", dragended);\n  };\n\n  // Add the tooltip element to the graph\n  const tooltip = document.querySelector(\"#graph-tooltip\");\n  if (!tooltip) {\n    const tooltipDiv = document.createElement(\"div\");\n    tooltipDiv.classList.add(styles.tooltip);\n    tooltipDiv.style.opacity = \"0\";\n    tooltipDiv.id = \"graph-tooltip\";\n    document.body.appendChild(tooltipDiv);\n  }\n  const div = d3.select(\"#graph-tooltip\");\n\n  const addTooltip = (hoverTooltip, d, x, y) => {\n    div\n      .transition()\n      .duration(200)\n      .style(\"opacity\", 0.9);\n    div\n      .html(hoverTooltip(d))\n      .style(\"left\", `${x}px`)\n      .style(\"top\", `${y - 28}px`);\n  };\n\n  const removeTooltip = () => {\n    div\n      .transition()\n      .duration(200)\n      .style(\"opacity\", 0);\n  };\n\n  const simulation = d3\n    .forceSimulation(nodes)\n    .force(\"link\", d3.forceLink(links).id(d => d.id))\n    .force(\"charge\", d3.forceManyBody().strength(-150))\n    .force(\"x\", d3.forceX())\n    .force(\"y\", d3.forceY());\n\n  const svg = d3\n    .select(container)\n    .append(\"svg\")\n    .attr(\"viewBox\", [-width / 2, -height / 2, width, height])\n    .call(d3.zoom().on(\"zoom\", function () {\n      svg.attr(\"transform\", d3.event.transform);\n    }));\n\n  const link = svg\n    .append(\"g\")\n    .attr(\"stroke\", \"#999\")\n    .attr(\"stroke-opacity\", 0.6)\n    .selectAll(\"line\")\n    .data(links)\n    .join(\"line\")\n    .attr(\"stroke-width\", d => Math.sqrt(d.value));\n\n  const node = svg\n    .append(\"g\")\n    .attr(\"stroke\", \"#fff\")\n    .attr(\"stroke-width\", 2)\n    .selectAll(\"circle\")\n    .data(nodes)\n    .join(\"circle\")\n    .attr(\"r\", 12)\n    .attr(\"fill\", color)\n    .call(drag(simulation));\n\n  const label = svg.append(\"g\")\n    .attr(\"class\", \"labels\")\n    .selectAll(\"text\")\n    .data(nodes)\n    .enter()\n    .append(\"text\")\n    .attr('text-anchor', 'middle')\n    .attr('dominant-baseline', 'central')\n    .attr(\"class\", d => `fa ${getClass(d)}`)\n    .text(d => {return icon(d);})\n    .call(drag(simulation));\n\n  label.on(\"mouseover\", (d) => {\n    addTooltip(nodeHoverTooltip, d, d3.event.pageX, d3.event.pageY);\n  })\n    .on(\"mouseout\", () => {\n      removeTooltip();\n    });\n\n  simulation.on(\"tick\", () => {\n    //update link positions\n    link\n      .attr(\"x1\", d => d.source.x)\n      .attr(\"y1\", d => d.source.y)\n      .attr(\"x2\", d => d.target.x)\n      .attr(\"y2\", d => d.target.y);\n\n    // update node positions\n    node\n      .attr(\"cx\", d => d.x)\n      .attr(\"cy\", d => d.y);\n\n    // update label positions\n    label\n      .attr(\"x\", d => { return d.x; })\n      .attr(\"y\", d => { return d.y; })\n  });\n\n  return {\n    destroy: () => {\n      simulation.stop();\n    },\n    nodes: () => {\n      return svg.node();\n    }\n  };\n}"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}