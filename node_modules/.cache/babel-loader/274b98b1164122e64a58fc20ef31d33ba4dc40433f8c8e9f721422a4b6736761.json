{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Sigma.js Camera Class\n * ======================\n *\n * Class designed to store camera information & used to update it.\n * @module\n */\nvar animate_1 = require(\"../utils/animate\");\nvar easings_1 = __importDefault(require(\"../utils/easings\"));\nvar utils_1 = require(\"../utils\");\nvar types_1 = require(\"../types\");\n/**\n * Defaults.\n */\nvar DEFAULT_ZOOMING_RATIO = 1.5;\n/**\n * Camera class\n *\n * @constructor\n */\nvar Camera = /** @class */function (_super) {\n  __extends(Camera, _super);\n  function Camera() {\n    var _this = _super.call(this) || this;\n    _this.x = 0.5;\n    _this.y = 0.5;\n    _this.angle = 0;\n    _this.ratio = 1;\n    _this.minRatio = null;\n    _this.maxRatio = null;\n    _this.nextFrame = null;\n    _this.previousState = null;\n    _this.enabled = true;\n    // State\n    _this.previousState = _this.getState();\n    return _this;\n  }\n  /**\n   * Static method used to create a Camera object with a given state.\n   *\n   * @param state\n   * @return {Camera}\n   */\n  Camera.from = function (state) {\n    var camera = new Camera();\n    return camera.setState(state);\n  };\n  /**\n   * Method used to enable the camera.\n   *\n   * @return {Camera}\n   */\n  Camera.prototype.enable = function () {\n    this.enabled = true;\n    return this;\n  };\n  /**\n   * Method used to disable the camera.\n   *\n   * @return {Camera}\n   */\n  Camera.prototype.disable = function () {\n    this.enabled = false;\n    return this;\n  };\n  /**\n   * Method used to retrieve the camera's current state.\n   *\n   * @return {object}\n   */\n  Camera.prototype.getState = function () {\n    return {\n      x: this.x,\n      y: this.y,\n      angle: this.angle,\n      ratio: this.ratio\n    };\n  };\n  /**\n   * Method used to check whether the camera has the given state.\n   *\n   * @return {object}\n   */\n  Camera.prototype.hasState = function (state) {\n    return this.x === state.x && this.y === state.y && this.ratio === state.ratio && this.angle === state.angle;\n  };\n  /**\n   * Method used to retrieve the camera's previous state.\n   *\n   * @return {object}\n   */\n  Camera.prototype.getPreviousState = function () {\n    var state = this.previousState;\n    if (!state) return null;\n    return {\n      x: state.x,\n      y: state.y,\n      angle: state.angle,\n      ratio: state.ratio\n    };\n  };\n  /**\n   * Method used to check minRatio and maxRatio values.\n   *\n   * @param ratio\n   * @return {number}\n   */\n  Camera.prototype.getBoundedRatio = function (ratio) {\n    var r = ratio;\n    if (typeof this.minRatio === \"number\") r = Math.max(r, this.minRatio);\n    if (typeof this.maxRatio === \"number\") r = Math.min(r, this.maxRatio);\n    return r;\n  };\n  /**\n   * Method used to check various things to return a legit state candidate.\n   *\n   * @param state\n   * @return {object}\n   */\n  Camera.prototype.validateState = function (state) {\n    var validatedState = {};\n    if (typeof state.x === \"number\") validatedState.x = state.x;\n    if (typeof state.y === \"number\") validatedState.y = state.y;\n    if (typeof state.angle === \"number\") validatedState.angle = state.angle;\n    if (typeof state.ratio === \"number\") validatedState.ratio = this.getBoundedRatio(state.ratio);\n    return validatedState;\n  };\n  /**\n   * Method used to check whether the camera is currently being animated.\n   *\n   * @return {boolean}\n   */\n  Camera.prototype.isAnimated = function () {\n    return !!this.nextFrame;\n  };\n  /**\n   * Method used to set the camera's state.\n   *\n   * @param  {object} state - New state.\n   * @return {Camera}\n   */\n  Camera.prototype.setState = function (state) {\n    if (!this.enabled) return this;\n    // TODO: update by function\n    // Keeping track of last state\n    this.previousState = this.getState();\n    var validState = this.validateState(state);\n    if (typeof validState.x === \"number\") this.x = validState.x;\n    if (typeof validState.y === \"number\") this.y = validState.y;\n    if (typeof validState.angle === \"number\") this.angle = validState.angle;\n    if (typeof validState.ratio === \"number\") this.ratio = validState.ratio;\n    // Emitting\n    if (!this.hasState(this.previousState)) this.emit(\"updated\", this.getState());\n    return this;\n  };\n  /**\n   * Method used to update the camera's state using a function.\n   *\n   * @param  {function} updater - Updated function taking current state and\n   *                              returning next state.\n   * @return {Camera}\n   */\n  Camera.prototype.updateState = function (updater) {\n    this.setState(updater(this.getState()));\n    return this;\n  };\n  /**\n   * Method used to animate the camera.\n   *\n   * @param  {object}                    state      - State to reach eventually.\n   * @param  {object}                    opts       - Options:\n   * @param  {number}                      duration - Duration of the animation.\n   * @param  {string | number => number}   easing   - Easing function or name of an existing one\n   * @param  {function}                  callback   - Callback\n   */\n  Camera.prototype.animate = function (state, opts, callback) {\n    var _this = this;\n    if (!this.enabled) return;\n    var options = Object.assign({}, animate_1.ANIMATE_DEFAULTS, opts);\n    var validState = this.validateState(state);\n    var easing = typeof options.easing === \"function\" ? options.easing : easings_1.default[options.easing];\n    // State\n    var start = Date.now(),\n      initialState = this.getState();\n    // Function performing the animation\n    var fn = function () {\n      var t = (Date.now() - start) / options.duration;\n      // The animation is over:\n      if (t >= 1) {\n        _this.nextFrame = null;\n        _this.setState(validState);\n        if (_this.animationCallback) {\n          _this.animationCallback.call(null);\n          _this.animationCallback = undefined;\n        }\n        return;\n      }\n      var coefficient = easing(t);\n      var newState = {};\n      if (typeof validState.x === \"number\") newState.x = initialState.x + (validState.x - initialState.x) * coefficient;\n      if (typeof validState.y === \"number\") newState.y = initialState.y + (validState.y - initialState.y) * coefficient;\n      if (typeof validState.angle === \"number\") newState.angle = initialState.angle + (validState.angle - initialState.angle) * coefficient;\n      if (typeof validState.ratio === \"number\") newState.ratio = initialState.ratio + (validState.ratio - initialState.ratio) * coefficient;\n      _this.setState(newState);\n      _this.nextFrame = (0, utils_1.requestFrame)(fn);\n    };\n    if (this.nextFrame) {\n      (0, utils_1.cancelFrame)(this.nextFrame);\n      if (this.animationCallback) this.animationCallback.call(null);\n      this.nextFrame = (0, utils_1.requestFrame)(fn);\n    } else {\n      fn();\n    }\n    this.animationCallback = callback;\n  };\n  /**\n   * Method used to zoom the camera.\n   *\n   * @param  {number|object} factorOrOptions - Factor or options.\n   * @return {function}\n   */\n  Camera.prototype.animatedZoom = function (factorOrOptions) {\n    if (!factorOrOptions) {\n      this.animate({\n        ratio: this.ratio / DEFAULT_ZOOMING_RATIO\n      });\n    } else {\n      if (typeof factorOrOptions === \"number\") return this.animate({\n        ratio: this.ratio / factorOrOptions\n      });else this.animate({\n        ratio: this.ratio / (factorOrOptions.factor || DEFAULT_ZOOMING_RATIO)\n      }, factorOrOptions);\n    }\n  };\n  /**\n   * Method used to unzoom the camera.\n   *\n   * @param  {number|object} factorOrOptions - Factor or options.\n   */\n  Camera.prototype.animatedUnzoom = function (factorOrOptions) {\n    if (!factorOrOptions) {\n      this.animate({\n        ratio: this.ratio * DEFAULT_ZOOMING_RATIO\n      });\n    } else {\n      if (typeof factorOrOptions === \"number\") return this.animate({\n        ratio: this.ratio * factorOrOptions\n      });else this.animate({\n        ratio: this.ratio * (factorOrOptions.factor || DEFAULT_ZOOMING_RATIO)\n      }, factorOrOptions);\n    }\n  };\n  /**\n   * Method used to reset the camera.\n   *\n   * @param  {object} options - Options.\n   */\n  Camera.prototype.animatedReset = function (options) {\n    this.animate({\n      x: 0.5,\n      y: 0.5,\n      ratio: 1,\n      angle: 0\n    }, options);\n  };\n  /**\n   * Returns a new Camera instance, with the same state as the current camera.\n   *\n   * @return {Camera}\n   */\n  Camera.prototype.copy = function () {\n    return Camera.from(this.getState());\n  };\n  return Camera;\n}(types_1.TypedEventEmitter);\nexports.default = Camera;","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__importDefault","mod","__esModule","defineProperty","exports","value","animate_1","require","easings_1","utils_1","types_1","DEFAULT_ZOOMING_RATIO","Camera","_super","_this","x","y","angle","ratio","minRatio","maxRatio","nextFrame","previousState","enabled","getState","from","state","camera","setState","enable","disable","hasState","getPreviousState","getBoundedRatio","r","Math","max","min","validateState","validatedState","isAnimated","validState","emit","updateState","updater","animate","opts","callback","options","assign","ANIMATE_DEFAULTS","easing","default","start","Date","now","initialState","fn","t","duration","animationCallback","undefined","coefficient","newState","requestFrame","cancelFrame","animatedZoom","factorOrOptions","factor","animatedUnzoom","animatedReset","copy","TypedEventEmitter"],"sources":["/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/node_modules/sigma/core/camera.js"],"sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Sigma.js Camera Class\n * ======================\n *\n * Class designed to store camera information & used to update it.\n * @module\n */\nvar animate_1 = require(\"../utils/animate\");\nvar easings_1 = __importDefault(require(\"../utils/easings\"));\nvar utils_1 = require(\"../utils\");\nvar types_1 = require(\"../types\");\n/**\n * Defaults.\n */\nvar DEFAULT_ZOOMING_RATIO = 1.5;\n/**\n * Camera class\n *\n * @constructor\n */\nvar Camera = /** @class */ (function (_super) {\n    __extends(Camera, _super);\n    function Camera() {\n        var _this = _super.call(this) || this;\n        _this.x = 0.5;\n        _this.y = 0.5;\n        _this.angle = 0;\n        _this.ratio = 1;\n        _this.minRatio = null;\n        _this.maxRatio = null;\n        _this.nextFrame = null;\n        _this.previousState = null;\n        _this.enabled = true;\n        // State\n        _this.previousState = _this.getState();\n        return _this;\n    }\n    /**\n     * Static method used to create a Camera object with a given state.\n     *\n     * @param state\n     * @return {Camera}\n     */\n    Camera.from = function (state) {\n        var camera = new Camera();\n        return camera.setState(state);\n    };\n    /**\n     * Method used to enable the camera.\n     *\n     * @return {Camera}\n     */\n    Camera.prototype.enable = function () {\n        this.enabled = true;\n        return this;\n    };\n    /**\n     * Method used to disable the camera.\n     *\n     * @return {Camera}\n     */\n    Camera.prototype.disable = function () {\n        this.enabled = false;\n        return this;\n    };\n    /**\n     * Method used to retrieve the camera's current state.\n     *\n     * @return {object}\n     */\n    Camera.prototype.getState = function () {\n        return {\n            x: this.x,\n            y: this.y,\n            angle: this.angle,\n            ratio: this.ratio,\n        };\n    };\n    /**\n     * Method used to check whether the camera has the given state.\n     *\n     * @return {object}\n     */\n    Camera.prototype.hasState = function (state) {\n        return this.x === state.x && this.y === state.y && this.ratio === state.ratio && this.angle === state.angle;\n    };\n    /**\n     * Method used to retrieve the camera's previous state.\n     *\n     * @return {object}\n     */\n    Camera.prototype.getPreviousState = function () {\n        var state = this.previousState;\n        if (!state)\n            return null;\n        return {\n            x: state.x,\n            y: state.y,\n            angle: state.angle,\n            ratio: state.ratio,\n        };\n    };\n    /**\n     * Method used to check minRatio and maxRatio values.\n     *\n     * @param ratio\n     * @return {number}\n     */\n    Camera.prototype.getBoundedRatio = function (ratio) {\n        var r = ratio;\n        if (typeof this.minRatio === \"number\")\n            r = Math.max(r, this.minRatio);\n        if (typeof this.maxRatio === \"number\")\n            r = Math.min(r, this.maxRatio);\n        return r;\n    };\n    /**\n     * Method used to check various things to return a legit state candidate.\n     *\n     * @param state\n     * @return {object}\n     */\n    Camera.prototype.validateState = function (state) {\n        var validatedState = {};\n        if (typeof state.x === \"number\")\n            validatedState.x = state.x;\n        if (typeof state.y === \"number\")\n            validatedState.y = state.y;\n        if (typeof state.angle === \"number\")\n            validatedState.angle = state.angle;\n        if (typeof state.ratio === \"number\")\n            validatedState.ratio = this.getBoundedRatio(state.ratio);\n        return validatedState;\n    };\n    /**\n     * Method used to check whether the camera is currently being animated.\n     *\n     * @return {boolean}\n     */\n    Camera.prototype.isAnimated = function () {\n        return !!this.nextFrame;\n    };\n    /**\n     * Method used to set the camera's state.\n     *\n     * @param  {object} state - New state.\n     * @return {Camera}\n     */\n    Camera.prototype.setState = function (state) {\n        if (!this.enabled)\n            return this;\n        // TODO: update by function\n        // Keeping track of last state\n        this.previousState = this.getState();\n        var validState = this.validateState(state);\n        if (typeof validState.x === \"number\")\n            this.x = validState.x;\n        if (typeof validState.y === \"number\")\n            this.y = validState.y;\n        if (typeof validState.angle === \"number\")\n            this.angle = validState.angle;\n        if (typeof validState.ratio === \"number\")\n            this.ratio = validState.ratio;\n        // Emitting\n        if (!this.hasState(this.previousState))\n            this.emit(\"updated\", this.getState());\n        return this;\n    };\n    /**\n     * Method used to update the camera's state using a function.\n     *\n     * @param  {function} updater - Updated function taking current state and\n     *                              returning next state.\n     * @return {Camera}\n     */\n    Camera.prototype.updateState = function (updater) {\n        this.setState(updater(this.getState()));\n        return this;\n    };\n    /**\n     * Method used to animate the camera.\n     *\n     * @param  {object}                    state      - State to reach eventually.\n     * @param  {object}                    opts       - Options:\n     * @param  {number}                      duration - Duration of the animation.\n     * @param  {string | number => number}   easing   - Easing function or name of an existing one\n     * @param  {function}                  callback   - Callback\n     */\n    Camera.prototype.animate = function (state, opts, callback) {\n        var _this = this;\n        if (!this.enabled)\n            return;\n        var options = Object.assign({}, animate_1.ANIMATE_DEFAULTS, opts);\n        var validState = this.validateState(state);\n        var easing = typeof options.easing === \"function\" ? options.easing : easings_1.default[options.easing];\n        // State\n        var start = Date.now(), initialState = this.getState();\n        // Function performing the animation\n        var fn = function () {\n            var t = (Date.now() - start) / options.duration;\n            // The animation is over:\n            if (t >= 1) {\n                _this.nextFrame = null;\n                _this.setState(validState);\n                if (_this.animationCallback) {\n                    _this.animationCallback.call(null);\n                    _this.animationCallback = undefined;\n                }\n                return;\n            }\n            var coefficient = easing(t);\n            var newState = {};\n            if (typeof validState.x === \"number\")\n                newState.x = initialState.x + (validState.x - initialState.x) * coefficient;\n            if (typeof validState.y === \"number\")\n                newState.y = initialState.y + (validState.y - initialState.y) * coefficient;\n            if (typeof validState.angle === \"number\")\n                newState.angle = initialState.angle + (validState.angle - initialState.angle) * coefficient;\n            if (typeof validState.ratio === \"number\")\n                newState.ratio = initialState.ratio + (validState.ratio - initialState.ratio) * coefficient;\n            _this.setState(newState);\n            _this.nextFrame = (0, utils_1.requestFrame)(fn);\n        };\n        if (this.nextFrame) {\n            (0, utils_1.cancelFrame)(this.nextFrame);\n            if (this.animationCallback)\n                this.animationCallback.call(null);\n            this.nextFrame = (0, utils_1.requestFrame)(fn);\n        }\n        else {\n            fn();\n        }\n        this.animationCallback = callback;\n    };\n    /**\n     * Method used to zoom the camera.\n     *\n     * @param  {number|object} factorOrOptions - Factor or options.\n     * @return {function}\n     */\n    Camera.prototype.animatedZoom = function (factorOrOptions) {\n        if (!factorOrOptions) {\n            this.animate({ ratio: this.ratio / DEFAULT_ZOOMING_RATIO });\n        }\n        else {\n            if (typeof factorOrOptions === \"number\")\n                return this.animate({ ratio: this.ratio / factorOrOptions });\n            else\n                this.animate({\n                    ratio: this.ratio / (factorOrOptions.factor || DEFAULT_ZOOMING_RATIO),\n                }, factorOrOptions);\n        }\n    };\n    /**\n     * Method used to unzoom the camera.\n     *\n     * @param  {number|object} factorOrOptions - Factor or options.\n     */\n    Camera.prototype.animatedUnzoom = function (factorOrOptions) {\n        if (!factorOrOptions) {\n            this.animate({ ratio: this.ratio * DEFAULT_ZOOMING_RATIO });\n        }\n        else {\n            if (typeof factorOrOptions === \"number\")\n                return this.animate({ ratio: this.ratio * factorOrOptions });\n            else\n                this.animate({\n                    ratio: this.ratio * (factorOrOptions.factor || DEFAULT_ZOOMING_RATIO),\n                }, factorOrOptions);\n        }\n    };\n    /**\n     * Method used to reset the camera.\n     *\n     * @param  {object} options - Options.\n     */\n    Camera.prototype.animatedReset = function (options) {\n        this.animate({\n            x: 0.5,\n            y: 0.5,\n            ratio: 1,\n            angle: 0,\n        }, options);\n    };\n    /**\n     * Returns a new Camera instance, with the same state as the current camera.\n     *\n     * @return {Camera}\n     */\n    Camera.prototype.copy = function () {\n        return Camera.from(this.getState());\n    };\n    return Camera;\n}(types_1.TypedEventEmitter));\nexports.default = Camera;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}