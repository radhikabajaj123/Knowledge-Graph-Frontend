{"ast":null,"code":"var _jsxFileName = \"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/OutputWindow.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport Card from '../components/Card';\nimport Box from '@mui/material/Box';\nimport NetworkDiagramGenerator from './NetworkDiagramGenerator';\nimport React, { useRef } from \"react\";\nimport useDimensions from \"./useDimensions\";\nimport { TransformComponent, TransformWrapper } from 'react-zoom-pan-pinch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OutputWindow = ({\n  graph\n}) => {\n  _s();\n  const divRef = useRef(null);\n  const {\n    height,\n    width\n  } = useDimensions(divRef);\n  if (graph.links && graph.nodes) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 8\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        style: {\n          backgroundColor: \"#F2F1F1\"\n        },\n        ref: divRef,\n        children: /*#__PURE__*/_jsxDEV(TransformWrapper, {\n          children: /*#__PURE__*/_jsxDEV(TransformComponent, {\n            children: /*#__PURE__*/_jsxDEV(NetworkDiagramGenerator, {\n              graph: graph,\n              width: width,\n              height: height\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  }\n  // useEffect(() => {\n  //     async function displayData() {\n  //         return (\n  //             <Box sx={{p: 8}}>\n  //                 <Card graph={graph}/>\n  //             </Box>\n  //         )\n  //     }\n  //     return displayData;\n  // }, [graph])\n};\n_s(OutputWindow, \"TMKOntLvGSskfRvis3u4Z4yvf5E=\", false, function () {\n  return [useDimensions];\n});\n_c = OutputWindow;\nexport default OutputWindow;\nvar _c;\n$RefreshReg$(_c, \"OutputWindow\");","map":{"version":3,"names":["useEffect","Card","Box","NetworkDiagramGenerator","React","useRef","useDimensions","TransformComponent","TransformWrapper","jsxDEV","_jsxDEV","OutputWindow","graph","_s","divRef","height","width","links","nodes","sx","p","children","style","backgroundColor","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/OutputWindow.js"],"sourcesContent":["import { useEffect } from 'react';\nimport Card from '../components/Card'\nimport Box from '@mui/material/Box';\nimport NetworkDiagramGenerator from './NetworkDiagramGenerator';\nimport React, { useRef } from \"react\";\nimport useDimensions from \"./useDimensions\";\nimport { TransformComponent, TransformWrapper } from 'react-zoom-pan-pinch';\n\n\nconst OutputWindow = ({graph}) => {\n    const divRef = useRef(null);\n    const { height, width} = useDimensions(divRef);\n    if (graph.links && graph.nodes){\n        return (\n            <Box sx={{p: 8}}>\n                <Box style={{backgroundColor: \"#F2F1F1\"}} ref={divRef}>\n                    <TransformWrapper>\n                        <TransformComponent>\n                            <NetworkDiagramGenerator graph={graph} width={width} height={height}/>\n                        </TransformComponent>\n                    </TransformWrapper>\n                </Box>\n            </Box>\n            \n        )\n    }\n    // useEffect(() => {\n    //     async function displayData() {\n    //         return (\n    //             <Box sx={{p: 8}}>\n    //                 <Card graph={graph}/>\n    //             </Box>\n    //         )\n    //     }\n    //     return displayData;\n    // }, [graph])\n\n}\n\nexport default OutputWindow"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,uBAAuB,MAAM,2BAA2B;AAC/D,OAAOC,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,SAASC,kBAAkB,EAAEC,gBAAgB,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5E,MAAMC,YAAY,GAAGA,CAAC;EAACC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC9B,MAAMC,MAAM,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAM;IAAEU,MAAM;IAAEC;EAAK,CAAC,GAAGV,aAAa,CAACQ,MAAM,CAAC;EAC9C,IAAIF,KAAK,CAACK,KAAK,IAAIL,KAAK,CAACM,KAAK,EAAC;IAC3B,oBACIR,OAAA,CAACR,GAAG;MAACiB,EAAE,EAAE;QAACC,CAAC,EAAE;MAAC,CAAE;MAAAC,QAAA,eACZX,OAAA,CAACR,GAAG;QAACoB,KAAK,EAAE;UAACC,eAAe,EAAE;QAAS,CAAE;QAACC,GAAG,EAAEV,MAAO;QAAAO,QAAA,eAClDX,OAAA,CAACF,gBAAgB;UAAAa,QAAA,eACbX,OAAA,CAACH,kBAAkB;YAAAc,QAAA,eACfX,OAAA,CAACP,uBAAuB;cAACS,KAAK,EAAEA,KAAM;cAACI,KAAK,EAAEA,KAAM;cAACD,MAAM,EAAEA;YAAO;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAGd;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAEJ,CAAC;AAAAf,EAAA,CA5BKF,YAAY;EAAA,QAEWL,aAAa;AAAA;AAAAuB,EAAA,GAFpClB,YAAY;AA8BlB,eAAeA,YAAY;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}