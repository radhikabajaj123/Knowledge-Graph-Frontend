{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar label_1 = __importDefault(require(\"./label\"));\n/**\n * Draw an hovered node.\n * - if there is no label => display a shadow on the node\n * - if the label box is bigger than node size => display a label box that contains the node with a shadow\n * - else node with shadow and the label box\n */\nfunction drawHover(context, data, settings) {\n  var size = settings.labelSize,\n    font = settings.labelFont,\n    weight = settings.labelWeight;\n  context.font = \"\".concat(weight, \" \").concat(size, \"px \").concat(font);\n  // Then we draw the label background\n  context.fillStyle = \"#FFF\";\n  context.shadowOffsetX = 0;\n  context.shadowOffsetY = 0;\n  context.shadowBlur = 8;\n  context.shadowColor = \"#000\";\n  var PADDING = 2;\n  if (typeof data.label === \"string\") {\n    var textWidth = context.measureText(data.label).width,\n      boxWidth = Math.round(textWidth + 5),\n      boxHeight = Math.round(size + 2 * PADDING),\n      radius = Math.max(data.size, size / 2) + PADDING;\n    var angleRadian = Math.asin(boxHeight / 2 / radius);\n    var xDeltaCoord = Math.sqrt(Math.abs(Math.pow(radius, 2) - Math.pow(boxHeight / 2, 2)));\n    context.beginPath();\n    context.moveTo(data.x + xDeltaCoord, data.y + boxHeight / 2);\n    context.lineTo(data.x + radius + boxWidth, data.y + boxHeight / 2);\n    context.lineTo(data.x + radius + boxWidth, data.y - boxHeight / 2);\n    context.lineTo(data.x + xDeltaCoord, data.y - boxHeight / 2);\n    context.arc(data.x, data.y, radius, angleRadian, -angleRadian);\n    context.closePath();\n    context.fill();\n  } else {\n    context.beginPath();\n    context.arc(data.x, data.y, data.size + PADDING, 0, Math.PI * 2);\n    context.closePath();\n    context.fill();\n  }\n  context.shadowOffsetX = 0;\n  context.shadowOffsetY = 0;\n  context.shadowBlur = 0;\n  // And finally we draw the label\n  (0, label_1.default)(context, data, settings);\n}\nexports.default = drawHover;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","label_1","require","drawHover","context","data","settings","size","labelSize","font","labelFont","weight","labelWeight","concat","fillStyle","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","PADDING","label","textWidth","measureText","width","boxWidth","Math","round","boxHeight","radius","max","angleRadian","asin","xDeltaCoord","sqrt","abs","pow","beginPath","moveTo","x","y","lineTo","arc","closePath","fill","PI","default"],"sources":["/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/node_modules/sigma/rendering/canvas/hover.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar label_1 = __importDefault(require(\"./label\"));\n/**\n * Draw an hovered node.\n * - if there is no label => display a shadow on the node\n * - if the label box is bigger than node size => display a label box that contains the node with a shadow\n * - else node with shadow and the label box\n */\nfunction drawHover(context, data, settings) {\n    var size = settings.labelSize, font = settings.labelFont, weight = settings.labelWeight;\n    context.font = \"\".concat(weight, \" \").concat(size, \"px \").concat(font);\n    // Then we draw the label background\n    context.fillStyle = \"#FFF\";\n    context.shadowOffsetX = 0;\n    context.shadowOffsetY = 0;\n    context.shadowBlur = 8;\n    context.shadowColor = \"#000\";\n    var PADDING = 2;\n    if (typeof data.label === \"string\") {\n        var textWidth = context.measureText(data.label).width, boxWidth = Math.round(textWidth + 5), boxHeight = Math.round(size + 2 * PADDING), radius = Math.max(data.size, size / 2) + PADDING;\n        var angleRadian = Math.asin(boxHeight / 2 / radius);\n        var xDeltaCoord = Math.sqrt(Math.abs(Math.pow(radius, 2) - Math.pow(boxHeight / 2, 2)));\n        context.beginPath();\n        context.moveTo(data.x + xDeltaCoord, data.y + boxHeight / 2);\n        context.lineTo(data.x + radius + boxWidth, data.y + boxHeight / 2);\n        context.lineTo(data.x + radius + boxWidth, data.y - boxHeight / 2);\n        context.lineTo(data.x + xDeltaCoord, data.y - boxHeight / 2);\n        context.arc(data.x, data.y, radius, angleRadian, -angleRadian);\n        context.closePath();\n        context.fill();\n    }\n    else {\n        context.beginPath();\n        context.arc(data.x, data.y, data.size + PADDING, 0, Math.PI * 2);\n        context.closePath();\n        context.fill();\n    }\n    context.shadowOffsetX = 0;\n    context.shadowOffsetY = 0;\n    context.shadowBlur = 0;\n    // And finally we draw the label\n    (0, label_1.default)(context, data, settings);\n}\nexports.default = drawHover;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}