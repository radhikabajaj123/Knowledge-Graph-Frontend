{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AbstractProgram = void 0;\n/**\n * Sigma.js WebGL Renderer Program\n * ================================\n *\n * Class representing a single WebGL program used by sigma's WebGL renderer.\n * @module\n */\nvar utils_1 = require(\"../../shaders/utils\");\n/**\n * Abstract Program class.\n *\n * @constructor\n */\nvar AbstractProgram = /** @class */function () {\n  function AbstractProgram(gl, vertexShaderSource, fragmentShaderSource, points, attributes) {\n    this.array = new Float32Array();\n    this.points = points;\n    this.attributes = attributes;\n    this.gl = gl;\n    this.vertexShaderSource = vertexShaderSource;\n    this.fragmentShaderSource = fragmentShaderSource;\n    var buffer = gl.createBuffer();\n    if (buffer === null) throw new Error(\"AbstractProgram: error while creating the buffer\");\n    this.buffer = buffer;\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);\n    this.vertexShader = (0, utils_1.loadVertexShader)(gl, this.vertexShaderSource);\n    this.fragmentShader = (0, utils_1.loadFragmentShader)(gl, this.fragmentShaderSource);\n    this.program = (0, utils_1.loadProgram)(gl, [this.vertexShader, this.fragmentShader]);\n  }\n  AbstractProgram.prototype.bufferData = function () {\n    var gl = this.gl;\n    gl.bufferData(gl.ARRAY_BUFFER, this.array, gl.DYNAMIC_DRAW);\n  };\n  AbstractProgram.prototype.allocate = function (capacity) {\n    this.array = new Float32Array(this.points * this.attributes * capacity);\n  };\n  AbstractProgram.prototype.hasNothingToRender = function () {\n    return this.array.length === 0;\n  };\n  return AbstractProgram;\n}();\nexports.AbstractProgram = AbstractProgram;","map":{"version":3,"names":["Object","defineProperty","exports","value","AbstractProgram","utils_1","require","gl","vertexShaderSource","fragmentShaderSource","points","attributes","array","Float32Array","buffer","createBuffer","Error","bindBuffer","ARRAY_BUFFER","vertexShader","loadVertexShader","fragmentShader","loadFragmentShader","program","loadProgram","prototype","bufferData","DYNAMIC_DRAW","allocate","capacity","hasNothingToRender","length"],"sources":["/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/node_modules/sigma/rendering/webgl/programs/common/program.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbstractProgram = void 0;\n/**\n * Sigma.js WebGL Renderer Program\n * ================================\n *\n * Class representing a single WebGL program used by sigma's WebGL renderer.\n * @module\n */\nvar utils_1 = require(\"../../shaders/utils\");\n/**\n * Abstract Program class.\n *\n * @constructor\n */\nvar AbstractProgram = /** @class */ (function () {\n    function AbstractProgram(gl, vertexShaderSource, fragmentShaderSource, points, attributes) {\n        this.array = new Float32Array();\n        this.points = points;\n        this.attributes = attributes;\n        this.gl = gl;\n        this.vertexShaderSource = vertexShaderSource;\n        this.fragmentShaderSource = fragmentShaderSource;\n        var buffer = gl.createBuffer();\n        if (buffer === null)\n            throw new Error(\"AbstractProgram: error while creating the buffer\");\n        this.buffer = buffer;\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);\n        this.vertexShader = (0, utils_1.loadVertexShader)(gl, this.vertexShaderSource);\n        this.fragmentShader = (0, utils_1.loadFragmentShader)(gl, this.fragmentShaderSource);\n        this.program = (0, utils_1.loadProgram)(gl, [this.vertexShader, this.fragmentShader]);\n    }\n    AbstractProgram.prototype.bufferData = function () {\n        var gl = this.gl;\n        gl.bufferData(gl.ARRAY_BUFFER, this.array, gl.DYNAMIC_DRAW);\n    };\n    AbstractProgram.prototype.allocate = function (capacity) {\n        this.array = new Float32Array(this.points * this.attributes * capacity);\n    };\n    AbstractProgram.prototype.hasNothingToRender = function () {\n        return this.array.length === 0;\n    };\n    return AbstractProgram;\n}());\nexports.AbstractProgram = AbstractProgram;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,eAAe,GAAG,KAAK,CAAC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,OAAO,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAC5C;AACA;AACA;AACA;AACA;AACA,IAAIF,eAAe,GAAG,aAAe,YAAY;EAC7C,SAASA,eAAeA,CAACG,EAAE,EAAEC,kBAAkB,EAAEC,oBAAoB,EAAEC,MAAM,EAAEC,UAAU,EAAE;IACvF,IAAI,CAACC,KAAK,GAAG,IAAIC,YAAY,CAAC,CAAC;IAC/B,IAAI,CAACH,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACJ,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACC,kBAAkB,GAAGA,kBAAkB;IAC5C,IAAI,CAACC,oBAAoB,GAAGA,oBAAoB;IAChD,IAAIK,MAAM,GAAGP,EAAE,CAACQ,YAAY,CAAC,CAAC;IAC9B,IAAID,MAAM,KAAK,IAAI,EACf,MAAM,IAAIE,KAAK,CAAC,kDAAkD,CAAC;IACvE,IAAI,CAACF,MAAM,GAAGA,MAAM;IACpBP,EAAE,CAACU,UAAU,CAACV,EAAE,CAACW,YAAY,EAAE,IAAI,CAACJ,MAAM,CAAC;IAC3C,IAAI,CAACK,YAAY,GAAG,CAAC,CAAC,EAAEd,OAAO,CAACe,gBAAgB,EAAEb,EAAE,EAAE,IAAI,CAACC,kBAAkB,CAAC;IAC9E,IAAI,CAACa,cAAc,GAAG,CAAC,CAAC,EAAEhB,OAAO,CAACiB,kBAAkB,EAAEf,EAAE,EAAE,IAAI,CAACE,oBAAoB,CAAC;IACpF,IAAI,CAACc,OAAO,GAAG,CAAC,CAAC,EAAElB,OAAO,CAACmB,WAAW,EAAEjB,EAAE,EAAE,CAAC,IAAI,CAACY,YAAY,EAAE,IAAI,CAACE,cAAc,CAAC,CAAC;EACzF;EACAjB,eAAe,CAACqB,SAAS,CAACC,UAAU,GAAG,YAAY;IAC/C,IAAInB,EAAE,GAAG,IAAI,CAACA,EAAE;IAChBA,EAAE,CAACmB,UAAU,CAACnB,EAAE,CAACW,YAAY,EAAE,IAAI,CAACN,KAAK,EAAEL,EAAE,CAACoB,YAAY,CAAC;EAC/D,CAAC;EACDvB,eAAe,CAACqB,SAAS,CAACG,QAAQ,GAAG,UAAUC,QAAQ,EAAE;IACrD,IAAI,CAACjB,KAAK,GAAG,IAAIC,YAAY,CAAC,IAAI,CAACH,MAAM,GAAG,IAAI,CAACC,UAAU,GAAGkB,QAAQ,CAAC;EAC3E,CAAC;EACDzB,eAAe,CAACqB,SAAS,CAACK,kBAAkB,GAAG,YAAY;IACvD,OAAO,IAAI,CAAClB,KAAK,CAACmB,MAAM,KAAK,CAAC;EAClC,CAAC;EACD,OAAO3B,eAAe;AAC1B,CAAC,CAAC,CAAE;AACJF,OAAO,CAACE,eAAe,GAAGA,eAAe"},"metadata":{},"sourceType":"script","externalDependencies":[]}