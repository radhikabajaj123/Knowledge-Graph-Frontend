{"ast":null,"code":"import * as e from \"react\";\nimport t, { createContext as n, useContext as a, useState as r, useEffect as s, useCallback as c, useRef as l, forwardRef as o, useImperativeHandle as i, useMemo as d } from \"react\";\nimport { isEqual as u } from \"lodash\";\nimport g from \"graphology\";\nimport { Sigma as m } from \"sigma\";\nconst h = n(null),\n  v = h.Provider;\nfunction f() {\n  const e = a(h);\n  if (null == e) throw new Error(\"No context provided: useSigmaContext() can only be used in a descendant of <SigmaContainer>\");\n  return e;\n}\nfunction p() {\n  return f().sigma;\n}\nfunction b() {\n  const {\n      sigma: e,\n      container: t\n    } = f(),\n    [n, a] = r({});\n  return s(() => {\n    if (!e || !n) return;\n    const a = {};\n    return Object.keys(n).forEach(t => {\n      a[t] = n[t], e.setSetting(t, n[t]);\n    }), () => {\n      e && t && t.offsetWidth > 0 && t.offsetHeight > 0 && Object.keys(a).forEach(t => {\n        e.setSetting(t, a[t]);\n      });\n    };\n  }, [e, n, t]), a;\n}\nconst E = [\"clickNode\", \"rightClickNode\", \"downNode\", \"enterNode\", \"leaveNode\", \"doubleClickNode\", \"wheelNode\", \"clickEdge\", \"rightClickEdge\", \"downEdge\", \"enterEdge\", \"leaveEdge\", \"doubleClickEdge\", \"wheelEdge\", \"clickStage\", \"rightClickStage\", \"downStage\", \"doubleClickStage\", \"wheelStage\", \"beforeRender\", \"afterRender\", \"kill\"],\n  w = [\"click\", \"rightClick\", \"mouseup\", \"mousedown\", \"mousemove\", \"mousemovebody\", \"doubleClick\", \"wheel\"],\n  C = [\"touchup\", \"touchdown\", \"touchmove\"],\n  O = [\"updated\"];\nfunction _() {\n  const e = p(),\n    t = b(),\n    [n, a] = r({});\n  return s(() => {\n    if (!e || !n) return;\n    const a = n,\n      r = Object.keys(a),\n      s = {},\n      c = {},\n      l = e.getSettings();\n    return r.some(e => [\"clickEdge\", \"rightClickEdge\", \"doubleClickEdge\", \"downEdge\"].includes(e)) && !1 === l.enableEdgeClickEvents && (s.enableEdgeClickEvents = !0, c.enableEdgeClickEvents = !1), r.some(e => [\"enterEdge\", \"leaveEdge\"].includes(e)) && !1 === l.enableEdgeHoverEvents && (s.enableEdgeHoverEvents = !0, c.enableEdgeHoverEvents = !1), r.some(e => [\"wheelEdge\"].includes(e)) && !1 === l.enableEdgeWheelEvents && (s.enableEdgeWheelEvents = !0, c.enableEdgeWheelEvents = !1), Object.keys(s).length > 0 && t(s), r.forEach(t => {\n      const n = a[t];\n      E.find(e => e === t) && e.on(t, n), w.find(e => e === t) && e.getMouseCaptor().on(t, n), C.find(e => e === t) && e.getTouchCaptor().on(t, n), O.find(e => e === t) && e.getCamera().on(t, n);\n    }), () => {\n      Object.keys(c).length > 0 && t(c), e && r.forEach(t => {\n        const n = a[t];\n        E.find(e => e === t) && e.off(t, n), w.find(e => e === t) && e.getMouseCaptor().off(t, n), C.find(e => e === t) && e.getTouchCaptor().off(t, n), O.find(e => e === t) && e.getCamera().off(t, n);\n      });\n    };\n  }, [e, n, t]), a;\n}\nfunction y() {\n  const e = p();\n  return c((t, n = !0) => {\n    e && t && (n && e.getGraph().order > 0 && e.getGraph().clear(), e.getGraph().import(t), e.refresh());\n  }, [e]);\n}\nfunction j(e) {\n  const t = p(),\n    n = l();\n  u(n.current, e) || (n.current = e);\n  const a = c(e => {\n      t.getCamera().animatedZoom(Object.assign(Object.assign({}, n.current), e));\n    }, [t, n]),\n    r = c(e => {\n      t.getCamera().animatedUnzoom(Object.assign(Object.assign({}, n.current), e));\n    }, [t, n]),\n    s = c(e => {\n      t.getCamera().animatedReset(Object.assign(Object.assign({}, n.current), e));\n    }, [t, n]),\n    o = c((e, a) => {\n      t.getCamera().animate(e, Object.assign(Object.assign({}, n.current), a));\n    }, [t, n]),\n    i = c((e, a) => {\n      const r = t.getNodeDisplayData(e);\n      r ? t.getCamera().animate(r, Object.assign(Object.assign({}, n.current), a)) : console.log(`Node ${e} not found`);\n    }, [t, n]);\n  return {\n    zoomIn: a,\n    zoomOut: r,\n    reset: s,\n    goto: o,\n    gotoNode: i\n  };\n}\nfunction x(e) {\n  const t = f(),\n    [n, a] = r(!1),\n    [l, o] = r(e || t.container),\n    i = () => a(e => !e);\n  return s(() => (document.addEventListener(\"fullscreenchange\", i), () => document.removeEventListener(\"fullscreenchange\", i)), [i]), s(() => {\n    o(e || t.container);\n  }, [e, t.container]), {\n    toggle: c(() => {\n      var e;\n      e = l, document.fullscreenElement !== e ? e.requestFullscreen() : document.exitFullscreen && document.exitFullscreen();\n    }, [l]),\n    isFullScreen: n\n  };\n}\nconst k = o(({\n    graph: e,\n    id: n,\n    className: a,\n    style: c,\n    settings: o,\n    children: h\n  }, f) => {\n    const p = l(null),\n      b = l(null),\n      E = {\n        className: `react-sigma ${a || \"\"}`,\n        id: n,\n        style: c\n      },\n      [w, C] = r(null),\n      O = l({});\n    u(O.current, o) || (O.current = o || {}), s(() => {\n      let t = null;\n      if (null !== b.current) {\n        const n = e ? \"function\" == typeof e ? new e() : e : new g();\n        t = new m(n, b.current, Object.assign({\n          allowInvalidContainer: !0\n        }, O.current)), w && t.getCamera().setState(w.getCamera().getState());\n      }\n      return C(t), () => {\n        t && t.kill(), C(null);\n      };\n    }, [b, e, O]), i(f, () => w, [w]);\n    const _ = d(() => w && p.current ? {\n        sigma: w,\n        container: p.current\n      } : null, [w, p.current]),\n      y = null !== _ ? t.createElement(v, {\n        value: _\n      }, h) : null;\n    return t.createElement(\"div\", Object.assign({}, E, {\n      ref: p\n    }), t.createElement(\"div\", {\n      className: \"sigma-container\",\n      ref: b\n    }), y);\n  }),\n  S = ({\n    id: e,\n    className: n,\n    style: a,\n    children: r,\n    position: s = \"bottom-left\"\n  }) => {\n    const c = {\n      className: `react-sigma-controls ${n || \"\"} ${s}`,\n      id: e,\n      style: a\n    };\n    return t.createElement(\"div\", Object.assign({}, c), r);\n  };\nvar N;\nfunction z() {\n  return z = Object.assign ? Object.assign.bind() : function (e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var n = arguments[t];\n      for (var a in n) Object.prototype.hasOwnProperty.call(n, a) && (e[a] = n[a]);\n    }\n    return e;\n  }, z.apply(this, arguments);\n}\nvar H,\n  M = function (t) {\n    return e.createElement(\"svg\", z({\n      \"aria-hidden\": \"true\",\n      \"data-prefix\": \"fas\",\n      \"data-icon\": \"plus\",\n      className: \"plus-solid_svg__svg-inline--fa plus-solid_svg__fa-plus plus-solid_svg__fa-w-14\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      viewBox: \"0 0 448 512\",\n      width: \"1em\",\n      height: \"1em\"\n    }, t), N || (N = e.createElement(\"path\", {\n      fill: \"currentColor\",\n      d: \"M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\"\n    })));\n  };\nfunction $() {\n  return $ = Object.assign ? Object.assign.bind() : function (e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var n = arguments[t];\n      for (var a in n) Object.prototype.hasOwnProperty.call(n, a) && (e[a] = n[a]);\n    }\n    return e;\n  }, $.apply(this, arguments);\n}\nvar F,\n  V = function (t) {\n    return e.createElement(\"svg\", $({\n      \"aria-hidden\": \"true\",\n      \"data-prefix\": \"fas\",\n      \"data-icon\": \"minus\",\n      className: \"minus-solid_svg__svg-inline--fa minus-solid_svg__fa-minus minus-solid_svg__fa-w-14\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      viewBox: \"0 0 448 512\",\n      width: \"1em\",\n      height: \"1em\"\n    }, t), H || (H = e.createElement(\"path\", {\n      fill: \"currentColor\",\n      d: \"M416 208H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\"\n    })));\n  };\nfunction G() {\n  return G = Object.assign ? Object.assign.bind() : function (e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var n = arguments[t];\n      for (var a in n) Object.prototype.hasOwnProperty.call(n, a) && (e[a] = n[a]);\n    }\n    return e;\n  }, G.apply(this, arguments);\n}\nvar P = function (t) {\n  return e.createElement(\"svg\", G({\n    \"aria-hidden\": \"true\",\n    \"data-prefix\": \"far\",\n    \"data-icon\": \"dot-circle\",\n    className: \"dot-circle-regular_svg__svg-inline--fa dot-circle-regular_svg__fa-dot-circle dot-circle-regular_svg__fa-w-16\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 512 512\",\n    width: \"1em\",\n    height: \"1em\"\n  }, t), F || (F = e.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M256 56c110.532 0 200 89.451 200 200 0 110.532-89.451 200-200 200-110.532 0-200-89.451-200-200 0-110.532 89.451-200 200-200m0-48C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm0 168c-44.183 0-80 35.817-80 80s35.817 80 80 80 80-35.817 80-80-35.817-80-80-80z\"\n  })));\n};\nconst I = ({\n  className: e,\n  style: n,\n  animationDuration: a = 200,\n  children: r,\n  labels: s = {}\n}) => {\n  const {\n      zoomIn: c,\n      zoomOut: l,\n      reset: o\n    } = j({\n      duration: a,\n      factor: 1.5\n    }),\n    i = {\n      style: n,\n      className: `react-sigma-control ${e || \"\"}`\n    };\n  return t.createElement(t.Fragment, null, t.createElement(\"div\", Object.assign({}, i), t.createElement(\"button\", {\n    onClick: () => c(),\n    title: s.zoomIn || \"Zoom In\"\n  }, r ? r[0] : t.createElement(M, {\n    style: {\n      width: \"1em\"\n    }\n  }))), t.createElement(\"div\", Object.assign({}, i), t.createElement(\"button\", {\n    onClick: () => l(),\n    title: s.zoomOut || \"Zoom Out\"\n  }, r ? r[1] : t.createElement(V, {\n    style: {\n      width: \"1em\"\n    }\n  }))), t.createElement(\"div\", Object.assign({}, i), t.createElement(\"button\", {\n    onClick: () => o(),\n    title: s.reset || \"See whole graph\"\n  }, r ? r[2] : t.createElement(P, {\n    style: {\n      width: \"1em\"\n    }\n  }))));\n};\nvar R;\nfunction B() {\n  return B = Object.assign ? Object.assign.bind() : function (e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var n = arguments[t];\n      for (var a in n) Object.prototype.hasOwnProperty.call(n, a) && (e[a] = n[a]);\n    }\n    return e;\n  }, B.apply(this, arguments);\n}\nvar L,\n  W = function (t) {\n    return e.createElement(\"svg\", B({\n      \"aria-hidden\": \"true\",\n      \"data-prefix\": \"fas\",\n      \"data-icon\": \"expand\",\n      className: \"expand-solid_svg__svg-inline--fa expand-solid_svg__fa-expand expand-solid_svg__fa-w-14\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      viewBox: \"0 0 448 512\",\n      width: \"1em\",\n      height: \"1em\"\n    }, t), R || (R = e.createElement(\"path\", {\n      fill: \"currentColor\",\n      d: \"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\n    })));\n  };\nfunction Z() {\n  return Z = Object.assign ? Object.assign.bind() : function (e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var n = arguments[t];\n      for (var a in n) Object.prototype.hasOwnProperty.call(n, a) && (e[a] = n[a]);\n    }\n    return e;\n  }, Z.apply(this, arguments);\n}\nvar D = function (t) {\n  return e.createElement(\"svg\", Z({\n    \"aria-hidden\": \"true\",\n    \"data-prefix\": \"fas\",\n    \"data-icon\": \"compress\",\n    className: \"compress-solid_svg__svg-inline--fa compress-solid_svg__fa-compress compress-solid_svg__fa-w-14\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 448 512\",\n    width: \"1em\",\n    height: \"1em\"\n  }, t), L || (L = e.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\n  })));\n};\nconst q = ({\n    id: e,\n    className: n,\n    style: a,\n    container: r,\n    children: s,\n    labels: c = {}\n  }) => {\n    const {\n        isFullScreen: l,\n        toggle: o\n      } = x(null == r ? void 0 : r.current),\n      i = {\n        className: `react-sigma-control ${n || \"\"}`,\n        id: e,\n        style: a\n      };\n    return document.fullscreenEnabled ? t.createElement(\"div\", Object.assign({}, i), t.createElement(\"button\", {\n      onClick: o,\n      title: l ? c.exit || \"Exit fullscreen\" : c.enter || \"Enter fullscreen\"\n    }, s && !l && s[0], s && l && s[1], !s && !l && t.createElement(W, {\n      style: {\n        width: \"1em\"\n      }\n    }), !s && l && t.createElement(D, {\n      style: {\n        width: \"1em\"\n      }\n    }))) : null;\n  },\n  A = ({\n    id: e,\n    className: n,\n    style: a,\n    labels: c = {}\n  }) => {\n    const l = p(),\n      o = _(),\n      {\n        gotoNode: i\n      } = j(),\n      [d, u] = r(\"\"),\n      [g, m] = r([]),\n      [h, v] = r(null),\n      [f, b] = r(\"\");\n    s(() => {\n      b(`search-${Math.random().toString(36).slice(2)}`);\n    }, []), s(() => {\n      const e = [];\n      !h && d.length > 1 && l.getGraph().forEachNode((t, n) => {\n        n.label && n.label.toLowerCase().includes(d.toLowerCase()) && e.push({\n          id: t,\n          label: n.label\n        });\n      }), m(e);\n    }, [d]), s(() => {\n      o({\n        clickStage: () => {\n          v(null), u(\"\");\n        }\n      });\n    }, [o]), s(() => {\n      if (h) return l.getGraph().setNodeAttribute(h, \"highlighted\", !0), i(h), () => {\n        l.getGraph().setNodeAttribute(h, \"highlighted\", !1);\n      };\n    }, [h]);\n    const E = {\n      className: `react-sigma-search ${n || \"\"}`,\n      id: e,\n      style: a\n    };\n    return t.createElement(\"div\", Object.assign({}, E), t.createElement(\"label\", {\n      htmlFor: f,\n      style: {\n        display: \"none\"\n      }\n    }, c.text || \"Search a node\"), t.createElement(\"input\", {\n      id: f,\n      type: \"text\",\n      placeholder: c.placeholder || \"Search...\",\n      list: `${f}-datalist`,\n      value: d,\n      onChange: e => {\n        const t = e.target.value,\n          n = g.find(e => e.label === t);\n        n ? (u(n.label), m([]), v(n.id)) : (v(null), u(t));\n      }\n    }), t.createElement(\"datalist\", {\n      id: `${f}-datalist`\n    }, g.map(e => t.createElement(\"option\", {\n      key: e.id,\n      value: e.label\n    }, e.label))));\n  };\nexport { S as ControlsContainer, q as FullScreenControl, A as SearchControl, k as SigmaContainer, h as SigmaContext, v as SigmaProvider, I as ZoomControl, j as useCamera, x as useFullScreen, y as useLoadGraph, _ as useRegisterEvents, b as useSetSettings, p as useSigma, f as useSigmaContext };","map":{"version":3,"names":["h","n","v","Provider","f","e","a","Error","p","sigma","b","container","t","r","s","Object","keys","forEach","setSetting","offsetWidth","offsetHeight","E","w","C","O","_","c","l","getSettings","some","includes","enableEdgeClickEvents","enableEdgeHoverEvents","enableEdgeWheelEvents","length","find","on","getMouseCaptor","getTouchCaptor","getCamera","off","y","getGraph","order","clear","import","refresh","j","u","current","animatedZoom","assign","animatedUnzoom","animatedReset","o","animate","i","getNodeDisplayData","console","log","zoomIn","zoomOut","reset","goto","gotoNode","x","toggleState","document","addEventListener","removeEventListener","toggle","fullscreenElement","requestFullscreen","exitFullscreen","isFullScreen","k","graph","id","className","style","settings","children","g","m","allowInvalidContainer","setState","getState","kill","d","createElement","value","ref","S","ControlsContainer","position","N","z","bind","arguments","prototype","hasOwnProperty","call","apply","H","M","SvgPlusSolid","xmlns","viewBox","width","height","fill","$","F","V","SvgMinusSolid","G","P","SvgDotCircleRegular","I","ZoomControl","animationDuration","labels","duration","factor","Fragment","onClick","title","R","B","L","W","SvgExpandSolid","Z","D","SvgCompressSolid","q","FullScreenControl","fullscreenEnabled","exit","enter","A","SearchControl","Math","random","toString","slice","forEachNode","label","toLowerCase","push","clickStage","setNodeAttribute","htmlFor","display","text","type","placeholder","list","onChange","target","map","key","SigmaContainer","SigmaContext","SigmaProvider","useCamera","useFullScreen","useLoadGraph","useRegisterEvents","useSetSettings","useSigma","useSigmaContext"],"sources":["/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/node_modules/@react-sigma/core/src/hooks/context.ts","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/node_modules/@react-sigma/core/src/hooks/useSigma.ts","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/node_modules/@react-sigma/core/src/hooks/useSetSettings.ts","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/node_modules/@react-sigma/core/src/hooks/useRegisterEvents.ts","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/node_modules/@react-sigma/core/src/hooks/useLoadGraph.ts","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/node_modules/@react-sigma/core/src/hooks/useCamera.ts","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/node_modules/@react-sigma/core/src/hooks/useFullScreen.ts","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/node_modules/@react-sigma/core/src/components/SigmaContainer.tsx","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/node_modules/@react-sigma/core/src/components/controls/ControlsContainer.tsx","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/node_modules/@react-sigma/core/src/assets/icons/plus-solid.svg","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/node_modules/@react-sigma/core/src/assets/icons/minus-solid.svg","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/node_modules/@react-sigma/core/src/assets/icons/dot-circle-regular.svg","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/node_modules/@react-sigma/core/src/components/controls/ZoomControl.tsx","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/node_modules/@react-sigma/core/src/assets/icons/expand-solid.svg","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/node_modules/@react-sigma/core/src/assets/icons/compress-solid.svg","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/node_modules/@react-sigma/core/src/components/controls/FullScreenControl.tsx","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/node_modules/@react-sigma/core/src/components/controls/SearchControl.tsx","/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/node_modules/@react-sigma/core/src/utils.ts"],"sourcesContent":["import { createContext, useContext } from \"react\";\nimport Sigma from \"sigma/sigma\";\n\nexport interface SigmaContextInterface {\n  sigma: Sigma;\n  container: HTMLElement;\n}\n\n/**\n * @hidden\n */\nexport const SigmaContext = createContext<SigmaContextInterface | null>(null);\n\n/**\n * @hidden\n */\nexport const SigmaProvider = SigmaContext.Provider;\n\n/**\n * React hook that store the sigma and html container reference.\n *\n * ```typescript\n * const {sigma, container} = useSigmaContext();\n *```\n * See [[SigmaContextInterface]] for more information.\n *\n * @category Hook\n */\nexport function useSigmaContext(): SigmaContextInterface {\n  const context = useContext(SigmaContext);\n  if (context == null) {\n    throw new Error(\"No context provided: useSigmaContext() can only be used in a descendant of <SigmaContainer>\");\n  }\n  return context;\n}\n","import Sigma from \"sigma/sigma\";\n\nimport { useSigmaContext } from \"./context\";\n\n/**\n * React hook to retrieve the sigma instance (from the context).\n *\n * ```typescript\n * const sigma = useSigma();\n *```\n * @category Hook\n */\nexport function useSigma(): Sigma {\n  return useSigmaContext().sigma;\n}\n","import { useEffect, useState } from \"react\";\nimport { Settings } from \"sigma/settings\";\n\nimport { useSigmaContext } from \"./context\";\n\n/**\n * React hook that helps you to update Sigma’s settings.\n *\n * ```typescript\n * const setSettings = useSetSettings();\n * setSettings({\n *  hideEdgesOnMove: true,\n *  hideLabelsOnMove: true,\n * });\n *```\n * @category Hook\n */\nexport function useSetSettings(): (newSettings: Partial<Settings>) => void {\n  const { sigma, container } = useSigmaContext();\n  const [settings, setSettings] = useState<Partial<Settings>>({});\n\n  useEffect(() => {\n    if (!sigma || !settings) {\n      return;\n    }\n\n    const prevSettings: Partial<Settings> = {};\n\n    (Object.keys(settings) as Array<keyof Settings>).forEach(key => {\n      // as never because of https://stackoverflow.com/questions/58656353/how-to-avoid-dynamic-keyof-object-assign-error-in-typescript\n      prevSettings[key] = settings[key] as never;\n      sigma.setSetting(key, settings[key] as never);\n    });\n\n    // cleanup\n    return () => {\n      if (sigma && container && container.offsetWidth > 0 && container.offsetHeight > 0) {\n        (Object.keys(prevSettings) as Array<keyof Settings>).forEach(key => {\n          // as never because of https://stackoverflow.com/questions/58656353/how-to-avoid-dynamic-keyof-object-assign-error-in-typescript\n          sigma.setSetting(key, prevSettings[key] as never);\n        });\n      }\n    };\n  }, [sigma, settings, container]);\n\n  return setSettings;\n}\n","import { useEffect, useState } from \"react\";\nimport { Settings } from \"sigma/settings\";\nimport { SigmaEvents } from \"sigma/sigma\";\nimport { TouchCaptorEvents } from \"sigma/core/captors/touch\";\nimport { MouseCaptorEvents } from \"sigma/core/captors/mouse\";\nimport { CameraEvents } from \"sigma/core/camera\";\n\nimport { useSigma } from \"./useSigma\";\nimport { useSetSettings } from \"./useSetSettings\";\nimport { EventHandlers } from \"../types\";\n\ntype EventType = keyof EventHandlers;\n\nconst sigmaEvents: Array<keyof SigmaEvents> = [\n  \"clickNode\",\n  \"rightClickNode\",\n  \"downNode\",\n  \"enterNode\",\n  \"leaveNode\",\n  \"doubleClickNode\",\n  \"wheelNode\",\n  \"clickEdge\",\n  \"rightClickEdge\",\n  \"downEdge\",\n  \"enterEdge\",\n  \"leaveEdge\",\n  \"doubleClickEdge\",\n  \"wheelEdge\",\n  \"clickStage\",\n  \"rightClickStage\",\n  \"downStage\",\n  \"doubleClickStage\",\n  \"wheelStage\",\n  \"beforeRender\",\n  \"afterRender\",\n  \"kill\",\n];\nconst mouseEvents: Array<keyof MouseCaptorEvents> = [\n  \"click\",\n  \"rightClick\",\n  \"mouseup\",\n  \"mousedown\",\n  \"mousemove\",\n  \"mousemovebody\",\n  \"doubleClick\",\n  \"wheel\",\n];\nconst touchEvents: Array<keyof TouchCaptorEvents> = [\"touchup\", \"touchdown\", \"touchmove\"];\nconst cameraEvents: Array<keyof CameraEvents> = [\"updated\"];\n\n/**\n * React hook that helps you to listen Sigma’s events.\n * It handles for you all the lifecyle of listener (ie. on / remove)\n *\n * ```typescript\n * const registerEvents = useRegisterEvents();\n * registerEvents({\n *  enterNode: event => setHoveredNode(event.node),\n *  leaveNode: event => setHoveredNode(null),\n * });\n *```\n * @category Hook\n */\nexport function useRegisterEvents(): (eventHandlers: Partial<EventHandlers>) => void {\n  const sigma = useSigma();\n  const setSettings = useSetSettings();\n  const [eventHandlers, setEventHandlers] = useState<Partial<EventHandlers>>({});\n\n  useEffect(() => {\n    if (!sigma || !eventHandlers) {\n      return;\n    }\n\n    const userEvents = eventHandlers;\n\n    // list of event types to register\n    const eventTypes = Object.keys(userEvents) as Array<EventType>;\n\n    // Set settings for edge event if needed\n    const edgeSettings: Partial<Settings> = {};\n    const reverseEdgeSettings: Partial<Settings> = {};\n    const sigmaSettings = sigma.getSettings();\n    if (\n      eventTypes.some((event) => [\"clickEdge\", \"rightClickEdge\", \"doubleClickEdge\", \"downEdge\"].includes(event)) &&\n      sigmaSettings.enableEdgeClickEvents === false\n    ) {\n      edgeSettings[\"enableEdgeClickEvents\"] = true;\n      reverseEdgeSettings[\"enableEdgeClickEvents\"] = false;\n    }\n    if (\n      eventTypes.some((event) => [\"enterEdge\", \"leaveEdge\"].includes(event)) &&\n      sigmaSettings.enableEdgeHoverEvents === false\n    ) {\n      edgeSettings[\"enableEdgeHoverEvents\"] = true;\n      reverseEdgeSettings[\"enableEdgeHoverEvents\"] = false;\n    }\n    if (eventTypes.some((event) => [\"wheelEdge\"].includes(event)) && sigmaSettings.enableEdgeWheelEvents === false) {\n      edgeSettings[\"enableEdgeWheelEvents\"] = true;\n      reverseEdgeSettings[\"enableEdgeWheelEvents\"] = false;\n    }\n    if (Object.keys(edgeSettings).length > 0) {\n      setSettings(edgeSettings);\n    }\n\n    eventTypes.forEach((event: EventType) => {\n      const eventHandler = userEvents[event] as (...args: unknown[]) => void;\n      if (sigmaEvents.find((e) => e === event)) {\n        sigma.on(event as keyof SigmaEvents, eventHandler);\n      }\n      if (mouseEvents.find((e) => e === event)) {\n        //eslint-disable-next-line @typescript-eslint/no-explicit-any\n        sigma.getMouseCaptor().on(event as keyof MouseCaptorEvents, eventHandler);\n      }\n      if (touchEvents.find((e) => e === event)) {\n        //eslint-disable-next-line @typescript-eslint/no-explicit-any\n        sigma.getTouchCaptor().on(event as keyof TouchCaptorEvents, eventHandler);\n      }\n      if (cameraEvents.find((e) => e === event)) {\n        sigma.getCamera().on(event as keyof CameraEvents, eventHandler);\n      }\n    });\n\n    // cleanup\n    return () => {\n      // Reverse settings\n      if (Object.keys(reverseEdgeSettings).length > 0) {\n        setSettings(reverseEdgeSettings);\n      }\n\n      // remove events listener\n      if (sigma) {\n        eventTypes.forEach((event: EventType) => {\n          const eventHandler = userEvents[event] as (...args: unknown[]) => void;\n          if (sigmaEvents.find((e) => e === event)) {\n            sigma.off(event as keyof SigmaEvents, eventHandler);\n          }\n          if (mouseEvents.find((e) => e === event)) {\n            sigma.getMouseCaptor().off(event as keyof MouseCaptorEvents, eventHandler);\n          }\n          if (touchEvents.find((e) => e === event)) {\n            sigma.getTouchCaptor().off(event as keyof TouchCaptorEvents, eventHandler);\n          }\n          if (cameraEvents.find((e) => e === event)) {\n            sigma.getCamera().off(event as keyof CameraEvents, eventHandler);\n          }\n        });\n      }\n    };\n  }, [sigma, eventHandlers, setSettings]);\n\n  return setEventHandlers;\n}\n","import { useCallback } from \"react\";\nimport Graph from \"graphology\";\n\nimport { useSigma } from \"./useSigma\";\n\n/**\n * React hook that helps you to load a graph.\n * If a graph was previously loaded in Sigma/Graphology, per default it is cleared.\n * You can change this behaviour by settings the parameter `clear` to false.\n *\n * ```typescript\n * const loadGraph = useLoadGraph();\n * loadGraph(erdosRenyi(UndirectedGraph, { order: 100, probability: 0.2 }), true);\n *```\n * @category Hook\n */\nexport function useLoadGraph(): (graph: Graph, clear?: boolean) => void {\n  const sigma = useSigma();\n\n  return useCallback(\n    (graph: Graph, clear = true) => {\n      if (sigma && graph) {\n        if (clear && sigma.getGraph().order > 0) sigma.getGraph().clear();\n        sigma.getGraph().import(graph);\n        sigma.refresh();\n      }\n    },\n    [sigma],\n  );\n}\n","import { useCallback, useRef } from \"react\";\nimport { isEqual } from \"lodash\";\nimport { AnimateOptions } from \"sigma/utils/animate\";\nimport { CameraState } from \"sigma/types\";\n\nimport { useSigma } from \"./useSigma\";\n\ntype CameraOptions = Partial<AnimateOptions> & { factor?: number };\n\n/**\n * React hook that helps you to manage the camera.\n *\n * ```typescript\n * const {zoomIn, zoomOut, reset, goto, gotoNode } = useCamera();\n *```\n *\n * @category Hook\n */\nexport function useCamera(\n  options?: CameraOptions,\n): {\n  zoomIn: (options?: CameraOptions) => void;\n  zoomOut: (options?: CameraOptions) => void;\n  reset: (options?: Partial<AnimateOptions>) => void;\n  goto: (state: Partial<CameraState>, options?: Partial<AnimateOptions>) => void;\n  gotoNode: (nodeKey: string, options?: Partial<AnimateOptions>) => void;\n} {\n  const sigma = useSigma();\n  // Default camera options\n  const defaultOptions = useRef<CameraOptions>();\n  if (!isEqual(defaultOptions.current, options)) defaultOptions.current = options;\n\n  const zoomIn = useCallback(\n    (options?: CameraOptions) => {\n      sigma.getCamera().animatedZoom({ ...defaultOptions.current, ...options });\n    },\n    [sigma, defaultOptions],\n  );\n\n  const zoomOut = useCallback(\n    (options?: CameraOptions) => {\n      sigma.getCamera().animatedUnzoom({ ...defaultOptions.current, ...options });\n    },\n    [sigma, defaultOptions],\n  );\n\n  const reset = useCallback(\n    (options?: Partial<AnimateOptions>) => {\n      sigma.getCamera().animatedReset({ ...defaultOptions.current, ...options });\n    },\n    [sigma, defaultOptions],\n  );\n\n  const goto = useCallback(\n    (state: Partial<CameraState>, options?: Partial<AnimateOptions>) => {\n      sigma.getCamera().animate(state, { ...defaultOptions.current, ...options });\n    },\n    [sigma, defaultOptions],\n  );\n\n  const gotoNode = useCallback(\n    (nodeKey: string, options?: Partial<AnimateOptions>) => {\n      const nodeDisplayData = sigma.getNodeDisplayData(nodeKey);\n      if (nodeDisplayData) sigma.getCamera().animate(nodeDisplayData, { ...defaultOptions.current, ...options });\n      else console.log(`Node ${nodeKey} not found`);\n    },\n    [sigma, defaultOptions],\n  );\n\n  return { zoomIn, zoomOut, reset, goto, gotoNode };\n}\n","import { useEffect, useState, useCallback } from \"react\";\nimport { useSigmaContext } from \"./context\";\n\nfunction toggleFullScreen(dom: HTMLElement) {\n  if (document.fullscreenElement !== dom) {\n    dom.requestFullscreen();\n  } else {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    }\n  }\n}\n\n/**\n * React hook that helps you to set graph in fullmode.\n *\n * ```typescript\n * const {toggle, isFullScreen} = useFullscreen();\n *```\n * @category Hook\n */\nexport function useFullScreen(\n  container?: HTMLElement | null,\n): {\n  toggle: () => void;\n  isFullScreen: boolean;\n} {\n  const context = useSigmaContext();\n  const [isFullScreen, setFullScreen] = useState<boolean>(false);\n  const [element, setElement] = useState<HTMLElement>(container ? container : context.container);\n  const toggleState = () => setFullScreen((v) => !v);\n\n  useEffect(() => {\n    document.addEventListener(\"fullscreenchange\", toggleState);\n    return () => document.removeEventListener(\"fullscreenchange\", toggleState);\n  }, [toggleState]);\n\n  useEffect(() => {\n    setElement(container || context.container);\n  }, [container, context.container]);\n\n  const toggle = useCallback(() => {\n    toggleFullScreen(element);\n  }, [element]);\n\n  return {\n    toggle,\n    isFullScreen,\n  };\n}\n","import React, {\n  CSSProperties,\n  Ref,\n  PropsWithChildren,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { isEqual } from \"lodash\";\nimport Graph from \"graphology\";\nimport { GraphConstructor } from \"graphology-types\";\nimport { Sigma } from \"sigma\";\nimport { Settings } from \"sigma/settings\";\n\nimport { SigmaProvider } from \"../hooks/context\";\n\n/**\n * Properties for `SigmaContainer` component\n */\nexport interface SigmaContainerProps {\n  /**\n   * Graphology instance or constructor\n   */\n  graph?: Graph | GraphConstructor;\n  /**\n   * Sigma settings\n   */\n  settings?: Partial<Settings>;\n  /**\n   * HTML id\n   */\n  id?: string;\n  /**\n   * HTML class\n   */\n  className?: string;\n  /**\n   * HTML CSS style\n   */\n  style?: CSSProperties;\n}\n\n/**\n * The `SigmaContainer` component is responsible of create the Sigma instance, and provide it to its child components using a React Context that can be accessible via the hook {@link useSigma}.\n *\n * ```jsx\n * <SigmaContainer id=\"sigma-graph\">\n *   <MyCustomGraph />\n * </SigmaContainer>\n *```\n * See [[SigmaContainerProps]] for more information.\n *\n * @category Component\n */\n// eslint-disable-next-line react/display-name\nconst SigmaContainerComponent = (\n  { graph, id, className, style, settings, children }: PropsWithChildren<SigmaContainerProps>,\n  ref: Ref<Sigma | null>,\n) => {\n  // Root HTML element\n  const rootRef = useRef<HTMLDivElement>(null);\n  // HTML element for the sigma instance\n  const containerRef = useRef<HTMLDivElement>(null);\n  // Common html props for the container\n  const props = { className: `react-sigma ${className ? className : \"\"}`, id, style };\n  // Sigma instance\n  const [sigma, setSigma] = useState<Sigma | null>(null);\n  // Sigma settings\n  const sigmaSettings = useRef<Partial<Settings>>({});\n  if (!isEqual(sigmaSettings.current, settings)) sigmaSettings.current = settings || {};\n\n  /**\n   * When graph or settings changed\n   * => create sigma\n   */\n  useEffect(() => {\n    let instance: Sigma | null = null;\n\n    if (containerRef.current !== null) {\n      const sigGraph = graph ? (typeof graph === \"function\" ? new graph() : graph) : new Graph();\n      instance = new Sigma(sigGraph, containerRef.current, { allowInvalidContainer: true, ...sigmaSettings.current });\n      if (sigma) instance.getCamera().setState(sigma.getCamera().getState());\n    }\n    setSigma(instance);\n\n    return () => {\n      if (instance) {\n        instance.kill();\n      }\n      setSigma(null);\n    };\n  }, [containerRef, graph, sigmaSettings]);\n\n  /**\n   * Forward the sigma ref\n   */\n  useImperativeHandle(ref, () => sigma, [sigma]);\n\n  /**\n   * Memoify the context\n   */\n  const context = useMemo(\n    () => (sigma && rootRef.current ? { sigma, container: rootRef.current as HTMLElement } : null),\n    [sigma, rootRef.current],\n  );\n\n  // When context is created we provide it to children\n  const contents = context !== null ? <SigmaProvider value={context}>{children}</SigmaProvider> : null;\n\n  return (\n    <div {...props} ref={rootRef}>\n      <div className=\"sigma-container\" ref={containerRef} />\n      {contents}\n    </div>\n  );\n};\n\nexport const SigmaContainer = forwardRef(SigmaContainerComponent);\n","import React, { CSSProperties, ReactNode } from \"react\";\n\n/**\n * Properties for `ControlsContainer` component.\n */\nexport interface ControlsContainerProps {\n  /**\n   * HTML id\n   */\n  id?: string;\n  /**\n   * HTML class\n   */\n  className?: string;\n  /**\n   * HTML CSS style\n   */\n  style?: CSSProperties;\n  /**\n   * Position of the container\n   */\n  position?: \"top-right\" | \"top-left\" | \"bottom-right\" | \"bottom-left\";\n  /*\n   * @hidden\n   */\n  children?: ReactNode;\n}\n\n/**\n * The `ControlsContainer` is just a wrapper for other control components.\n * It defines their position and also their style with its CSS class `react-sigma-controls`.\n *\n * ```jsx\n * <SigmaContainer>\n *   <ControlsContainer position={\"bottom-right\"}>\n *     <ForceAtlasControl autoRunFor={2000} />\n *   </ControlsContainer>\n * </SigmaContainer>\n * ```\n * See [[ControlsContainerProps]] for more information.\n *\n * @category Component\n */\nexport const ControlsContainer: React.FC<ControlsContainerProps> = ({\n  id,\n  className,\n  style,\n  children,\n  position = \"bottom-left\",\n}: ControlsContainerProps) => {\n  // Common html props for the container\n  const props = { className: `react-sigma-controls ${className ? className : \"\"} ${position}`, id, style };\n\n  return <div {...props}>{children}</div>;\n};\n","export default \"data:image/svg+xml,%3Csvg%20aria-hidden%3D%22true%22%20focusable%3D%22false%22%20data-prefix%3D%22fas%22%20data-icon%3D%22plus%22%20class%3D%22svg-inline--fa%20fa-plus%20fa-w-14%22%20role%3D%22img%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20448%20512%22%3E%20%20%3Cpath%20fill%3D%22currentColor%22%20d%3D%22M416%20208H272V64c0-17.67-14.33-32-32-32h-32c-17.67%200-32%2014.33-32%2032v144H32c-17.67%200-32%2014.33-32%2032v32c0%2017.67%2014.33%2032%2032%2032h144v144c0%2017.67%2014.33%2032%2032%2032h32c17.67%200%2032-14.33%2032-32V304h144c17.67%200%2032-14.33%2032-32v-32c0-17.67-14.33-32-32-32z%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E\"","export default \"data:image/svg+xml,%3Csvg%20aria-hidden%3D%22true%22%20focusable%3D%22false%22%20data-prefix%3D%22fas%22%20data-icon%3D%22minus%22%20class%3D%22svg-inline--fa%20fa-minus%20fa-w-14%22%20role%3D%22img%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20448%20512%22%3E%3Cpath%20fill%3D%22currentColor%22%20d%3D%22M416%20208H32c-17.67%200-32%2014.33-32%2032v32c0%2017.67%2014.33%2032%2032%2032h384c17.67%200%2032-14.33%2032-32v-32c0-17.67-14.33-32-32-32z%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E\"","export default \"data:image/svg+xml,%3Csvg%20aria-hidden%3D%22true%22%20focusable%3D%22false%22%20data-prefix%3D%22far%22%20data-icon%3D%22dot-circle%22%20class%3D%22svg-inline--fa%20fa-dot-circle%20fa-w-16%22%20role%3D%22img%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20512%20512%22%3E%3Cpath%20fill%3D%22currentColor%22%20d%3D%22M256%2056c110.532%200%20200%2089.451%20200%20200%200%20110.532-89.451%20200-200%20200-110.532%200-200-89.451-200-200%200-110.532%2089.451-200%20200-200m0-48C119.033%208%208%20119.033%208%20256s111.033%20248%20248%20248%20248-111.033%20248-248S392.967%208%20256%208zm0%20168c-44.183%200-80%2035.817-80%2080s35.817%2080%2080%2080%2080-35.817%2080-80-35.817-80-80-80z%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E\"","import React, { CSSProperties } from \"react\";\n\nimport { ReactComponent as ZoomInIcon } from \"../../assets/icons/plus-solid.svg\";\nimport { ReactComponent as ZoomOutIcon } from \"../../assets/icons/minus-solid.svg\";\nimport { ReactComponent as ZoomResetIcon } from \"../../assets/icons/dot-circle-regular.svg\";\nimport { useCamera } from \"../../hooks/useCamera\";\n\ntype ZoomLabelKeys = \"zoomIn\" | \"zoomOut\" | \"reset\";\n\n/**\n * Properties for `ZoomControl` component\n */\nexport interface ZoomControlProps {\n  /**\n   * HTML class that will be added to all div button wrapper\n   */\n  className?: string;\n\n  /**\n   * HTML CSS style that will be added to all div button wrapper\n   */\n  style?: CSSProperties;\n\n  /**\n   * Number of ms for the zoom animation (default is 200ms)\n   */\n  animationDuration?: number;\n\n  /**\n   * It's possible to customize the button, by passing to JSX Element.\n   * First one is for the \"zoom in\", second for \"zoom out\" and third for \"view whole graph\".\n   * Example :\n   * ```jsx\n   * <ZoomControl>\n   *   <BsZoomIn />\n   *   <BsZoomOut />\n   *   <BiReset />\n   * </FullScreenControl>\n   * ```\n   */\n  children?: [JSX.Element, JSX.Element, JSX.Element];\n\n  /**\n   * Map of the labels we use in the component.\n   * This is usefull for I18N\n   */\n  labels?: { [Key in ZoomLabelKeys]?: string };\n}\n\n/**\n * The `ZoomControl` create three UI buttons that allows the user to\n * - zoom in\n * - zoom out\n * - reset zoom (ie. see the whole graph)\n *\n * ```jsx\n * <SigmaContainer>\n *   <ControlsContainer>\n *     <ZoomControl />\n *   </ControlsContainer>\n * </SigmaContainer>\n * ```\n * See [[ZoomControlProps]] for more information.\n *\n * @category Component\n */\nexport const ZoomControl: React.FC<ZoomControlProps> = ({\n  className,\n  style,\n  animationDuration = 200,\n  children,\n  labels = {},\n}: ZoomControlProps) => {\n  const { zoomIn, zoomOut, reset } = useCamera({ duration: animationDuration, factor: 1.5 });\n\n  // Common html props for the div wrapper\n  const htmlProps = {\n    style,\n    className: `react-sigma-control ${className || \"\"}`,\n  };\n\n  return (\n    <>\n      <div {...htmlProps}>\n        <button onClick={() => zoomIn()} title={labels[\"zoomIn\"] || \"Zoom In\"}>\n          {children ? children[0] : <ZoomInIcon style={{ width: \"1em\" }} />}\n        </button>\n      </div>\n      <div {...htmlProps}>\n        <button onClick={() => zoomOut()} title={labels[\"zoomOut\"] || \"Zoom Out\"}>\n          {children ? children[1] : <ZoomOutIcon style={{ width: \"1em\" }} />}\n        </button>\n      </div>\n      <div {...htmlProps}>\n        <button onClick={() => reset()} title={labels[\"reset\"] || \"See whole graph\"}>\n          {children ? children[2] : <ZoomResetIcon style={{ width: \"1em\" }} />}\n        </button>\n      </div>\n    </>\n  );\n};\n","export default \"data:image/svg+xml,%3Csvg%20aria-hidden%3D%22true%22%20focusable%3D%22false%22%20data-prefix%3D%22fas%22%20data-icon%3D%22expand%22%20class%3D%22svg-inline--fa%20fa-expand%20fa-w-14%22%20role%3D%22img%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20448%20512%22%3E%3Cpath%20fill%3D%22currentColor%22%20d%3D%22M0%20180V56c0-13.3%2010.7-24%2024-24h124c6.6%200%2012%205.4%2012%2012v40c0%206.6-5.4%2012-12%2012H64v84c0%206.6-5.4%2012-12%2012H12c-6.6%200-12-5.4-12-12zM288%2044v40c0%206.6%205.4%2012%2012%2012h84v84c0%206.6%205.4%2012%2012%2012h40c6.6%200%2012-5.4%2012-12V56c0-13.3-10.7-24-24-24H300c-6.6%200-12%205.4-12%2012zm148%20276h-40c-6.6%200-12%205.4-12%2012v84h-84c-6.6%200-12%205.4-12%2012v40c0%206.6%205.4%2012%2012%2012h124c13.3%200%2024-10.7%2024-24V332c0-6.6-5.4-12-12-12zM160%20468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6%200-12%205.4-12%2012v124c0%2013.3%2010.7%2024%2024%2024h124c6.6%200%2012-5.4%2012-12z%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E\"","export default \"data:image/svg+xml,%3Csvg%20aria-hidden%3D%22true%22%20focusable%3D%22false%22%20data-prefix%3D%22fas%22%20data-icon%3D%22compress%22%20class%3D%22svg-inline--fa%20fa-compress%20fa-w-14%22%20role%3D%22img%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20448%20512%22%3E%3Cpath%20fill%3D%22currentColor%22%20d%3D%22M436%20192H312c-13.3%200-24-10.7-24-24V44c0-6.6%205.4-12%2012-12h40c6.6%200%2012%205.4%2012%2012v84h84c6.6%200%2012%205.4%2012%2012v40c0%206.6-5.4%2012-12%2012zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6%200-12%205.4-12%2012v84H12c-6.6%200-12%205.4-12%2012v40c0%206.6%205.4%2012%2012%2012h124c13.3%200%2024-10.7%2024-24zm0%20300V344c0-13.3-10.7-24-24-24H12c-6.6%200-12%205.4-12%2012v40c0%206.6%205.4%2012%2012%2012h84v84c0%206.6%205.4%2012%2012%2012h40c6.6%200%2012-5.4%2012-12zm192%200v-84h84c6.6%200%2012-5.4%2012-12v-40c0-6.6-5.4-12-12-12H312c-13.3%200-24%2010.7-24%2024v124c0%206.6%205.4%2012%2012%2012h40c6.6%200%2012-5.4%2012-12z%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E\"","import React, { CSSProperties, RefObject } from \"react\";\n\nimport { ReactComponent as EnterIcon } from \"../../assets/icons/expand-solid.svg\";\nimport { ReactComponent as ExitIcon } from \"../../assets/icons/compress-solid.svg\";\nimport { useFullScreen } from \"../../hooks/useFullScreen\";\n\ntype FullScreenLabelKeys = \"enter\" | \"exit\";\n\n/**\n * Properties for `FullScreenControl` component.\n */\nexport interface FullScreenControlProps {\n  /**\n   * HTML id\n   */\n  id?: string;\n\n  /**\n   * HTML class\n   */\n  className?: string;\n\n  /**\n   * HTML CSS style\n   */\n  style?: CSSProperties;\n\n  /**\n   * If defined, this container will be taken for the fullscreen instead of the sigma one.\n   */\n  container?: RefObject<HTMLElement>;\n\n  /**\n   * It's possible to customize the button, by passing to JSX Element.\n   * First one is for the \"enter fullscreen\", and the second to \"exit fullscreen\".\n   * Example :\n   * ```jsx\n   * <FullScreenControl>\n   *   <BiFullscreen />\n   *   <BiExitFullscreen />\n   * </FullScreenControl>\n   * ```\n   */\n  children?: [JSX.Element, JSX.Element];\n\n  /**\n   * Map of the labels we use in the component.\n   * This is usefull for I18N\n   */\n  labels?: { [Key in FullScreenLabelKeys]?: string };\n}\n\n/**\n * The `FullScreenControl` create a UI button that allows the user to display the graph in fullscreen\n *\n * ```jsx\n * <SigmaContainer>\n *   <ControlsContainer>\n *     <FullScreenControl />\n *   </ControlsContainer>\n * </SigmaContainer>\n * ```\n * See [[FullScreenControlProps]] for more information.\n *\n * @category Component\n */\nexport const FullScreenControl: React.FC<FullScreenControlProps> = ({\n  id,\n  className,\n  style,\n  container,\n  children,\n  labels = {},\n}: FullScreenControlProps) => {\n  // Get Sigma\n  const { isFullScreen, toggle } = useFullScreen(container?.current);\n\n  // Common html props for the div\n  const htmlProps = {\n    className: `react-sigma-control ${className || \"\"}`,\n    id,\n    style,\n  };\n\n  if (!document.fullscreenEnabled) return null;\n\n  return (\n    <div {...htmlProps}>\n      <button\n        onClick={toggle}\n        title={isFullScreen ? labels[\"exit\"] || \"Exit fullscreen\" : labels[\"enter\"] || \"Enter fullscreen\"}\n      >\n        {children && !isFullScreen && children[0]}\n        {children && isFullScreen && children[1]}\n        {!children && !isFullScreen && <EnterIcon style={{ width: \"1em\" }} />}\n        {!children && isFullScreen && <ExitIcon style={{ width: \"1em\" }} />}\n      </button>\n    </div>\n  );\n};\n","import React, { ChangeEvent, useEffect, useState, CSSProperties } from \"react\";\nimport { Attributes } from \"graphology-types\";\n\nimport { getUniqueKey } from \"../../utils\";\nimport { useSigma } from \"../../hooks/useSigma\";\nimport { useCamera } from \"../../hooks/useCamera\";\nimport { useRegisterEvents } from \"../../hooks/useRegisterEvents\";\n\ntype SearchLabelKeys = \"text\" | \"placeholder\";\n\n/**\n * Properties for `SearchControl` component\n */\nexport interface SearchControlProps {\n  /**\n   * HTML id\n   */\n  id?: string;\n\n  /**\n   * HTML class\n   */\n  className?: string;\n\n  /**\n   * HTML CSS style\n   */\n  style?: CSSProperties;\n\n  /**\n   * Map of the labels we use in the component.\n   * This is usefull for I18N\n   */\n  labels?: { [Key in SearchLabelKeys]?: string };\n}\n\n/**\n * The `SearchControl` create an input text where user can search a node in the graph by its label.\n * There is an autocomplete based on includes & lower case.\n * When a node is found, the graph will focus on the highlighted node\n *\n * ```jsx\n * <SigmaContainer>\n *   <ControlsContainer>\n *     <SearchControl />\n *   </ControlsContainer>\n * </SigmaContainer>\n * ```\n * See [[SearchControlProps]] for more information.\n *\n * @category Component\n */\nexport const SearchControl: React.FC<SearchControlProps> = ({\n  id,\n  className,\n  style,\n  labels = {},\n}: SearchControlProps) => {\n  // Get sigma\n  const sigma = useSigma();\n  // Get event hook\n  const registerEvents = useRegisterEvents();\n  // Get camera hook\n  const { gotoNode } = useCamera();\n  // Search value\n  const [search, setSearch] = useState<string>(\"\");\n  // Datalist values\n  const [values, setValues] = useState<Array<{ id: string; label: string }>>([]);\n  // Selected\n  const [selected, setSelected] = useState<string | null>(null);\n  // random id for the input\n  const [inputId, setInputId] = useState<string>(\"\");\n\n  /**\n   * When component mount, we set a random input id.\n   */\n  useEffect(() => {\n    setInputId(`search-${getUniqueKey()}`);\n  }, []);\n\n  /**\n   * When the search input changes, recompute the autocomplete values.\n   */\n  useEffect(() => {\n    const newValues: Array<{ id: string; label: string }> = [];\n    if (!selected && search.length > 1) {\n      sigma.getGraph().forEachNode((key: string, attributes: Attributes): void => {\n        if (attributes.label && attributes.label.toLowerCase().includes(search.toLowerCase()))\n          newValues.push({ id: key, label: attributes.label });\n      });\n    }\n    setValues(newValues);\n  }, [search]);\n\n  /**\n   * When use clik on the stage\n   *  => reset the selection\n   */\n  useEffect(() => {\n    registerEvents({\n      clickStage: () => {\n        setSelected(null);\n        setSearch(\"\");\n      },\n    });\n  }, [registerEvents]);\n\n  /**\n   * When the selected item changes, highlighted the node and center the camera on it.\n   */\n  useEffect(() => {\n    if (!selected) {\n      return;\n    }\n\n    sigma.getGraph().setNodeAttribute(selected, \"highlighted\", true);\n    gotoNode(selected);\n\n    return () => {\n      sigma.getGraph().setNodeAttribute(selected, \"highlighted\", false);\n    };\n  }, [selected]);\n\n  /**\n   * On change event handler for the search input, to set the state.\n   */\n  const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const searchString = e.target.value;\n    const valueItem = values.find((value) => value.label === searchString);\n    if (valueItem) {\n      setSearch(valueItem.label);\n      setValues([]);\n      setSelected(valueItem.id);\n    } else {\n      setSelected(null);\n      setSearch(searchString);\n    }\n  };\n\n  // Common html props for the div\n  const htmlProps = {\n    className: `react-sigma-search ${className ? className : \"\"}`,\n    id,\n    style,\n  };\n\n  return (\n    <div {...htmlProps}>\n      <label htmlFor={inputId} style={{ display: \"none\" }}>\n        {labels[\"text\"] || \"Search a node\"}\n      </label>\n      <input\n        id={inputId}\n        type=\"text\"\n        placeholder={labels[\"placeholder\"] || \"Search...\"}\n        list={`${inputId}-datalist`}\n        value={search}\n        onChange={onInputChange}\n      />\n      <datalist id={`${inputId}-datalist`}>\n        {values.map((value: { id: string; label: string }) => (\n          <option key={value.id} value={value.label}>\n            {value.label}\n          </option>\n        ))}\n      </datalist>\n    </div>\n  );\n};\n","export function getUniqueKey(): string {\n  return Math.random()\n    .toString(36)\n    .slice(2);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}