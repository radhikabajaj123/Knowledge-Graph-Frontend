{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.multiplyVec2 = exports.multiply = exports.translate = exports.rotate = exports.scale = exports.identity = void 0;\nfunction identity() {\n  return Float32Array.of(1, 0, 0, 0, 1, 0, 0, 0, 1);\n}\nexports.identity = identity;\n// TODO: optimize\nfunction scale(m, x, y) {\n  m[0] = x;\n  m[4] = typeof y === \"number\" ? y : x;\n  return m;\n}\nexports.scale = scale;\nfunction rotate(m, r) {\n  var s = Math.sin(r),\n    c = Math.cos(r);\n  m[0] = c;\n  m[1] = s;\n  m[3] = -s;\n  m[4] = c;\n  return m;\n}\nexports.rotate = rotate;\nfunction translate(m, x, y) {\n  m[6] = x;\n  m[7] = y;\n  return m;\n}\nexports.translate = translate;\nfunction multiply(a, b) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2];\n  var a10 = a[3],\n    a11 = a[4],\n    a12 = a[5];\n  var a20 = a[6],\n    a21 = a[7],\n    a22 = a[8];\n  var b00 = b[0],\n    b01 = b[1],\n    b02 = b[2];\n  var b10 = b[3],\n    b11 = b[4],\n    b12 = b[5];\n  var b20 = b[6],\n    b21 = b[7],\n    b22 = b[8];\n  a[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  a[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  a[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  a[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  a[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  a[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  a[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  a[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  a[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return a;\n}\nexports.multiply = multiply;\nfunction multiplyVec2(a, b, z) {\n  if (z === void 0) {\n    z = 1;\n  }\n  var a00 = a[0];\n  var a01 = a[1];\n  var a10 = a[3];\n  var a11 = a[4];\n  var a20 = a[6];\n  var a21 = a[7];\n  var b0 = b.x;\n  var b1 = b.y;\n  return {\n    x: b0 * a00 + b1 * a10 + a20 * z,\n    y: b0 * a01 + b1 * a11 + a21 * z\n  };\n}\nexports.multiplyVec2 = multiplyVec2;","map":{"version":3,"names":["Object","defineProperty","exports","value","multiplyVec2","multiply","translate","rotate","scale","identity","Float32Array","of","m","x","y","r","s","Math","sin","c","cos","a","b","a00","a01","a02","a10","a11","a12","a20","a21","a22","b00","b01","b02","b10","b11","b12","b20","b21","b22","z","b0","b1"],"sources":["/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/node_modules/sigma/utils/matrices.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.multiplyVec2 = exports.multiply = exports.translate = exports.rotate = exports.scale = exports.identity = void 0;\nfunction identity() {\n    return Float32Array.of(1, 0, 0, 0, 1, 0, 0, 0, 1);\n}\nexports.identity = identity;\n// TODO: optimize\nfunction scale(m, x, y) {\n    m[0] = x;\n    m[4] = typeof y === \"number\" ? y : x;\n    return m;\n}\nexports.scale = scale;\nfunction rotate(m, r) {\n    var s = Math.sin(r), c = Math.cos(r);\n    m[0] = c;\n    m[1] = s;\n    m[3] = -s;\n    m[4] = c;\n    return m;\n}\nexports.rotate = rotate;\nfunction translate(m, x, y) {\n    m[6] = x;\n    m[7] = y;\n    return m;\n}\nexports.translate = translate;\nfunction multiply(a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2];\n    var a10 = a[3], a11 = a[4], a12 = a[5];\n    var a20 = a[6], a21 = a[7], a22 = a[8];\n    var b00 = b[0], b01 = b[1], b02 = b[2];\n    var b10 = b[3], b11 = b[4], b12 = b[5];\n    var b20 = b[6], b21 = b[7], b22 = b[8];\n    a[0] = b00 * a00 + b01 * a10 + b02 * a20;\n    a[1] = b00 * a01 + b01 * a11 + b02 * a21;\n    a[2] = b00 * a02 + b01 * a12 + b02 * a22;\n    a[3] = b10 * a00 + b11 * a10 + b12 * a20;\n    a[4] = b10 * a01 + b11 * a11 + b12 * a21;\n    a[5] = b10 * a02 + b11 * a12 + b12 * a22;\n    a[6] = b20 * a00 + b21 * a10 + b22 * a20;\n    a[7] = b20 * a01 + b21 * a11 + b22 * a21;\n    a[8] = b20 * a02 + b21 * a12 + b22 * a22;\n    return a;\n}\nexports.multiply = multiply;\nfunction multiplyVec2(a, b, z) {\n    if (z === void 0) { z = 1; }\n    var a00 = a[0];\n    var a01 = a[1];\n    var a10 = a[3];\n    var a11 = a[4];\n    var a20 = a[6];\n    var a21 = a[7];\n    var b0 = b.x;\n    var b1 = b.y;\n    return { x: b0 * a00 + b1 * a10 + a20 * z, y: b0 * a01 + b1 * a11 + a21 * z };\n}\nexports.multiplyVec2 = multiplyVec2;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}