{"ast":null,"code":"var _jsxFileName = \"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/Card.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport NetworkDiagramGenerator from './NetworkDiagramGenerator';\nimport { useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst bull = /*#__PURE__*/_jsxDEV(Box, {\n  component: \"span\",\n  sx: {\n    display: 'inline-block',\n    mx: '2px',\n    transform: 'scale(0.8)'\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this);\nexport default function BasicCard({\n  graph\n}) {\n  _s();\n  const refContainer = useRef();\n  useEffect(() => {\n    if (refContainer.current) {\n      setDimensions({\n        width: refContainer.current.offsetWidth,\n        height: refContainer.current.offsetHeight\n      });\n    }\n  }, []);\n  const nodeHoverTooltip = React.useCallback(node => {\n    return `<div>${node.name}</div>`;\n  }, []);\n  if (graph.links && graph.nodes) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        minWidth: 275\n      },\n      style: {\n        backgroundColor: \"#F2F1F1\"\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(NetworkDiagramGenerator, {\n          graph: graph,\n          width: refContainer.current.offsetWidth,\n          height: refContainer.current.offsetHeight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(BasicCard, \"LGFmPzj8mDBJUCx8Ijdk/nJbUOs=\");\n_c = BasicCard;\nvar _c;\n$RefreshReg$(_c, \"BasicCard\");","map":{"version":3,"names":["React","Box","Card","CardContent","NetworkDiagramGenerator","useRef","jsxDEV","_jsxDEV","bull","component","sx","display","mx","transform","fileName","_jsxFileName","lineNumber","columnNumber","BasicCard","graph","_s","refContainer","useEffect","current","setDimensions","width","offsetWidth","height","offsetHeight","nodeHoverTooltip","useCallback","node","name","links","nodes","minWidth","style","backgroundColor","children","_c","$RefreshReg$"],"sources":["/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/Card.js"],"sourcesContent":["import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport NetworkDiagramGenerator from './NetworkDiagramGenerator';\nimport {useRef} from 'react';\n\nconst bull = (\n  <Box\n    component=\"span\"\n    sx={{ display: 'inline-block', mx: '2px', transform: 'scale(0.8)' }}\n  >\n  </Box>\n);\n\nexport default function BasicCard({graph}) {\n    const refContainer = useRef();\n\n    useEffect(() => {\n        if (refContainer.current) {\n            setDimensions({\n                width: refContainer.current.offsetWidth,\n                height: refContainer.current.offsetHeight,\n            });\n        }\n    }, []);\n\n    const nodeHoverTooltip = React.useCallback((node) => {\n        return `<div>${node.name}</div>`;\n      }, []);\n\n      if (graph.links && graph.nodes){\n        return (\n            <Card sx={{ minWidth: 275 }} style={{backgroundColor: \"#F2F1F1\"}}>\n              <CardContent>\n                    <NetworkDiagramGenerator graph={graph} width={refContainer.current.offsetWidth} height={refContainer.current.offsetHeight}/>\n                    {/* <ForceGraph linksData={graph.links} nodesData={graph.nodes} nodeHoverTooltip={nodeHoverTooltip} graph={graph}/> */}\n              </CardContent>\n            </Card>\n          );\n      }\n        \n      \n      \n}"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,uBAAuB,MAAM,2BAA2B;AAC/D,SAAQC,MAAM,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,IAAI,gBACRD,OAAA,CAACN,GAAG;EACFQ,SAAS,EAAC,MAAM;EAChBC,EAAE,EAAE;IAAEC,OAAO,EAAE,cAAc;IAAEC,EAAE,EAAE,KAAK;IAAEC,SAAS,EAAE;EAAa;AAAE;EAAAC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAEjE,CACN;AAED,eAAe,SAASC,SAASA,CAAC;EAACC;AAAK,CAAC,EAAE;EAAAC,EAAA;EACvC,MAAMC,YAAY,GAAGhB,MAAM,CAAC,CAAC;EAE7BiB,SAAS,CAAC,MAAM;IACZ,IAAID,YAAY,CAACE,OAAO,EAAE;MACtBC,aAAa,CAAC;QACVC,KAAK,EAAEJ,YAAY,CAACE,OAAO,CAACG,WAAW;QACvCC,MAAM,EAAEN,YAAY,CAACE,OAAO,CAACK;MACjC,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,gBAAgB,GAAG7B,KAAK,CAAC8B,WAAW,CAAEC,IAAI,IAAK;IACjD,OAAQ,QAAOA,IAAI,CAACC,IAAK,QAAO;EAClC,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIb,KAAK,CAACc,KAAK,IAAId,KAAK,CAACe,KAAK,EAAC;IAC7B,oBACI3B,OAAA,CAACL,IAAI;MAACQ,EAAE,EAAE;QAAEyB,QAAQ,EAAE;MAAI,CAAE;MAACC,KAAK,EAAE;QAACC,eAAe,EAAE;MAAS,CAAE;MAAAC,QAAA,eAC/D/B,OAAA,CAACJ,WAAW;QAAAmC,QAAA,eACN/B,OAAA,CAACH,uBAAuB;UAACe,KAAK,EAAEA,KAAM;UAACM,KAAK,EAAEJ,YAAY,CAACE,OAAO,CAACG,WAAY;UAACC,MAAM,EAAEN,YAAY,CAACE,OAAO,CAACK;QAAa;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAErH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAEb;AAIN;AAACG,EAAA,CA7BuBF,SAAS;AAAAqB,EAAA,GAATrB,SAAS;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}