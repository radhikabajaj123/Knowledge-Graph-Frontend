{"ast":null,"code":"var _jsxFileName = \"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/ForceGraphGenerator.js\",\n  _s = $RefreshSig$();\nimport * as d3 from \"d3\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RunForceGraph = ({\n  graph,\n  svgContainer\n}) => {\n  _s();\n  const d3Container = useRef(null);\n\n  // State to track width and height of SVG Container\n  const [width, setWidth] = useState();\n  const [height, setHeight] = useState();\n\n  // This function calculates width and height of the container\n  const getSvgContainerSize = () => {\n    const newWidth = svgContainer.current.clientWidth - 128;\n    setWidth(newWidth);\n    const newHeight = svgContainer.current.clientHeight;\n    setHeight(newHeight);\n  };\n  useEffect(() => {\n    // detect 'width' and 'height' on render\n    getSvgContainerSize();\n    // listen for resize changes, and detect dimensions again when they change\n    window.addEventListener(\"resize\", getSvgContainerSize);\n    // cleanup event listener\n    return () => window.removeEventListener(\"resize\", getSvgContainerSize);\n  }, []);\n  useEffect(() => {\n    if (graph.links && graph.nodes) {\n      const links = graph.links.map(d => Object.assign({}, d));\n      const nodes = graph.nodes.map(d => Object.assign({}, d));\n      const drag = simulation => {\n        const dragstarted = d => {\n          if (!d3.event.active) simulation.alpha(0.3).restart();\n          d.fx = d.x;\n          d.fy = d.y;\n        };\n        const dragged = d => {\n          d.fx = d3.event.x;\n          d.fy = d3.event.y;\n        };\n        const dragended = d => {\n          if (!d3.event.active) simulation.alpha(0).restart();\n          d.fx = null;\n          d.fy = null;\n        };\n        return d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended);\n      };\n      const simulation = d3.forceSimulation(nodes).force(\"link\", d3.forceLink(links).id(d => d.id).distance(200)).force(\"charge\", d3.forceManyBody().strength(-1000)).force(\"collide\", d3.forceCollide().strength(1).radius(180).iterations(1)).force(\"x\", d3.forceX()).force(\"y\", d3.forceY());\n      d3.select(d3Container.current).selectAll(\"*\").remove();\n      const svg = d3.select(d3Container.current).attr(\"viewBox\", [-width / 2, -height / 2, width, height]).call(d3.zoom().on(\"zoom\", function () {\n        svg.attr(\"transform\", d3.event.transform);\n      })).append(\"g\");\n      const tooltip = d3.select(\"body\").append(\"div\").style(\"position\", \"absolute\").style(\"visibility\", \"hidden\").style(\"background-color\", \"#fbfbfb\").style(\"border\", \"solid\").style(\"border-color\", \"#999\").style(\"border-width\", \"2px\").style(\"border-radius\", \"5px\").style(\"padding\", \"4px\");\n      svg.append(\"defs\").append(\"marker\").attr(\"id\", \"arrow\").attr(\"viewBox\", \"0 -5 10 10\").attr(\"refX\", 32).attr(\"refY\", 0).attr(\"fill\", \"#999\").attr(\"markerWidth\", 6).attr(\"markerHeight\", 6).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M0,-5L10,0L0,5\");\n      const updateLink = svg.selectAll(\"line\").data(links).join(\"line\").attr(\"stroke\", \"#999\").attr(\"stroke-opacity\", 0.6).attr(\"stroke-width\", \"4px\").attr(\"fill\", \"#4b4b4b\").attr(\"marker-end\", \"url(#arrow)\").call(drag(simulation));\n      const updateLinkLabel = svg.append(\"g\").selectAll(\"text\").data(links).join(\"text\").attr('text-anchor', 'middle').attr(\"dx\", 20).attr(\"dy\", -50).attr('dominant-baseline', 'central').attr(\"fill\", \"#4b4b4b\").text(d => {\n        return d.type;\n      }).call(drag(simulation));\n\n      // const path = svg\n      //   .selectAll(\"path\")\n      //   .data(links)\n      //   .enter()\n      //   .append(\"path\")\n      //   .attr(\"class\", d => {return \"link \" + d.type; })\n      //   .attr(\"id\", function(d, i) {return \"linkId_\" + i;})\n      //   .attr(\"marker-end\", \"url(#arrow)\");\n\n      // const linktext = svg.append(\"g\").selectAll(\"g.linklabelholder\").data(links);\n\n      // linktext\n      //   .enter()\n      //   .append(\"g\")\n      //   .attr(\"class\", \"linklabelholder\")\n      //   .append(\"text\")\n      //   .attr(\"x\", \"50\")\n      //   .attr(\"y\", \"-20\")\n      //   .attr(\"text-anchor\", \"start\")\n      //   .style(\"fill\", \"#4b4b4b\")\n      //   .append(\"textpath\")\n      //   .attr(\"xlink:href\", function (d, i) {return \"#linkId_\" + i;})\n      //   .text(d => {return d.type; });\n\n      // const edges = svg.selectAll(\"line\")\n      //   .data(links)\n      //   .join(\"line\")\n      //   .attr(\"id\", function (d) { return 'edge' + d.identity })\n      //   .style(\"stroke\", \"#ccc\");\n\n      // const edgepaths = svg.selectAll(\".edgepath\")\n      //   .data(links)\n      //   .join('path')\n      //   .attr({\n      //       'd': function (d) { return 'M ' + d.source.x + ' ' + d.source.y + ' L ' + d.target.x + ' ' + d.target.y },\n      //       'class': 'edgepath',\n      //       'fill-opacity': 0,\n      //       'stroke-opacity': 0,\n      //       'fill': 'blue',\n      //       'stroke': 'red',\n      //       'id': function (d) { return 'edgepath' + d.identity }\n      //   });\n\n      // const edgelabels = svg.selectAll(\".edgelabel\")\n      //   .data(links)\n      //   .join('text')\n      //   .attr({\n      //       'class': 'edgelabel',\n      //       'id': function (d) { return 'edgelabel' + d.identity },\n      //       'dx': 80,\n      //       'dy': 0,\n      //       'font-size': 10,\n      //       'fill': '#aaa'\n      //   });\n\n      // edgelabels.append('textPath')\n      //   .data(links)\n      //   .attr('xlink:href', function (d) { return '#edgepath' + d.identity })\n      //   .style(\"pointer-events\", \"none\")\n      //   .text(function (d) { return d.type });\n\n      const updateNode = svg.selectAll(\"circle\").data(nodes).join(\"circle\").attr(\"stroke\", \"#ff8103\").attr(\"stroke-width\", 4).attr(\"r\", 54).attr(\"fill\", \"#fc9f42\").on(\"mouseover\", function (d) {\n        tooltip.style(\"visibility\", \"visible\").html(\"<p style='font-size: 8px; color: #4b4b4b' ><b>Id: </b>\" + d.id + \"<br><b>Labels: </b>\" + d.labels + \"<br><b>ImportId: </b>\" + d.properties.neo4jImportId + \"<br><b>Name: </b>\" + d.properties.name + \"</p>\");\n        d3.select(this).style(\"stroke\", \"#d4d4d4\").style(\"stroke-width\", \"8px\");\n      }).on(\"mousemove\", function () {\n        tooltip.style(\"top\", d3.event.pageY + \"px\").style(\"left\", d3.event.pageX + \"px\");\n      }).on(\"mouseleave\", function () {\n        tooltip.style(\"visibility\", \"hidden\");\n        d3.select(this).style(\"stroke\", \"#ff8103\").style(\"stroke-width\", \"4px\");\n      }).call(drag(simulation));\n      const updateNodeLabel = svg.append(\"g\").selectAll(\"text\").data(nodes).join(\"text\").attr('text-anchor', 'middle').attr('dominant-baseline', 'central').attr(\"fill\", \"#4b4b4b\").text(d => {\n        return d.properties.neo4jImportId;\n      }).call(drag(simulation));\n      simulation.on(\"tick\", () => {\n        // edges.attr({\n        //   \"x1\": function (d) { return d.source.x; },\n        //   \"y1\": function (d) { return d.source.y; },\n        //   \"x2\": function (d) { return d.target.x; },\n        //   \"y2\": function (d) { return d.target.y; }\n        // });\n\n        // edgepaths.attr('d', function (d) {\n        //   const path = 'M ' + d.source.x + ' ' + d.source.y + ' L ' + d.target.x + ' ' + d.target.y;\n\n        //   return path\n        // });\n\n        // edgelabels.attr('transform', function (d) {\n        //   if (d.target.x < d.source.x) {\n        //       const rx = width / 2;\n        //       const ry = height / 2;\n        //       return 'rotate(180 ' + rx + ' ' + ry + ')';\n        //   }\n        //   else {\n        //       return 'rotate(0)';\n        //   }\n        // });\n\n        // update link positions\n        updateLink.attr(\"x1\", d => d.source.x).attr(\"y1\", d => d.source.y).attr(\"x2\", d => d.target.x).attr(\"y2\", d => d.target.y);\n        updateLinkLabel.attr(\"transform\", function (d) {\n          var xDiff = d.source.x - d.target.x;\n          var yDiff = d.source.y - d.target.y;\n          var angle = Math.atan2(yDiff, xDiff) * (180.0 / Math.PI);\n          //var angle = 0;\n\n          return \"translate(\" + (d.source.x + d.target.x) / 2 + \",\" + (d.source.y + d.target.y) / 2 + \")rotate(\" + angle + \")\";\n        });\n        ;\n\n        // // update link positions\n        // path\n        //   .attr(\"x1\", d => d.source.x)\n        //   .attr(\"y1\", d => d.source.y)\n        //   .attr(\"x2\", d => d.target.x)\n        //   .attr(\"y2\", d => d.target.y);\n\n        // update node positions\n        updateNode.attr(\"cx\", d => d.x).attr(\"cy\", d => d.y);\n\n        // update label positions\n        updateNodeLabel.attr(\"x\", d => {\n          return d.x;\n        }).attr(\"y\", d => {\n          return d.y;\n        });\n      });\n\n      // updateLink.exit().remove();\n      // updateNode.exit().remove();\n      // updateLabel.exit().remove();\n    }\n  }, [graph, width, height]);\n  return (\n    /*#__PURE__*/\n    // destroy: () => {\n    //   simulation.stop();\n    // },\n    // nodes: () => {\n    //   return svg.node();\n    // }\n    _jsxDEV(\"svg\", {\n      width: width,\n      height: height,\n      ref: d3Container\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(RunForceGraph, \"h+WplRJLdMRryiBjkticGzlDYOI=\");\n_c = RunForceGraph;\nexport default RunForceGraph;\nvar _c;\n$RefreshReg$(_c, \"RunForceGraph\");","map":{"version":3,"names":["d3","useEffect","useState","useRef","jsxDEV","_jsxDEV","RunForceGraph","graph","svgContainer","_s","d3Container","width","setWidth","height","setHeight","getSvgContainerSize","newWidth","current","clientWidth","newHeight","clientHeight","window","addEventListener","removeEventListener","links","nodes","map","d","Object","assign","drag","simulation","dragstarted","event","active","alpha","restart","fx","x","fy","y","dragged","dragended","on","forceSimulation","force","forceLink","id","distance","forceManyBody","strength","forceCollide","radius","iterations","forceX","forceY","select","selectAll","remove","svg","attr","call","zoom","transform","append","tooltip","style","updateLink","data","join","updateLinkLabel","text","type","updateNode","html","labels","properties","neo4jImportId","name","pageY","pageX","updateNodeLabel","source","target","xDiff","yDiff","angle","Math","atan2","PI","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/ForceGraphGenerator.js"],"sourcesContent":["\nimport * as d3 from \"d3\";\nimport { useEffect, useState, useRef } from \"react\";\nexport const RunForceGraph = ( {graph, svgContainer} ) => { \n  const d3Container = useRef(null);\n  \n\n  // State to track width and height of SVG Container\n  const [width, setWidth] = useState();\n  const [height, setHeight] = useState();\n\n  // This function calculates width and height of the container\n  const getSvgContainerSize = () => {\n    const newWidth = svgContainer.current.clientWidth - 128;\n    setWidth(newWidth);\n\n    const newHeight = svgContainer.current.clientHeight;\n    setHeight(newHeight);\n  };\n\n  useEffect(() => {\n    // detect 'width' and 'height' on render\n    getSvgContainerSize();\n    // listen for resize changes, and detect dimensions again when they change\n    window.addEventListener(\"resize\", getSvgContainerSize);\n    // cleanup event listener\n    return () => window.removeEventListener(\"resize\", getSvgContainerSize);\n  }, []);\n\n  useEffect(() => { \n    if (graph.links && graph.nodes) {\n\n\n      const links = graph.links.map((d) => Object.assign({}, d));\n      const nodes = graph.nodes.map((d) => Object.assign({}, d));\n\n      const drag = (simulation) => {\n        const dragstarted = (d) => {\n          if (!d3.event.active) simulation.alpha(0.3).restart();\n          d.fx = d.x;\n          d.fy = d.y;\n        };\n\n        const dragged = (d) => {\n          d.fx = d3.event.x;\n          d.fy = d3.event.y;\n        };\n\n        const dragended = (d) => {\n          if (!d3.event.active) simulation.alpha(0).restart();\n          d.fx = null;\n          d.fy = null;\n        };\n\n        return d3\n          .drag()\n          .on(\"start\", dragstarted)\n          .on(\"drag\", dragged)\n          .on(\"end\", dragended);\n      };\n      \n      const simulation = d3\n        .forceSimulation(nodes)\n        .force(\"link\", d3.forceLink(links).id(d => d.id).distance(200))\n        .force(\"charge\", d3.forceManyBody().strength(-1000))\n        .force(\"collide\", d3.forceCollide().strength(1).radius(180).iterations(1))\n        .force(\"x\", d3.forceX())\n        .force(\"y\", d3.forceY());\n\n      d3.select(d3Container.current).selectAll(\"*\").remove();\n        \n      const svg = d3\n        .select(d3Container.current)\n        .attr(\"viewBox\", [-width / 2, -height / 2, width, height])\n        .call(d3.zoom().on(\"zoom\", function () {\n          svg.attr(\"transform\", d3.event.transform);\n      })).append(\"g\");\n\n      const tooltip = d3.select(\"body\")\n        .append(\"div\")\n        .style(\"position\", \"absolute\")\n        .style(\"visibility\", \"hidden\")\n        .style(\"background-color\", \"#fbfbfb\")\n        .style(\"border\", \"solid\")\n        .style(\"border-color\", \"#999\")\n        .style(\"border-width\", \"2px\")\n        .style(\"border-radius\", \"5px\")\n        .style(\"padding\", \"4px\");\n        \n      svg.append(\"defs\").append(\"marker\")\n        .attr(\"id\", \"arrow\")\n        .attr(\"viewBox\", \"0 -5 10 10\")\n        .attr(\"refX\", 32)\n        .attr(\"refY\", 0)\n        .attr(\"fill\", \"#999\")\n        .attr(\"markerWidth\", 6)\n        .attr(\"markerHeight\", 6)\n        .attr(\"orient\", \"auto\")\n        .append(\"path\")\n        .attr(\"d\", \"M0,-5L10,0L0,5\");\n\n      const updateLink = svg\n        .selectAll(\"line\")\n        .data(links)\n        .join(\"line\")\n        .attr(\"stroke\", \"#999\")\n        .attr(\"stroke-opacity\", 0.6)\n        .attr(\"stroke-width\", \"4px\")\n        .attr(\"fill\", \"#4b4b4b\")\n        .attr(\"marker-end\", \"url(#arrow)\")\n        .call(drag(simulation));\n\n        const updateLinkLabel = svg.append(\"g\")\n        .selectAll(\"text\")\n        .data(links)\n        .join(\"text\")\n        .attr('text-anchor', 'middle')\n        .attr(\"dx\", 20)\n        .attr(\"dy\", -50)\n        .attr('dominant-baseline', 'central')\n        .attr(\"fill\", \"#4b4b4b\")\n        .text(d => { return d.type; })\n        .call(drag(simulation));\n\n      // const path = svg\n      //   .selectAll(\"path\")\n      //   .data(links)\n      //   .enter()\n      //   .append(\"path\")\n      //   .attr(\"class\", d => {return \"link \" + d.type; })\n      //   .attr(\"id\", function(d, i) {return \"linkId_\" + i;})\n      //   .attr(\"marker-end\", \"url(#arrow)\");\n\n      // const linktext = svg.append(\"g\").selectAll(\"g.linklabelholder\").data(links);\n\n      // linktext\n      //   .enter()\n      //   .append(\"g\")\n      //   .attr(\"class\", \"linklabelholder\")\n      //   .append(\"text\")\n      //   .attr(\"x\", \"50\")\n      //   .attr(\"y\", \"-20\")\n      //   .attr(\"text-anchor\", \"start\")\n      //   .style(\"fill\", \"#4b4b4b\")\n      //   .append(\"textpath\")\n      //   .attr(\"xlink:href\", function (d, i) {return \"#linkId_\" + i;})\n      //   .text(d => {return d.type; });\n\n      // const edges = svg.selectAll(\"line\")\n      //   .data(links)\n      //   .join(\"line\")\n      //   .attr(\"id\", function (d) { return 'edge' + d.identity })\n      //   .style(\"stroke\", \"#ccc\");\n\n      // const edgepaths = svg.selectAll(\".edgepath\")\n      //   .data(links)\n      //   .join('path')\n      //   .attr({\n      //       'd': function (d) { return 'M ' + d.source.x + ' ' + d.source.y + ' L ' + d.target.x + ' ' + d.target.y },\n      //       'class': 'edgepath',\n      //       'fill-opacity': 0,\n      //       'stroke-opacity': 0,\n      //       'fill': 'blue',\n      //       'stroke': 'red',\n      //       'id': function (d) { return 'edgepath' + d.identity }\n      //   });\n\n      // const edgelabels = svg.selectAll(\".edgelabel\")\n      //   .data(links)\n      //   .join('text')\n      //   .attr({\n      //       'class': 'edgelabel',\n      //       'id': function (d) { return 'edgelabel' + d.identity },\n      //       'dx': 80,\n      //       'dy': 0,\n      //       'font-size': 10,\n      //       'fill': '#aaa'\n      //   });\n\n      // edgelabels.append('textPath')\n      //   .data(links)\n      //   .attr('xlink:href', function (d) { return '#edgepath' + d.identity })\n      //   .style(\"pointer-events\", \"none\")\n      //   .text(function (d) { return d.type });\n          \n\n      const updateNode = svg\n        .selectAll(\"circle\")\n        .data(nodes)\n        .join(\"circle\")\n        .attr(\"stroke\", \"#ff8103\")\n        .attr(\"stroke-width\", 4)\n        .attr(\"r\", 54)\n        .attr(\"fill\", \"#fc9f42\")\n        .on(\"mouseover\", function(d) {\n          tooltip.style(\"visibility\", \"visible\")\n            .html(\"<p style='font-size: 8px; color: #4b4b4b' ><b>Id: </b>\" + d.id + \"<br><b>Labels: </b>\" + d.labels + \"<br><b>ImportId: </b>\" + d.properties.neo4jImportId + \"<br><b>Name: </b>\" + d.properties.name + \"</p>\")\n            d3.select(this)\n              .style(\"stroke\", \"#d4d4d4\")\n              .style(\"stroke-width\", \"8px\")\n        }) .on(\"mousemove\", function() {\n          tooltip\n            .style(\"top\", d3.event.pageY + \"px\")\n            .style(\"left\", d3.event.pageX + \"px\")\n        }) .on(\"mouseleave\", function() {\n          tooltip\n            .style(\"visibility\", \"hidden\")\n            d3.select(this)\n              .style(\"stroke\", \"#ff8103\")\n              .style(\"stroke-width\", \"4px\");\n        })\n        .call(drag(simulation));\n\n      const updateNodeLabel = svg.append(\"g\")\n        .selectAll(\"text\")\n        .data(nodes)\n        .join(\"text\")\n        .attr('text-anchor', 'middle')\n        .attr('dominant-baseline', 'central')\n        .attr(\"fill\", \"#4b4b4b\")\n        .text(d => {return d.properties.neo4jImportId;})\n        .call(drag(simulation));\n\n\n      simulation.on(\"tick\", () => {\n        // edges.attr({\n        //   \"x1\": function (d) { return d.source.x; },\n        //   \"y1\": function (d) { return d.source.y; },\n        //   \"x2\": function (d) { return d.target.x; },\n        //   \"y2\": function (d) { return d.target.y; }\n        // });\n\n        // edgepaths.attr('d', function (d) {\n        //   const path = 'M ' + d.source.x + ' ' + d.source.y + ' L ' + d.target.x + ' ' + d.target.y;\n          \n        //   return path\n        // });\n\n        // edgelabels.attr('transform', function (d) {\n        //   if (d.target.x < d.source.x) {\n        //       const rx = width / 2;\n        //       const ry = height / 2;\n        //       return 'rotate(180 ' + rx + ' ' + ry + ')';\n        //   }\n        //   else {\n        //       return 'rotate(0)';\n        //   }\n        // });\n\n        // update link positions\n        updateLink\n          .attr(\"x1\", d => d.source.x)\n          .attr(\"y1\", d => d.source.y)\n          .attr(\"x2\", d => d.target.x)\n          .attr(\"y2\", d => d.target.y);\n\n        updateLinkLabel\n        .attr(\"transform\", function(d) {\n          var xDiff = d.source.x - d.target.x; \n          var yDiff = d.source.y - d.target.y; \n          var angle = Math.atan2(yDiff, xDiff) * (180.0 / Math.PI);\n          //var angle = 0;\n          \n          return \"translate(\" + (d.source.x + d.target.x) / 2 + \",\"\n          + (d.source.y + d.target.y) / 2 + \")rotate(\" + angle + \")\"; \n        });;\n\n\n        // // update link positions\n        // path\n        //   .attr(\"x1\", d => d.source.x)\n        //   .attr(\"y1\", d => d.source.y)\n        //   .attr(\"x2\", d => d.target.x)\n        //   .attr(\"y2\", d => d.target.y);\n      \n\n        // update node positions\n        updateNode\n          .attr(\"cx\", d => d.x)\n          .attr(\"cy\", d => d.y);\n\n        // update label positions\n        updateNodeLabel\n          .attr(\"x\", d => { return d.x; })\n          .attr(\"y\", d => { return d.y; });\n      });\n      \n      // updateLink.exit().remove();\n      // updateNode.exit().remove();\n      // updateLabel.exit().remove();\n      \n    }\n\n    \n  }, [graph, width, height])\n\n  return (\n    // destroy: () => {\n    //   simulation.stop();\n    // },\n    // nodes: () => {\n    //   return svg.node();\n    // }\n    <svg width={width} height={height} ref={d3Container}/>\n    \n  );\n}\n\nexport default RunForceGraph;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}