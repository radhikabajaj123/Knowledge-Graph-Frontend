{"ast":null,"code":"\"use strict\";\n\n/**\n * Sigma.js Shader Utils\n * ======================\n *\n * Code used to load sigma's shaders.\n * @module\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loadProgram = exports.loadFragmentShader = exports.loadVertexShader = void 0;\n/**\n * Function used to load a shader.\n */\nfunction loadShader(type, gl, source) {\n  var glType = type === \"VERTEX\" ? gl.VERTEX_SHADER : gl.FRAGMENT_SHADER;\n  // Creating the shader\n  var shader = gl.createShader(glType);\n  if (shader === null) {\n    throw new Error(\"loadShader: error while creating the shader\");\n  }\n  // Loading source\n  gl.shaderSource(shader, source);\n  // Compiling the shader\n  gl.compileShader(shader);\n  // Retrieving compilation status\n  var successfullyCompiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n  // Throwing if something went awry\n  if (!successfullyCompiled) {\n    var infoLog = gl.getShaderInfoLog(shader);\n    gl.deleteShader(shader);\n    throw new Error(\"loadShader: error while compiling the shader:\\n\".concat(infoLog, \"\\n\").concat(source));\n  }\n  return shader;\n}\nfunction loadVertexShader(gl, source) {\n  return loadShader(\"VERTEX\", gl, source);\n}\nexports.loadVertexShader = loadVertexShader;\nfunction loadFragmentShader(gl, source) {\n  return loadShader(\"FRAGMENT\", gl, source);\n}\nexports.loadFragmentShader = loadFragmentShader;\n/**\n * Function used to load a program.\n */\nfunction loadProgram(gl, shaders) {\n  var program = gl.createProgram();\n  if (program === null) {\n    throw new Error(\"loadProgram: error while creating the program.\");\n  }\n  var i, l;\n  // Attaching the shaders\n  for (i = 0, l = shaders.length; i < l; i++) gl.attachShader(program, shaders[i]);\n  gl.linkProgram(program);\n  // Checking status\n  var successfullyLinked = gl.getProgramParameter(program, gl.LINK_STATUS);\n  if (!successfullyLinked) {\n    gl.deleteProgram(program);\n    throw new Error(\"loadProgram: error while linking the program.\");\n  }\n  return program;\n}\nexports.loadProgram = loadProgram;","map":{"version":3,"names":["Object","defineProperty","exports","value","loadProgram","loadFragmentShader","loadVertexShader","loadShader","type","gl","source","glType","VERTEX_SHADER","FRAGMENT_SHADER","shader","createShader","Error","shaderSource","compileShader","successfullyCompiled","getShaderParameter","COMPILE_STATUS","infoLog","getShaderInfoLog","deleteShader","concat","shaders","program","createProgram","i","l","length","attachShader","linkProgram","successfullyLinked","getProgramParameter","LINK_STATUS","deleteProgram"],"sources":["/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/node_modules/sigma/rendering/webgl/shaders/utils.js"],"sourcesContent":["\"use strict\";\n/**\n * Sigma.js Shader Utils\n * ======================\n *\n * Code used to load sigma's shaders.\n * @module\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadProgram = exports.loadFragmentShader = exports.loadVertexShader = void 0;\n/**\n * Function used to load a shader.\n */\nfunction loadShader(type, gl, source) {\n    var glType = type === \"VERTEX\" ? gl.VERTEX_SHADER : gl.FRAGMENT_SHADER;\n    // Creating the shader\n    var shader = gl.createShader(glType);\n    if (shader === null) {\n        throw new Error(\"loadShader: error while creating the shader\");\n    }\n    // Loading source\n    gl.shaderSource(shader, source);\n    // Compiling the shader\n    gl.compileShader(shader);\n    // Retrieving compilation status\n    var successfullyCompiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    // Throwing if something went awry\n    if (!successfullyCompiled) {\n        var infoLog = gl.getShaderInfoLog(shader);\n        gl.deleteShader(shader);\n        throw new Error(\"loadShader: error while compiling the shader:\\n\".concat(infoLog, \"\\n\").concat(source));\n    }\n    return shader;\n}\nfunction loadVertexShader(gl, source) {\n    return loadShader(\"VERTEX\", gl, source);\n}\nexports.loadVertexShader = loadVertexShader;\nfunction loadFragmentShader(gl, source) {\n    return loadShader(\"FRAGMENT\", gl, source);\n}\nexports.loadFragmentShader = loadFragmentShader;\n/**\n * Function used to load a program.\n */\nfunction loadProgram(gl, shaders) {\n    var program = gl.createProgram();\n    if (program === null) {\n        throw new Error(\"loadProgram: error while creating the program.\");\n    }\n    var i, l;\n    // Attaching the shaders\n    for (i = 0, l = shaders.length; i < l; i++)\n        gl.attachShader(program, shaders[i]);\n    gl.linkProgram(program);\n    // Checking status\n    var successfullyLinked = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (!successfullyLinked) {\n        gl.deleteProgram(program);\n        throw new Error(\"loadProgram: error while linking the program.\");\n    }\n    return program;\n}\nexports.loadProgram = loadProgram;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,WAAW,GAAGF,OAAO,CAACG,kBAAkB,GAAGH,OAAO,CAACI,gBAAgB,GAAG,KAAK,CAAC;AACpF;AACA;AACA;AACA,SAASC,UAAUA,CAACC,IAAI,EAAEC,EAAE,EAAEC,MAAM,EAAE;EAClC,IAAIC,MAAM,GAAGH,IAAI,KAAK,QAAQ,GAAGC,EAAE,CAACG,aAAa,GAAGH,EAAE,CAACI,eAAe;EACtE;EACA,IAAIC,MAAM,GAAGL,EAAE,CAACM,YAAY,CAACJ,MAAM,CAAC;EACpC,IAAIG,MAAM,KAAK,IAAI,EAAE;IACjB,MAAM,IAAIE,KAAK,CAAC,6CAA6C,CAAC;EAClE;EACA;EACAP,EAAE,CAACQ,YAAY,CAACH,MAAM,EAAEJ,MAAM,CAAC;EAC/B;EACAD,EAAE,CAACS,aAAa,CAACJ,MAAM,CAAC;EACxB;EACA,IAAIK,oBAAoB,GAAGV,EAAE,CAACW,kBAAkB,CAACN,MAAM,EAAEL,EAAE,CAACY,cAAc,CAAC;EAC3E;EACA,IAAI,CAACF,oBAAoB,EAAE;IACvB,IAAIG,OAAO,GAAGb,EAAE,CAACc,gBAAgB,CAACT,MAAM,CAAC;IACzCL,EAAE,CAACe,YAAY,CAACV,MAAM,CAAC;IACvB,MAAM,IAAIE,KAAK,CAAC,iDAAiD,CAACS,MAAM,CAACH,OAAO,EAAE,IAAI,CAAC,CAACG,MAAM,CAACf,MAAM,CAAC,CAAC;EAC3G;EACA,OAAOI,MAAM;AACjB;AACA,SAASR,gBAAgBA,CAACG,EAAE,EAAEC,MAAM,EAAE;EAClC,OAAOH,UAAU,CAAC,QAAQ,EAAEE,EAAE,EAAEC,MAAM,CAAC;AAC3C;AACAR,OAAO,CAACI,gBAAgB,GAAGA,gBAAgB;AAC3C,SAASD,kBAAkBA,CAACI,EAAE,EAAEC,MAAM,EAAE;EACpC,OAAOH,UAAU,CAAC,UAAU,EAAEE,EAAE,EAAEC,MAAM,CAAC;AAC7C;AACAR,OAAO,CAACG,kBAAkB,GAAGA,kBAAkB;AAC/C;AACA;AACA;AACA,SAASD,WAAWA,CAACK,EAAE,EAAEiB,OAAO,EAAE;EAC9B,IAAIC,OAAO,GAAGlB,EAAE,CAACmB,aAAa,CAAC,CAAC;EAChC,IAAID,OAAO,KAAK,IAAI,EAAE;IAClB,MAAM,IAAIX,KAAK,CAAC,gDAAgD,CAAC;EACrE;EACA,IAAIa,CAAC,EAAEC,CAAC;EACR;EACA,KAAKD,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGJ,OAAO,CAACK,MAAM,EAAEF,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EACtCpB,EAAE,CAACuB,YAAY,CAACL,OAAO,EAAED,OAAO,CAACG,CAAC,CAAC,CAAC;EACxCpB,EAAE,CAACwB,WAAW,CAACN,OAAO,CAAC;EACvB;EACA,IAAIO,kBAAkB,GAAGzB,EAAE,CAAC0B,mBAAmB,CAACR,OAAO,EAAElB,EAAE,CAAC2B,WAAW,CAAC;EACxE,IAAI,CAACF,kBAAkB,EAAE;IACrBzB,EAAE,CAAC4B,aAAa,CAACV,OAAO,CAAC;IACzB,MAAM,IAAIX,KAAK,CAAC,+CAA+C,CAAC;EACpE;EACA,OAAOW,OAAO;AAClB;AACAzB,OAAO,CAACE,WAAW,GAAGA,WAAW"},"metadata":{},"sourceType":"script","externalDependencies":[]}