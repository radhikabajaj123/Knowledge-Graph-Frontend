{"ast":null,"code":"\"use strict\";\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateGraph = exports.canUse32BitsIndices = exports.extractPixel = exports.getMatrixImpact = exports.matrixFromCamera = exports.getCorrectionRatio = exports.floatColor = exports.floatArrayColor = exports.parseColor = exports.zIndexOrdering = exports.createNormalizationFunction = exports.graphExtent = exports.getPixelRatio = exports.createElement = exports.cancelFrame = exports.requestFrame = exports.assignDeep = exports.assign = exports.isPlainObject = void 0;\nvar is_graph_1 = __importDefault(require(\"graphology-utils/is-graph\"));\nvar matrices_1 = require(\"./matrices\");\nvar data_1 = require(\"./data\");\n/**\n * Checks whether the given value is a plain object.\n *\n * @param  {mixed}   value - Target value.\n * @return {boolean}\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nfunction isPlainObject(value) {\n  return typeof value === \"object\" && value !== null && value.constructor === Object;\n}\nexports.isPlainObject = isPlainObject;\n/**\n * Helper to use Object.assign with more than two objects.\n *\n * @param  {object} target       - First object.\n * @param  {object} [...objects] - Objects to merge.\n * @return {object}\n */\nfunction assign(target) {\n  var objects = [];\n  for (var _i = 1; _i < arguments.length; _i++) {\n    objects[_i - 1] = arguments[_i];\n  }\n  target = target || {};\n  for (var i = 0, l = objects.length; i < l; i++) {\n    var o = objects[i];\n    if (!o) continue;\n    Object.assign(target, o);\n  }\n  return target;\n}\nexports.assign = assign;\n/**\n * Very simple recursive Object.assign-like function.\n *\n * @param  {object} target       - First object.\n * @param  {object} [...objects] - Objects to merge.\n * @return {object}\n */\nfunction assignDeep(target) {\n  var objects = [];\n  for (var _i = 1; _i < arguments.length; _i++) {\n    objects[_i - 1] = arguments[_i];\n  }\n  target = target || {};\n  for (var i = 0, l = objects.length; i < l; i++) {\n    var o = objects[i];\n    if (!o) continue;\n    for (var k in o) {\n      if (isPlainObject(o[k])) {\n        target[k] = assignDeep(target[k], o[k]);\n      } else {\n        target[k] = o[k];\n      }\n    }\n  }\n  return target;\n}\nexports.assignDeep = assignDeep;\n/**\n * Just some dirty trick to make requestAnimationFrame and cancelAnimationFrame \"work\" in Node.js, for unit tests:\n */\nexports.requestFrame = typeof requestAnimationFrame !== \"undefined\" ? function (callback) {\n  return requestAnimationFrame(callback);\n} : function (callback) {\n  return setTimeout(callback, 0);\n};\nexports.cancelFrame = typeof cancelAnimationFrame !== \"undefined\" ? function (requestID) {\n  return cancelAnimationFrame(requestID);\n} : function (requestID) {\n  return clearTimeout(requestID);\n};\n/**\n * Function used to create DOM elements easily.\n *\n * @param  {string} tag        - Tag name of the element to create.\n * @param  {object} style      - Styles map.\n * @param  {object} attributes - Attributes map.\n * @return {HTMLElement}\n */\nfunction createElement(tag, style, attributes) {\n  var element = document.createElement(tag);\n  if (style) {\n    for (var k in style) {\n      element.style[k] = style[k];\n    }\n  }\n  if (attributes) {\n    for (var k in attributes) {\n      element.setAttribute(k, attributes[k]);\n    }\n  }\n  return element;\n}\nexports.createElement = createElement;\n/**\n * Function returning the browser's pixel ratio.\n *\n * @return {number}\n */\nfunction getPixelRatio() {\n  if (typeof window.devicePixelRatio !== \"undefined\") return window.devicePixelRatio;\n  return 1;\n}\nexports.getPixelRatio = getPixelRatio;\n/**\n * Function returning the graph's node extent in x & y.\n *\n * @param  {Graph}\n * @return {object}\n */\nfunction graphExtent(graph) {\n  if (!graph.order) return {\n    x: [0, 1],\n    y: [0, 1]\n  };\n  var xMin = Infinity;\n  var xMax = -Infinity;\n  var yMin = Infinity;\n  var yMax = -Infinity;\n  graph.forEachNode(function (_, attr) {\n    var x = attr.x,\n      y = attr.y;\n    if (x < xMin) xMin = x;\n    if (x > xMax) xMax = x;\n    if (y < yMin) yMin = y;\n    if (y > yMax) yMax = y;\n  });\n  return {\n    x: [xMin, xMax],\n    y: [yMin, yMax]\n  };\n}\nexports.graphExtent = graphExtent;\nfunction createNormalizationFunction(extent) {\n  var _a = __read(extent.x, 2),\n    minX = _a[0],\n    maxX = _a[1],\n    _b = __read(extent.y, 2),\n    minY = _b[0],\n    maxY = _b[1];\n  var ratio = Math.max(maxX - minX, maxY - minY),\n    dX = (maxX + minX) / 2,\n    dY = (maxY + minY) / 2;\n  if (ratio === 0 || Math.abs(ratio) === Infinity || isNaN(ratio)) ratio = 1;\n  if (isNaN(dX)) dX = 0;\n  if (isNaN(dY)) dY = 0;\n  var fn = function (data) {\n    return {\n      x: 0.5 + (data.x - dX) / ratio,\n      y: 0.5 + (data.y - dY) / ratio\n    };\n  };\n  // TODO: possibility to apply this in batch over array of indices\n  fn.applyTo = function (data) {\n    data.x = 0.5 + (data.x - dX) / ratio;\n    data.y = 0.5 + (data.y - dY) / ratio;\n  };\n  fn.inverse = function (data) {\n    return {\n      x: dX + ratio * (data.x - 0.5),\n      y: dY + ratio * (data.y - 0.5)\n    };\n  };\n  fn.ratio = ratio;\n  return fn;\n}\nexports.createNormalizationFunction = createNormalizationFunction;\n/**\n * Function ordering the given elements in reverse z-order so they drawn\n * the correct way.\n *\n * @param  {number}   extent   - [min, max] z values.\n * @param  {function} getter   - Z attribute getter function.\n * @param  {array}    elements - The array to sort.\n * @return {array} - The sorted array.\n */\nfunction zIndexOrdering(extent, getter, elements) {\n  // If k is > n, we'll use a standard sort\n  return elements.sort(function (a, b) {\n    var zA = getter(a) || 0,\n      zB = getter(b) || 0;\n    if (zA < zB) return -1;\n    if (zA > zB) return 1;\n    return 0;\n  });\n  // TODO: counting sort optimization\n}\n\nexports.zIndexOrdering = zIndexOrdering;\n/**\n * WebGL utils\n * ===========\n */\n/**\n * Memoized function returning a float-encoded color from various string\n * formats describing colors.\n */\nvar INT8 = new Int8Array(4);\nvar INT32 = new Int32Array(INT8.buffer, 0, 1);\nvar FLOAT32 = new Float32Array(INT8.buffer, 0, 1);\nvar RGBA_TEST_REGEX = /^\\s*rgba?\\s*\\(/;\nvar RGBA_EXTRACT_REGEX = /^\\s*rgba?\\s*\\(\\s*([0-9]*)\\s*,\\s*([0-9]*)\\s*,\\s*([0-9]*)(?:\\s*,\\s*(.*)?)?\\)\\s*$/;\nfunction parseColor(val) {\n  var r = 0; // byte\n  var g = 0; // byte\n  var b = 0; // byte\n  var a = 1; // float\n  // Handling hexadecimal notation\n  if (val[0] === \"#\") {\n    if (val.length === 4) {\n      r = parseInt(val.charAt(1) + val.charAt(1), 16);\n      g = parseInt(val.charAt(2) + val.charAt(2), 16);\n      b = parseInt(val.charAt(3) + val.charAt(3), 16);\n    } else {\n      r = parseInt(val.charAt(1) + val.charAt(2), 16);\n      g = parseInt(val.charAt(3) + val.charAt(4), 16);\n      b = parseInt(val.charAt(5) + val.charAt(6), 16);\n    }\n    if (val.length === 9) {\n      a = parseInt(val.charAt(7) + val.charAt(8), 16) / 255;\n    }\n  }\n  // Handling rgb notation\n  else if (RGBA_TEST_REGEX.test(val)) {\n    var match = val.match(RGBA_EXTRACT_REGEX);\n    if (match) {\n      r = +match[1];\n      g = +match[2];\n      b = +match[3];\n      if (match[4]) a = +match[4];\n    }\n  }\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nexports.parseColor = parseColor;\nvar FLOAT_COLOR_CACHE = {};\nfor (var htmlColor in data_1.HTML_COLORS) {\n  FLOAT_COLOR_CACHE[htmlColor] = floatColor(data_1.HTML_COLORS[htmlColor]);\n  // Replicating cache for hex values for free\n  FLOAT_COLOR_CACHE[data_1.HTML_COLORS[htmlColor]] = FLOAT_COLOR_CACHE[htmlColor];\n}\nfunction floatArrayColor(val) {\n  val = data_1.HTML_COLORS[val] || val;\n  // NOTE: this variant is not cached because it is mostly used for uniforms\n  var _a = parseColor(val),\n    r = _a.r,\n    g = _a.g,\n    b = _a.b,\n    a = _a.a;\n  return new Float32Array([r / 255, g / 255, b / 255, a]);\n}\nexports.floatArrayColor = floatArrayColor;\nfunction floatColor(val) {\n  // If the color is already computed, we yield it\n  if (typeof FLOAT_COLOR_CACHE[val] !== \"undefined\") return FLOAT_COLOR_CACHE[val];\n  var parsed = parseColor(val);\n  var r = parsed.r,\n    g = parsed.g,\n    b = parsed.b;\n  var a = parsed.a;\n  a = a * 255 | 0;\n  INT32[0] = (a << 24 | b << 16 | g << 8 | r) & 0xfeffffff;\n  var color = FLOAT32[0];\n  FLOAT_COLOR_CACHE[val] = color;\n  return color;\n}\nexports.floatColor = floatColor;\n/**\n * In sigma, the graph is normalized into a [0, 1], [0, 1] square, before being given to the various renderers. This\n * helps dealing with quadtree in particular.\n * But at some point, we need to rescale it so that it takes the best place in the screen, ie. we always want to see two\n * nodes \"touching\" opposite sides of the graph, with the camera being at its default state.\n *\n * This function determines this ratio.\n */\nfunction getCorrectionRatio(viewportDimensions, graphDimensions) {\n  var viewportRatio = viewportDimensions.height / viewportDimensions.width;\n  var graphRatio = graphDimensions.height / graphDimensions.width;\n  // If the stage and the graphs are in different directions (such as the graph being wider that tall while the stage\n  // is taller than wide), we can stop here to have indeed nodes touching opposite sides:\n  if (viewportRatio < 1 && graphRatio > 1 || viewportRatio > 1 && graphRatio < 1) {\n    return 1;\n  }\n  // Else, we need to fit the graph inside the stage:\n  // 1. If the graph is \"squarer\" (ie. with a ratio closer to 1), we need to make the largest sides touch;\n  // 2. If the stage is \"squarer\", we need to make the smallest sides touch.\n  return Math.min(Math.max(graphRatio, 1 / graphRatio), Math.max(1 / viewportRatio, viewportRatio));\n}\nexports.getCorrectionRatio = getCorrectionRatio;\n/**\n * Function returning a matrix from the current state of the camera.\n */\n// TODO: it's possible to optimize this drastically!\nfunction matrixFromCamera(state, viewportDimensions, graphDimensions, padding, inverse) {\n  var angle = state.angle,\n    ratio = state.ratio,\n    x = state.x,\n    y = state.y;\n  var width = viewportDimensions.width,\n    height = viewportDimensions.height;\n  var matrix = (0, matrices_1.identity)();\n  var smallestDimension = Math.min(width, height) - 2 * padding;\n  var correctionRatio = getCorrectionRatio(viewportDimensions, graphDimensions);\n  if (!inverse) {\n    (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), 2 * (smallestDimension / width) * correctionRatio, 2 * (smallestDimension / height) * correctionRatio));\n    (0, matrices_1.multiply)(matrix, (0, matrices_1.rotate)((0, matrices_1.identity)(), -angle));\n    (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), 1 / ratio));\n    (0, matrices_1.multiply)(matrix, (0, matrices_1.translate)((0, matrices_1.identity)(), -x, -y));\n  } else {\n    (0, matrices_1.multiply)(matrix, (0, matrices_1.translate)((0, matrices_1.identity)(), x, y));\n    (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), ratio));\n    (0, matrices_1.multiply)(matrix, (0, matrices_1.rotate)((0, matrices_1.identity)(), angle));\n    (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), width / smallestDimension / 2 / correctionRatio, height / smallestDimension / 2 / correctionRatio));\n  }\n  return matrix;\n}\nexports.matrixFromCamera = matrixFromCamera;\n/**\n * All these transformations we apply on the matrix to get it rescale the graph\n * as we want make it very hard to get pixel-perfect distances in WebGL. This\n * function returns a factor that properly cancels the matrix effect on lengths.\n *\n * [jacomyal]\n * To be fully honest, I can't really explain happens here... I notice that the\n * following ratio works (ie. it correctly compensates the matrix impact on all\n * camera states I could try):\n * > `R = size(V) / size(M * V) / W`\n * as long as `M * V` is in the direction of W (ie. parallel to (Ox)). It works\n * as well with H and a vector that transforms into something parallel to (Oy).\n *\n * Also, note that we use `angle` and not `-angle` (that would seem logical,\n * since we want to anticipate the rotation), because of the fact that in WebGL,\n * the image is vertically swapped.\n */\nfunction getMatrixImpact(matrix, cameraState, viewportDimensions) {\n  var _a = (0, matrices_1.multiplyVec2)(matrix, {\n      x: Math.cos(cameraState.angle),\n      y: Math.sin(cameraState.angle)\n    }, 0),\n    x = _a.x,\n    y = _a.y;\n  return 1 / Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)) / viewportDimensions.width;\n}\nexports.getMatrixImpact = getMatrixImpact;\n/**\n * Function extracting the color at the given pixel.\n */\nfunction extractPixel(gl, x, y, array) {\n  var data = array || new Uint8Array(4);\n  gl.readPixels(x, y, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, data);\n  return data;\n}\nexports.extractPixel = extractPixel;\n/**\n * Function used to know whether given webgl context can use 32 bits indices.\n */\nfunction canUse32BitsIndices(gl) {\n  var webgl2 = typeof WebGL2RenderingContext !== \"undefined\" && gl instanceof WebGL2RenderingContext;\n  return webgl2 || !!gl.getExtension(\"OES_element_index_uint\");\n}\nexports.canUse32BitsIndices = canUse32BitsIndices;\n/**\n * Check if the graph variable is a valid graph, and if sigma can render it.\n */\nfunction validateGraph(graph) {\n  // check if it's a valid graphology instance\n  if (!(0, is_graph_1.default)(graph)) throw new Error(\"Sigma: invalid graph instance.\");\n  // check if nodes have x/y attributes\n  graph.forEachNode(function (key, attributes) {\n    if (!Number.isFinite(attributes.x) || !Number.isFinite(attributes.y)) {\n      throw new Error(\"Sigma: Coordinates of node \".concat(key, \" are invalid. A node must have a numeric 'x' and 'y' attribute.\"));\n    }\n  });\n}\nexports.validateGraph = validateGraph;","map":{"version":3,"names":["__read","o","n","m","Symbol","iterator","i","call","r","ar","e","next","done","push","value","error","__importDefault","mod","__esModule","Object","defineProperty","exports","validateGraph","canUse32BitsIndices","extractPixel","getMatrixImpact","matrixFromCamera","getCorrectionRatio","floatColor","floatArrayColor","parseColor","zIndexOrdering","createNormalizationFunction","graphExtent","getPixelRatio","createElement","cancelFrame","requestFrame","assignDeep","assign","isPlainObject","is_graph_1","require","matrices_1","data_1","constructor","target","objects","_i","arguments","length","l","k","requestAnimationFrame","callback","setTimeout","cancelAnimationFrame","requestID","clearTimeout","tag","style","attributes","element","document","setAttribute","window","devicePixelRatio","graph","order","x","y","xMin","Infinity","xMax","yMin","yMax","forEachNode","_","attr","extent","_a","minX","maxX","_b","minY","maxY","ratio","Math","max","dX","dY","abs","isNaN","fn","data","applyTo","inverse","getter","elements","sort","a","b","zA","zB","INT8","Int8Array","INT32","Int32Array","buffer","FLOAT32","Float32Array","RGBA_TEST_REGEX","RGBA_EXTRACT_REGEX","val","g","parseInt","charAt","test","match","FLOAT_COLOR_CACHE","htmlColor","HTML_COLORS","parsed","color","viewportDimensions","graphDimensions","viewportRatio","height","width","graphRatio","min","state","padding","angle","matrix","identity","smallestDimension","correctionRatio","multiply","scale","rotate","translate","cameraState","multiplyVec2","cos","sin","sqrt","pow","gl","array","Uint8Array","readPixels","RGBA","UNSIGNED_BYTE","webgl2","WebGL2RenderingContext","getExtension","default","Error","key","Number","isFinite","concat"],"sources":["/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/node_modules/sigma/utils/index.js"],"sourcesContent":["\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateGraph = exports.canUse32BitsIndices = exports.extractPixel = exports.getMatrixImpact = exports.matrixFromCamera = exports.getCorrectionRatio = exports.floatColor = exports.floatArrayColor = exports.parseColor = exports.zIndexOrdering = exports.createNormalizationFunction = exports.graphExtent = exports.getPixelRatio = exports.createElement = exports.cancelFrame = exports.requestFrame = exports.assignDeep = exports.assign = exports.isPlainObject = void 0;\nvar is_graph_1 = __importDefault(require(\"graphology-utils/is-graph\"));\nvar matrices_1 = require(\"./matrices\");\nvar data_1 = require(\"./data\");\n/**\n * Checks whether the given value is a plain object.\n *\n * @param  {mixed}   value - Target value.\n * @return {boolean}\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nfunction isPlainObject(value) {\n    return typeof value === \"object\" && value !== null && value.constructor === Object;\n}\nexports.isPlainObject = isPlainObject;\n/**\n * Helper to use Object.assign with more than two objects.\n *\n * @param  {object} target       - First object.\n * @param  {object} [...objects] - Objects to merge.\n * @return {object}\n */\nfunction assign(target) {\n    var objects = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        objects[_i - 1] = arguments[_i];\n    }\n    target = target || {};\n    for (var i = 0, l = objects.length; i < l; i++) {\n        var o = objects[i];\n        if (!o)\n            continue;\n        Object.assign(target, o);\n    }\n    return target;\n}\nexports.assign = assign;\n/**\n * Very simple recursive Object.assign-like function.\n *\n * @param  {object} target       - First object.\n * @param  {object} [...objects] - Objects to merge.\n * @return {object}\n */\nfunction assignDeep(target) {\n    var objects = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        objects[_i - 1] = arguments[_i];\n    }\n    target = target || {};\n    for (var i = 0, l = objects.length; i < l; i++) {\n        var o = objects[i];\n        if (!o)\n            continue;\n        for (var k in o) {\n            if (isPlainObject(o[k])) {\n                target[k] = assignDeep(target[k], o[k]);\n            }\n            else {\n                target[k] = o[k];\n            }\n        }\n    }\n    return target;\n}\nexports.assignDeep = assignDeep;\n/**\n * Just some dirty trick to make requestAnimationFrame and cancelAnimationFrame \"work\" in Node.js, for unit tests:\n */\nexports.requestFrame = typeof requestAnimationFrame !== \"undefined\"\n    ? function (callback) { return requestAnimationFrame(callback); }\n    : function (callback) { return setTimeout(callback, 0); };\nexports.cancelFrame = typeof cancelAnimationFrame !== \"undefined\"\n    ? function (requestID) { return cancelAnimationFrame(requestID); }\n    : function (requestID) { return clearTimeout(requestID); };\n/**\n * Function used to create DOM elements easily.\n *\n * @param  {string} tag        - Tag name of the element to create.\n * @param  {object} style      - Styles map.\n * @param  {object} attributes - Attributes map.\n * @return {HTMLElement}\n */\nfunction createElement(tag, style, attributes) {\n    var element = document.createElement(tag);\n    if (style) {\n        for (var k in style) {\n            element.style[k] = style[k];\n        }\n    }\n    if (attributes) {\n        for (var k in attributes) {\n            element.setAttribute(k, attributes[k]);\n        }\n    }\n    return element;\n}\nexports.createElement = createElement;\n/**\n * Function returning the browser's pixel ratio.\n *\n * @return {number}\n */\nfunction getPixelRatio() {\n    if (typeof window.devicePixelRatio !== \"undefined\")\n        return window.devicePixelRatio;\n    return 1;\n}\nexports.getPixelRatio = getPixelRatio;\n/**\n * Function returning the graph's node extent in x & y.\n *\n * @param  {Graph}\n * @return {object}\n */\nfunction graphExtent(graph) {\n    if (!graph.order)\n        return { x: [0, 1], y: [0, 1] };\n    var xMin = Infinity;\n    var xMax = -Infinity;\n    var yMin = Infinity;\n    var yMax = -Infinity;\n    graph.forEachNode(function (_, attr) {\n        var x = attr.x, y = attr.y;\n        if (x < xMin)\n            xMin = x;\n        if (x > xMax)\n            xMax = x;\n        if (y < yMin)\n            yMin = y;\n        if (y > yMax)\n            yMax = y;\n    });\n    return { x: [xMin, xMax], y: [yMin, yMax] };\n}\nexports.graphExtent = graphExtent;\nfunction createNormalizationFunction(extent) {\n    var _a = __read(extent.x, 2), minX = _a[0], maxX = _a[1], _b = __read(extent.y, 2), minY = _b[0], maxY = _b[1];\n    var ratio = Math.max(maxX - minX, maxY - minY), dX = (maxX + minX) / 2, dY = (maxY + minY) / 2;\n    if (ratio === 0 || Math.abs(ratio) === Infinity || isNaN(ratio))\n        ratio = 1;\n    if (isNaN(dX))\n        dX = 0;\n    if (isNaN(dY))\n        dY = 0;\n    var fn = function (data) {\n        return {\n            x: 0.5 + (data.x - dX) / ratio,\n            y: 0.5 + (data.y - dY) / ratio,\n        };\n    };\n    // TODO: possibility to apply this in batch over array of indices\n    fn.applyTo = function (data) {\n        data.x = 0.5 + (data.x - dX) / ratio;\n        data.y = 0.5 + (data.y - dY) / ratio;\n    };\n    fn.inverse = function (data) {\n        return {\n            x: dX + ratio * (data.x - 0.5),\n            y: dY + ratio * (data.y - 0.5),\n        };\n    };\n    fn.ratio = ratio;\n    return fn;\n}\nexports.createNormalizationFunction = createNormalizationFunction;\n/**\n * Function ordering the given elements in reverse z-order so they drawn\n * the correct way.\n *\n * @param  {number}   extent   - [min, max] z values.\n * @param  {function} getter   - Z attribute getter function.\n * @param  {array}    elements - The array to sort.\n * @return {array} - The sorted array.\n */\nfunction zIndexOrdering(extent, getter, elements) {\n    // If k is > n, we'll use a standard sort\n    return elements.sort(function (a, b) {\n        var zA = getter(a) || 0, zB = getter(b) || 0;\n        if (zA < zB)\n            return -1;\n        if (zA > zB)\n            return 1;\n        return 0;\n    });\n    // TODO: counting sort optimization\n}\nexports.zIndexOrdering = zIndexOrdering;\n/**\n * WebGL utils\n * ===========\n */\n/**\n * Memoized function returning a float-encoded color from various string\n * formats describing colors.\n */\nvar INT8 = new Int8Array(4);\nvar INT32 = new Int32Array(INT8.buffer, 0, 1);\nvar FLOAT32 = new Float32Array(INT8.buffer, 0, 1);\nvar RGBA_TEST_REGEX = /^\\s*rgba?\\s*\\(/;\nvar RGBA_EXTRACT_REGEX = /^\\s*rgba?\\s*\\(\\s*([0-9]*)\\s*,\\s*([0-9]*)\\s*,\\s*([0-9]*)(?:\\s*,\\s*(.*)?)?\\)\\s*$/;\nfunction parseColor(val) {\n    var r = 0; // byte\n    var g = 0; // byte\n    var b = 0; // byte\n    var a = 1; // float\n    // Handling hexadecimal notation\n    if (val[0] === \"#\") {\n        if (val.length === 4) {\n            r = parseInt(val.charAt(1) + val.charAt(1), 16);\n            g = parseInt(val.charAt(2) + val.charAt(2), 16);\n            b = parseInt(val.charAt(3) + val.charAt(3), 16);\n        }\n        else {\n            r = parseInt(val.charAt(1) + val.charAt(2), 16);\n            g = parseInt(val.charAt(3) + val.charAt(4), 16);\n            b = parseInt(val.charAt(5) + val.charAt(6), 16);\n        }\n        if (val.length === 9) {\n            a = parseInt(val.charAt(7) + val.charAt(8), 16) / 255;\n        }\n    }\n    // Handling rgb notation\n    else if (RGBA_TEST_REGEX.test(val)) {\n        var match = val.match(RGBA_EXTRACT_REGEX);\n        if (match) {\n            r = +match[1];\n            g = +match[2];\n            b = +match[3];\n            if (match[4])\n                a = +match[4];\n        }\n    }\n    return { r: r, g: g, b: b, a: a };\n}\nexports.parseColor = parseColor;\nvar FLOAT_COLOR_CACHE = {};\nfor (var htmlColor in data_1.HTML_COLORS) {\n    FLOAT_COLOR_CACHE[htmlColor] = floatColor(data_1.HTML_COLORS[htmlColor]);\n    // Replicating cache for hex values for free\n    FLOAT_COLOR_CACHE[data_1.HTML_COLORS[htmlColor]] = FLOAT_COLOR_CACHE[htmlColor];\n}\nfunction floatArrayColor(val) {\n    val = data_1.HTML_COLORS[val] || val;\n    // NOTE: this variant is not cached because it is mostly used for uniforms\n    var _a = parseColor(val), r = _a.r, g = _a.g, b = _a.b, a = _a.a;\n    return new Float32Array([r / 255, g / 255, b / 255, a]);\n}\nexports.floatArrayColor = floatArrayColor;\nfunction floatColor(val) {\n    // If the color is already computed, we yield it\n    if (typeof FLOAT_COLOR_CACHE[val] !== \"undefined\")\n        return FLOAT_COLOR_CACHE[val];\n    var parsed = parseColor(val);\n    var r = parsed.r, g = parsed.g, b = parsed.b;\n    var a = parsed.a;\n    a = (a * 255) | 0;\n    INT32[0] = ((a << 24) | (b << 16) | (g << 8) | r) & 0xfeffffff;\n    var color = FLOAT32[0];\n    FLOAT_COLOR_CACHE[val] = color;\n    return color;\n}\nexports.floatColor = floatColor;\n/**\n * In sigma, the graph is normalized into a [0, 1], [0, 1] square, before being given to the various renderers. This\n * helps dealing with quadtree in particular.\n * But at some point, we need to rescale it so that it takes the best place in the screen, ie. we always want to see two\n * nodes \"touching\" opposite sides of the graph, with the camera being at its default state.\n *\n * This function determines this ratio.\n */\nfunction getCorrectionRatio(viewportDimensions, graphDimensions) {\n    var viewportRatio = viewportDimensions.height / viewportDimensions.width;\n    var graphRatio = graphDimensions.height / graphDimensions.width;\n    // If the stage and the graphs are in different directions (such as the graph being wider that tall while the stage\n    // is taller than wide), we can stop here to have indeed nodes touching opposite sides:\n    if ((viewportRatio < 1 && graphRatio > 1) || (viewportRatio > 1 && graphRatio < 1)) {\n        return 1;\n    }\n    // Else, we need to fit the graph inside the stage:\n    // 1. If the graph is \"squarer\" (ie. with a ratio closer to 1), we need to make the largest sides touch;\n    // 2. If the stage is \"squarer\", we need to make the smallest sides touch.\n    return Math.min(Math.max(graphRatio, 1 / graphRatio), Math.max(1 / viewportRatio, viewportRatio));\n}\nexports.getCorrectionRatio = getCorrectionRatio;\n/**\n * Function returning a matrix from the current state of the camera.\n */\n// TODO: it's possible to optimize this drastically!\nfunction matrixFromCamera(state, viewportDimensions, graphDimensions, padding, inverse) {\n    var angle = state.angle, ratio = state.ratio, x = state.x, y = state.y;\n    var width = viewportDimensions.width, height = viewportDimensions.height;\n    var matrix = (0, matrices_1.identity)();\n    var smallestDimension = Math.min(width, height) - 2 * padding;\n    var correctionRatio = getCorrectionRatio(viewportDimensions, graphDimensions);\n    if (!inverse) {\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), 2 * (smallestDimension / width) * correctionRatio, 2 * (smallestDimension / height) * correctionRatio));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.rotate)((0, matrices_1.identity)(), -angle));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), 1 / ratio));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.translate)((0, matrices_1.identity)(), -x, -y));\n    }\n    else {\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.translate)((0, matrices_1.identity)(), x, y));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), ratio));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.rotate)((0, matrices_1.identity)(), angle));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), width / smallestDimension / 2 / correctionRatio, height / smallestDimension / 2 / correctionRatio));\n    }\n    return matrix;\n}\nexports.matrixFromCamera = matrixFromCamera;\n/**\n * All these transformations we apply on the matrix to get it rescale the graph\n * as we want make it very hard to get pixel-perfect distances in WebGL. This\n * function returns a factor that properly cancels the matrix effect on lengths.\n *\n * [jacomyal]\n * To be fully honest, I can't really explain happens here... I notice that the\n * following ratio works (ie. it correctly compensates the matrix impact on all\n * camera states I could try):\n * > `R = size(V) / size(M * V) / W`\n * as long as `M * V` is in the direction of W (ie. parallel to (Ox)). It works\n * as well with H and a vector that transforms into something parallel to (Oy).\n *\n * Also, note that we use `angle` and not `-angle` (that would seem logical,\n * since we want to anticipate the rotation), because of the fact that in WebGL,\n * the image is vertically swapped.\n */\nfunction getMatrixImpact(matrix, cameraState, viewportDimensions) {\n    var _a = (0, matrices_1.multiplyVec2)(matrix, { x: Math.cos(cameraState.angle), y: Math.sin(cameraState.angle) }, 0), x = _a.x, y = _a.y;\n    return 1 / Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)) / viewportDimensions.width;\n}\nexports.getMatrixImpact = getMatrixImpact;\n/**\n * Function extracting the color at the given pixel.\n */\nfunction extractPixel(gl, x, y, array) {\n    var data = array || new Uint8Array(4);\n    gl.readPixels(x, y, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    return data;\n}\nexports.extractPixel = extractPixel;\n/**\n * Function used to know whether given webgl context can use 32 bits indices.\n */\nfunction canUse32BitsIndices(gl) {\n    var webgl2 = typeof WebGL2RenderingContext !== \"undefined\" && gl instanceof WebGL2RenderingContext;\n    return webgl2 || !!gl.getExtension(\"OES_element_index_uint\");\n}\nexports.canUse32BitsIndices = canUse32BitsIndices;\n/**\n * Check if the graph variable is a valid graph, and if sigma can render it.\n */\nfunction validateGraph(graph) {\n    // check if it's a valid graphology instance\n    if (!(0, is_graph_1.default)(graph))\n        throw new Error(\"Sigma: invalid graph instance.\");\n    // check if nodes have x/y attributes\n    graph.forEachNode(function (key, attributes) {\n        if (!Number.isFinite(attributes.x) || !Number.isFinite(attributes.y)) {\n            throw new Error(\"Sigma: Coordinates of node \".concat(key, \" are invalid. A node must have a numeric 'x' and 'y' attribute.\"));\n        }\n    });\n}\nexports.validateGraph = validateGraph;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}