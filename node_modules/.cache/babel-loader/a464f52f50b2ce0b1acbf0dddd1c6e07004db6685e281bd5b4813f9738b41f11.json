{"ast":null,"code":"var _jsxFileName = \"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/NetworkDiagramGenerator.js\";\nimport { NetworkDiagram } from './NetworkDiagram';\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\nimport { useState, useEffect, useLayoutEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NetworkDiagramGenerator = ({\n  graph\n}) => {\n  var _s = $RefreshSig$();\n  const useDimensions = targetRef => {\n    _s();\n    const getDimensions = () => {\n      return {\n        width: targetRef.current ? targetRef.current.offsetWidth : 0,\n        height: targetRef.current ? targetRef.current.offsetHeight : 0\n      };\n    };\n    const [dimensions, setDimensions] = useState(getDimensions);\n    const handleResize = () => {\n      setDimensions(getDimensions());\n    };\n    useEffect(() => {\n      window.addEventListener(\"resize\", handleResize);\n      return () => window.removeEventListener(\"resize\", handleResize);\n    }, []);\n    useLayoutEffect(() => {\n      handleResize();\n    }, []);\n    return dimensions;\n  };\n  _s(useDimensions, \"7TzlXQ4F6vVvj8NGWJnBXX67/m8=\");\n  return /*#__PURE__*/_jsxDEV(TransformWrapper, {\n    children: /*#__PURE__*/_jsxDEV(TransformComponent, {\n      children: /*#__PURE__*/_jsxDEV(NetworkDiagram, {\n        graph: graph,\n        width: useDimensions.width,\n        height: useDimensions.height\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_c = NetworkDiagramGenerator;\nexport default NetworkDiagramGenerator;\nvar _c;\n$RefreshReg$(_c, \"NetworkDiagramGenerator\");","map":{"version":3,"names":["NetworkDiagram","TransformWrapper","TransformComponent","useState","useEffect","useLayoutEffect","jsxDEV","_jsxDEV","NetworkDiagramGenerator","graph","_s","$RefreshSig$","useDimensions","targetRef","getDimensions","width","current","offsetWidth","height","offsetHeight","dimensions","setDimensions","handleResize","window","addEventListener","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/NetworkDiagramGenerator.js"],"sourcesContent":["import { NetworkDiagram } from './NetworkDiagram';\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\nimport {useState, useEffect, useLayoutEffect} from 'react';\n\nconst NetworkDiagramGenerator = ({graph}) => {\n\n    const useDimensions = (targetRef) => {\n\n        const getDimensions = () => {\n          return {\n            width: targetRef.current ? targetRef.current.offsetWidth : 0,\n            height: targetRef.current ? targetRef.current.offsetHeight : 0\n          };\n        };\n      \n        const [dimensions, setDimensions] = useState(getDimensions);\n      \n        const handleResize = () => {\n          setDimensions(getDimensions());\n        };\n      \n        useEffect(() => {\n          window.addEventListener(\"resize\", handleResize);\n          return () => window.removeEventListener(\"resize\", handleResize);\n        }, []);\n      \n        useLayoutEffect(() => {\n          handleResize();\n        }, []);\n      \n        return dimensions;\n      }\n\n  return (\n    <TransformWrapper>\n        <TransformComponent>\n            <NetworkDiagram graph={graph} width={useDimensions.width} height={useDimensions.height} />\n        </TransformComponent>\n        \n    </TransformWrapper>\n  \n  );\n}\n\nexport default NetworkDiagramGenerator;"],"mappings":";AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,gBAAgB,EAAEC,kBAAkB,QAAQ,sBAAsB;AAC3E,SAAQC,QAAQ,EAAEC,SAAS,EAAEC,eAAe,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,uBAAuB,GAAGA,CAAC;EAACC;AAAK,CAAC,KAAK;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAEzC,MAAMC,aAAa,GAAIC,SAAS,IAAK;IAAAH,EAAA;IAEjC,MAAMI,aAAa,GAAGA,CAAA,KAAM;MAC1B,OAAO;QACLC,KAAK,EAAEF,SAAS,CAACG,OAAO,GAAGH,SAAS,CAACG,OAAO,CAACC,WAAW,GAAG,CAAC;QAC5DC,MAAM,EAAEL,SAAS,CAACG,OAAO,GAAGH,SAAS,CAACG,OAAO,CAACG,YAAY,GAAG;MAC/D,CAAC;IACH,CAAC;IAED,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAACW,aAAa,CAAC;IAE3D,MAAMQ,YAAY,GAAGA,CAAA,KAAM;MACzBD,aAAa,CAACP,aAAa,CAAC,CAAC,CAAC;IAChC,CAAC;IAEDV,SAAS,CAAC,MAAM;MACdmB,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEF,YAAY,CAAC;MAC/C,OAAO,MAAMC,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAEH,YAAY,CAAC;IACjE,CAAC,EAAE,EAAE,CAAC;IAENjB,eAAe,CAAC,MAAM;MACpBiB,YAAY,CAAC,CAAC;IAChB,CAAC,EAAE,EAAE,CAAC;IAEN,OAAOF,UAAU;EACnB,CAAC;EAAAV,EAAA,CAzBGE,aAAa;EA2BrB,oBACEL,OAAA,CAACN,gBAAgB;IAAAyB,QAAA,eACbnB,OAAA,CAACL,kBAAkB;MAAAwB,QAAA,eACfnB,OAAA,CAACP,cAAc;QAACS,KAAK,EAAEA,KAAM;QAACM,KAAK,EAAEH,aAAa,CAACG,KAAM;QAACG,MAAM,EAAEN,aAAa,CAACM;MAAO;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1E;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEP,CAAC;AAGvB,CAAC;AAAAC,EAAA,GAtCKvB,uBAAuB;AAwC7B,eAAeA,uBAAuB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}