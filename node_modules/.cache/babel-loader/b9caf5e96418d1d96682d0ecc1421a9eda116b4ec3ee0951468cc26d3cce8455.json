{"ast":null,"code":"const drawNetwork = (context, width, height, nodes, links, RADIUS) => {\n  context.clearRect(0, 0, width, height);\n  function drawLine(context, x1, y1, x2, y2) {\n    context.beginPath();\n    context.moveTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.strokeStyle = '#999999';\n    context.stroke();\n  }\n  function drawHead(context, x1, y1, x2, y2) {\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    context.beginPath();\n    context.moveTo(x1 + 0.5 * dy, y1 - 0.5 * dx);\n    context.lineTo(x1 - 0.5 * dy, y1 + 0.5 * dx);\n    context.lineTo(x2, y2);\n    context.closePath();\n    context.fillStyle = '#999999';\n    context.fill();\n  }\n\n  // Draw the links first\n  links.forEach(link => {\n    context.beginPath();\n    context.moveTo(link.source.x, link.source.y);\n    context.lineTo(link.target.x, link.target.y);\n    context.lineWidth = '2px';\n    context.strokeStyle = '#999999';\n    context.stroke();\n  });\n\n  // Draw the nodes\n  nodes.forEach(node => {\n    if (!node.x || !node.y) {\n      return;\n    }\n    context.beginPath();\n    context.moveTo(node.x + RADIUS, node.y);\n    context.arc(node.x, node.y, RADIUS, 0, 2 * Math.PI);\n    context.strokeStyle = '#ff8103';\n    context.lineWidth = 7;\n    context.stroke();\n    context.fillStyle = '#fc9f42';\n    context.fill();\n    context.fillStyle = '#292929';\n    context.font = \"bolder 10px serif\";\n    context.textAlign = 'center';\n    context.fillText(node.properties.neo4jImportId, node.x, node.y);\n  });\n};\nexport default drawNetwork;","map":{"version":3,"names":["drawNetwork","context","width","height","nodes","links","RADIUS","clearRect","drawLine","x1","y1","x2","y2","beginPath","moveTo","lineTo","strokeStyle","stroke","drawHead","dx","dy","closePath","fillStyle","fill","forEach","link","source","x","y","target","lineWidth","node","arc","Math","PI","font","textAlign","fillText","properties","neo4jImportId"],"sources":["/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/DrawNetwork.js"],"sourcesContent":["const drawNetwork = (context, width, height, nodes, links, RADIUS) => {\n  context.clearRect(0, 0, width, height);\n\n  function drawLine(context, x1, y1, x2, y2) {\n    context.beginPath();\n    context.moveTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.strokeStyle = '#999999';\n    context.stroke();\n  }\n\n  function drawHead(context, x1, y1, x2, y2) {\n    const dx = x2 -x1;\n    const dy = y2 - y1;\n    context.beginPath();\n    context.moveTo(x1 + 0.5 * dy, y1 - 0.5 * dx);\n    context.lineTo(x1 - 0.5 * dy, y1 + 0.5 * dx);\n    context.lineTo(x2, y2);\n    context.closePath();\n    context.fillStyle = '#999999';\n    context.fill();\n  }\n\n  // Draw the links first\n  links.forEach((link) => {\n    context.beginPath();\n    context.moveTo(link.source.x, link.source.y);\n    context.lineTo(link.target.x, link.target.y);\n    context.lineWidth = '2px';\n    context.strokeStyle = '#999999';\n    context.stroke();\n  });\n\n  // Draw the nodes\n  nodes.forEach((node) => {\n    if (!node.x || !node.y) {\n      return;\n    }\n\n    context.beginPath();\n    context.moveTo(node.x + RADIUS, node.y);\n    context.arc(node.x, node.y, RADIUS, 0, 2 * Math.PI);\n    context.strokeStyle = '#ff8103';\n    context.lineWidth = 7;\n    context.stroke();\n    context.fillStyle = '#fc9f42';\n    context.fill();\n    context.fillStyle = '#292929';\n    context.font = \"bolder 10px serif\";\n    context.textAlign = 'center';\n    context.fillText(node.properties.neo4jImportId, node.x, node.y);\n  });\n};\n\nexport default drawNetwork;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}