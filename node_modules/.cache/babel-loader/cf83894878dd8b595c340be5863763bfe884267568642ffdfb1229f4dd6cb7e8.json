{"ast":null,"code":"const drawNetwork = (context, width, height, nodes, links, RADIUS) => {\n  context.clearRect(0, 0, width, height);\n\n  // Draw the links first\n  links.forEach(link => {\n    context.beginPath();\n    context.moveTo(link.source.x, link.source.y);\n    context.lineTo(link.target.x, link.target.y);\n    context.fillStyle = '#383838';\n    context.stroke();\n  });\n\n  // Draw the nodes\n  nodes.forEach(node => {\n    if (!node.x || !node.y) {\n      return;\n    }\n    context.beginPath();\n    context.moveTo(node.x + RADIUS, node.y);\n    context.arc(node.x, node.y, RADIUS, 0, 2 * Math.PI);\n    context.fillStyle = '#F96900';\n    context.fill();\n    context.fillStyle = '#000000';\n    context.font = \"bolder 10px serif\";\n    context.textAlign = 'center';\n    context.fillText(node.properties.neo4jImportId, node.x, node.y);\n  });\n};\nexport default drawNetwork;","map":{"version":3,"names":["drawNetwork","context","width","height","nodes","links","RADIUS","clearRect","forEach","link","beginPath","moveTo","source","x","y","lineTo","target","fillStyle","stroke","node","arc","Math","PI","fill","font","textAlign","fillText","properties","neo4jImportId"],"sources":["/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/DrawNetwork.js"],"sourcesContent":["const drawNetwork = (context, width, height, nodes, links, RADIUS) => {\n  context.clearRect(0, 0, width, height);\n\n  // Draw the links first\n  links.forEach((link) => {\n    context.beginPath();\n    context.moveTo(link.source.x, link.source.y);\n    context.lineTo(link.target.x, link.target.y);\n    context.fillStyle = '#383838';\n    context.stroke();\n  });\n\n  // Draw the nodes\n  nodes.forEach((node) => {\n    if (!node.x || !node.y) {\n      return;\n    }\n\n    context.beginPath();\n    context.moveTo(node.x + RADIUS, node.y);\n    context.arc(node.x, node.y, RADIUS, 0, 2 * Math.PI);\n    context.fillStyle = '#F96900';\n    context.fill();\n    context.fillStyle = '#000000';\n    context.font = \"bolder 10px serif\";\n    context.textAlign = 'center';\n    context.fillText(node.properties.neo4jImportId, node.x, node.y);\n  });\n};\n\nexport default drawNetwork;"],"mappings":"AAAA,MAAMA,WAAW,GAAGA,CAACC,OAAO,EAAEC,KAAK,EAAEC,MAAM,EAAEC,KAAK,EAAEC,KAAK,EAAEC,MAAM,KAAK;EACpEL,OAAO,CAACM,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEL,KAAK,EAAEC,MAAM,CAAC;;EAEtC;EACAE,KAAK,CAACG,OAAO,CAAEC,IAAI,IAAK;IACtBR,OAAO,CAACS,SAAS,CAAC,CAAC;IACnBT,OAAO,CAACU,MAAM,CAACF,IAAI,CAACG,MAAM,CAACC,CAAC,EAAEJ,IAAI,CAACG,MAAM,CAACE,CAAC,CAAC;IAC5Cb,OAAO,CAACc,MAAM,CAACN,IAAI,CAACO,MAAM,CAACH,CAAC,EAAEJ,IAAI,CAACO,MAAM,CAACF,CAAC,CAAC;IAC5Cb,OAAO,CAACgB,SAAS,GAAG,SAAS;IAC7BhB,OAAO,CAACiB,MAAM,CAAC,CAAC;EAClB,CAAC,CAAC;;EAEF;EACAd,KAAK,CAACI,OAAO,CAAEW,IAAI,IAAK;IACtB,IAAI,CAACA,IAAI,CAACN,CAAC,IAAI,CAACM,IAAI,CAACL,CAAC,EAAE;MACtB;IACF;IAEAb,OAAO,CAACS,SAAS,CAAC,CAAC;IACnBT,OAAO,CAACU,MAAM,CAACQ,IAAI,CAACN,CAAC,GAAGP,MAAM,EAAEa,IAAI,CAACL,CAAC,CAAC;IACvCb,OAAO,CAACmB,GAAG,CAACD,IAAI,CAACN,CAAC,EAAEM,IAAI,CAACL,CAAC,EAAER,MAAM,EAAE,CAAC,EAAE,CAAC,GAAGe,IAAI,CAACC,EAAE,CAAC;IACnDrB,OAAO,CAACgB,SAAS,GAAG,SAAS;IAC7BhB,OAAO,CAACsB,IAAI,CAAC,CAAC;IACdtB,OAAO,CAACgB,SAAS,GAAG,SAAS;IAC7BhB,OAAO,CAACuB,IAAI,GAAG,mBAAmB;IAClCvB,OAAO,CAACwB,SAAS,GAAG,QAAQ;IAC5BxB,OAAO,CAACyB,QAAQ,CAACP,IAAI,CAACQ,UAAU,CAACC,aAAa,EAAET,IAAI,CAACN,CAAC,EAAEM,IAAI,CAACL,CAAC,CAAC;EACjE,CAAC,CAAC;AACJ,CAAC;AAED,eAAed,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}