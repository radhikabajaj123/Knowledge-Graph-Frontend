{"ast":null,"code":"// https://observablehq.com/@john-guerra/d3-force-boundary v0.0.2 Copyright 2022 John Alexis Guerra Gómez\nfunction constant(x) {\n  return function () {\n    return x;\n  };\n}\nfunction forceBoundary(x0, y0, x1, y1) {\n  var strength = constant(0.1),\n    hardBoundary = true,\n    border = constant(Math.min((x1 - x0) / 2, (y1 - y0) / 2)),\n    nodes,\n    strengthsX,\n    strengthsY,\n    x0z,\n    x1z,\n    y0z,\n    y1z,\n    borderz,\n    halfX,\n    halfY;\n  if (typeof x0 !== \"function\") x0 = constant(x0 == null ? -100 : +x0);\n  if (typeof x1 !== \"function\") x1 = constant(x1 == null ? 100 : +x1);\n  if (typeof y0 !== \"function\") y0 = constant(y0 == null ? -100 : +y0);\n  if (typeof y1 !== \"function\") y1 = constant(y1 == null ? 100 : +y1);\n  function getVx(halfX, x, strengthX, border, alpha) {\n    return (halfX - x) * Math.min(2, Math.abs(halfX - x) / halfX) * strengthX * alpha;\n  }\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i];\n      // debugger;\n      if (node.x < x0z[i] + borderz[i] || node.x > x1z[i] - borderz[i] || node.y < y0z[i] + borderz[i] || node.y > y1z[i] - borderz[i]) {\n        node.vx += getVx(halfX[i], node.x, strengthsX[i], borderz[i], alpha);\n        node.vy += getVx(halfY[i], node.y, strengthsY[i], borderz[i], alpha);\n      } else if (node.y < y0z[i] + borderz[i] || node.y > y1z[i] - borderz[i]) ;\n      if (hardBoundary) {\n        if (node.x >= x1z[i]) node.vx += x1z[i] - node.x;\n        if (node.x <= x0z[i]) node.vx += x0z[i] - node.x;\n        if (node.y >= y1z[i]) node.vy += y1z[i] - node.y;\n        if (node.y <= y0z[i]) node.vy += y0z[i] - node.y;\n      }\n    }\n  }\n  function initialize() {\n    if (!nodes) return;\n    var i,\n      n = nodes.length;\n    strengthsX = new Array(n);\n    strengthsY = new Array(n);\n    x0z = new Array(n);\n    y0z = new Array(n);\n    x1z = new Array(n);\n    y1z = new Array(n);\n    halfY = new Array(n);\n    halfX = new Array(n);\n    borderz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengthsX[i] = isNaN(x0z[i] = +x0(nodes[i], i, nodes)) || isNaN(x1z[i] = +x1(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n      strengthsY[i] = isNaN(y0z[i] = +y0(nodes[i], i, nodes)) || isNaN(y1z[i] = +y1(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n      halfX[i] = x0z[i] + (x1z[i] - x0z[i]) / 2, halfY[i] = y0z[i] + (y1z[i] - y0z[i]) / 2;\n      borderz[i] = +border(nodes[i], i, nodes);\n    }\n  }\n  force.initialize = function (_) {\n    nodes = _;\n    initialize();\n  };\n  force.x0 = function (_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x0;\n  };\n  force.x1 = function (_) {\n    return arguments.length ? (x1 = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x1;\n  };\n  force.y0 = function (_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y0;\n  };\n  force.y1 = function (_) {\n    return arguments.length ? (y1 = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y1;\n  };\n  force.strength = function (_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n  force.border = function (_) {\n    return arguments.length ? (border = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : border;\n  };\n  force.hardBoundary = function (_) {\n    return arguments.length ? (hardBoundary = _, force) : hardBoundary;\n  };\n  return force;\n}\nexport default forceBoundary;","map":{"version":3,"names":["constant","x","forceBoundary","x0","y0","x1","y1","strength","hardBoundary","border","Math","min","nodes","strengthsX","strengthsY","x0z","x1z","y0z","y1z","borderz","halfX","halfY","getVx","strengthX","alpha","abs","force","i","n","length","node","y","vx","vy","initialize","Array","isNaN","_","arguments"],"sources":["/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/node_modules/d3-force-boundary/dist/d3-force-boundary.esm.js"],"sourcesContent":["// https://observablehq.com/@john-guerra/d3-force-boundary v0.0.2 Copyright 2022 John Alexis Guerra Gómez\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction forceBoundary(x0, y0, x1, y1) {\n  var strength = constant(0.1),\n      hardBoundary = true,\n      border = constant( Math.min((x1 - x0)/2, (y1 - y0)/2) ),\n      nodes,\n      strengthsX,\n      strengthsY,\n      x0z, x1z,\n      y0z, y1z,\n      borderz,\n      halfX, halfY;\n\n  if (typeof x0 !== \"function\") x0 = constant(x0 == null ? -100 : +x0);\n  if (typeof x1 !== \"function\") x1 = constant(x1 == null ? 100 : +x1);\n  if (typeof y0 !== \"function\") y0 = constant(y0 == null ? -100 : +y0);\n  if (typeof y1 !== \"function\") y1 = constant(y1 == null ? 100 : +y1);\n\n  function getVx(halfX, x, strengthX, border, alpha) {\n    return (halfX - x) *  Math.min(2, Math.abs( halfX - x) / halfX) * strengthX * alpha;\n  }\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i];\n      // debugger;\n      if ((node.x < (x0z[i] + borderz[i]) || node.x > (x1z[i] - borderz[i])) ||\n        (node.y < (y0z[i] + borderz[i]) || node.y > (y1z[i] - borderz[i]))) {\n        node.vx += getVx(halfX[i], node.x, strengthsX[i], borderz[i], alpha);\n        node.vy += getVx(halfY[i], node.y, strengthsY[i], borderz[i], alpha);\n      } else if (node.y < (y0z[i] + borderz[i]) || node.y > (y1z[i] - borderz[i])) ;\n\n      if (hardBoundary) {\n        if (node.x >= x1z[i]) node.vx += x1z[i] - node.x;\n        if (node.x <= x0z[i]) node.vx += x0z[i] - node.x;\n        if (node.y >= y1z[i]) node.vy += y1z[i] - node.y;\n        if (node.y <= y0z[i]) node.vy += y0z[i] - node.y;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengthsX = new Array(n);\n    strengthsY = new Array(n);\n    x0z = new Array(n);\n    y0z = new Array(n);\n    x1z = new Array(n);\n    y1z = new Array(n);\n    halfY = new Array(n);\n    halfX = new Array(n);\n    borderz = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      strengthsX[i] = (isNaN(x0z[i] = +x0(nodes[i], i, nodes)) ||\n        isNaN(x1z[i] = +x1(nodes[i], i, nodes))) ? 0 : +strength(nodes[i], i, nodes);\n      strengthsY[i] = (isNaN(y0z[i] = +y0(nodes[i], i, nodes)) ||\n        isNaN(y1z[i] = +y1(nodes[i], i, nodes))) ? 0 : +strength(nodes[i], i, nodes);\n      halfX[i] = x0z[i] + (x1z[i] - x0z[i])/2,\n      halfY[i] = y0z[i] + (y1z[i] - y0z[i])/2;\n      borderz[i] = +border(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x0;\n  };\n\n  force.x1 = function(_) {\n    return arguments.length ? (x1 = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x1;\n  };\n\n  force.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y0;\n  };\n\n  force.y1 = function(_) {\n    return arguments.length ? (y1 = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y1;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.border = function(_) {\n    return arguments.length ? (border = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : border;\n  };\n\n  force.hardBoundary = function(_) {\n    return arguments.length ? (hardBoundary = _, force) : hardBoundary;\n  };\n\n  return force;\n}\n\nexport default forceBoundary;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}