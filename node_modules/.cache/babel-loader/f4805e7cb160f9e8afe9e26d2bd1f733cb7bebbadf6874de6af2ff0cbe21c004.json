{"ast":null,"code":"var _jsxFileName = \"/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/SigmaGraph.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { MultiDirectedGraph } from \"graphology\";\nimport { SigmaContainer, useLoadGraph } from \"@react-sigma/core\";\nimport \"@react-sigma/core/lib/react-sigma.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MyGraph = () => {\n  _s();\n  const loadGraph = useLoadGraph();\n  useEffect(() => {\n    // Create the graph\n    const graph = new MultiDirectedGraph();\n    graph.addNode(\"A\", {\n      x: 0,\n      y: 0,\n      id: 0,\n      neo4jImportId: \"87$225320\",\n      label: \"Node A\",\n      size: 10\n    });\n    graph.addNode(\"B\", {\n      x: 1,\n      y: 1,\n      label: \"Node B\",\n      size: 10\n    });\n    graph.addEdgeWithKey(\"rel1\", \"A\", \"B\", {\n      label: \"REL_1\"\n    });\n    graph.addEdgeWithKey(\"rel2\", \"A\", \"B\", {\n      label: \"REL_2\"\n    });\n    loadGraph(graph);\n  }, [loadGraph]);\n  return null;\n};\n_s(MyGraph, \"4R/qqHkRUjTHvSXXMbaiOc4dy/c=\", false, function () {\n  return [useLoadGraph];\n});\n_c = MyGraph;\nexport const MultiDirectedGraphView = () => {\n  return /*#__PURE__*/_jsxDEV(SigmaContainer, {\n    graph: MultiDirectedGraph,\n    style: {\n      height: \"500px\",\n      width: \"500px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(MyGraph, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c2 = MultiDirectedGraphView;\nexport default MultiDirectedGraphView;\n// import { useEffect } from \"react\";\n// import Graph from \"graphology\";\n// import { SigmaContainer, useLoadGraph } from \"@react-sigma/core\";\n// import \"@react-sigma/core/lib/react-sigma.min.css\";\n\n// export const LoadGraph = () => {\n//   const loadGraph = useLoadGraph();\n\n//   useEffect(() => {\n//     const graph = new Graph();\n//     graph.addNode(\"first\", { x: 0, y: 0, size: 15, label: \"My first node\", color: \"#FA4F40\" });\n//     loadGraph(graph);\n//   }, [loadGraph]);\n\n//   return null;\n// };\n\n// export const DisplayGraph = () => {\n//   return (\n//     <SigmaContainer style={{ height: \"500px\", width: \"500px\" }}>\n//       <LoadGraph />\n//     </SigmaContainer>\n//   );\n// };\n\n// export default DisplayGraph;\nvar _c, _c2;\n$RefreshReg$(_c, \"MyGraph\");\n$RefreshReg$(_c2, \"MultiDirectedGraphView\");","map":{"version":3,"names":["useEffect","MultiDirectedGraph","SigmaContainer","useLoadGraph","jsxDEV","_jsxDEV","MyGraph","_s","loadGraph","graph","addNode","x","y","id","neo4jImportId","label","size","addEdgeWithKey","_c","MultiDirectedGraphView","style","height","width","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/radhika.bajaj/Documents/GitHub/Knowledge-Graph-Frontend/src/components/SigmaGraph.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport { MultiDirectedGraph } from \"graphology\";\n\nimport { SigmaContainer, useLoadGraph } from \"@react-sigma/core\";\nimport \"@react-sigma/core/lib/react-sigma.min.css\";\n\nexport const MyGraph = () => {\n  const loadGraph = useLoadGraph();\n\n  useEffect(() => {\n    // Create the graph\n    const graph = new MultiDirectedGraph();\n    graph.addNode(\"A\", { x: 0, y: 0, id: 0, neo4jImportId: \"87$225320\", label: \"Node A\", size: 10 });\n    graph.addNode(\"B\", { x: 1, y: 1, label: \"Node B\", size: 10 });\n    graph.addEdgeWithKey(\"rel1\", \"A\", \"B\", { label: \"REL_1\" });\n    graph.addEdgeWithKey(\"rel2\", \"A\", \"B\", { label: \"REL_2\" });\n\n    loadGraph(graph);\n  }, [loadGraph]);\n\n  return null;\n};\n\nexport const MultiDirectedGraphView = () => {\n  return (\n    <SigmaContainer graph={MultiDirectedGraph} style={{ height: \"500px\", width: \"500px\" }}>\n      <MyGraph />\n    </SigmaContainer>\n  );\n};\n\nexport default MultiDirectedGraphView;\n// import { useEffect } from \"react\";\n// import Graph from \"graphology\";\n// import { SigmaContainer, useLoadGraph } from \"@react-sigma/core\";\n// import \"@react-sigma/core/lib/react-sigma.min.css\";\n\n// export const LoadGraph = () => {\n//   const loadGraph = useLoadGraph();\n\n//   useEffect(() => {\n//     const graph = new Graph();\n//     graph.addNode(\"first\", { x: 0, y: 0, size: 15, label: \"My first node\", color: \"#FA4F40\" });\n//     loadGraph(graph);\n//   }, [loadGraph]);\n\n//   return null;\n// };\n\n// export const DisplayGraph = () => {\n//   return (\n//     <SigmaContainer style={{ height: \"500px\", width: \"500px\" }}>\n//       <LoadGraph />\n//     </SigmaContainer>\n//   );\n// };\n\n// export default DisplayGraph;"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,kBAAkB,QAAQ,YAAY;AAE/C,SAASC,cAAc,EAAEC,YAAY,QAAQ,mBAAmB;AAChE,OAAO,2CAA2C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,SAAS,GAAGL,YAAY,CAAC,CAAC;EAEhCH,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,KAAK,GAAG,IAAIR,kBAAkB,CAAC,CAAC;IACtCQ,KAAK,CAACC,OAAO,CAAC,GAAG,EAAE;MAAEC,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE,CAAC;MAAEC,EAAE,EAAE,CAAC;MAAEC,aAAa,EAAE,WAAW;MAAEC,KAAK,EAAE,QAAQ;MAAEC,IAAI,EAAE;IAAG,CAAC,CAAC;IAChGP,KAAK,CAACC,OAAO,CAAC,GAAG,EAAE;MAAEC,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE,CAAC;MAAEG,KAAK,EAAE,QAAQ;MAAEC,IAAI,EAAE;IAAG,CAAC,CAAC;IAC7DP,KAAK,CAACQ,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE;MAAEF,KAAK,EAAE;IAAQ,CAAC,CAAC;IAC1DN,KAAK,CAACQ,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE;MAAEF,KAAK,EAAE;IAAQ,CAAC,CAAC;IAE1DP,SAAS,CAACC,KAAK,CAAC;EAClB,CAAC,EAAE,CAACD,SAAS,CAAC,CAAC;EAEf,OAAO,IAAI;AACb,CAAC;AAACD,EAAA,CAfWD,OAAO;EAAA,QACAH,YAAY;AAAA;AAAAe,EAAA,GADnBZ,OAAO;AAiBpB,OAAO,MAAMa,sBAAsB,GAAGA,CAAA,KAAM;EAC1C,oBACEd,OAAA,CAACH,cAAc;IAACO,KAAK,EAAER,kBAAmB;IAACmB,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAQ,CAAE;IAAAC,QAAA,eACpFlB,OAAA,CAACC,OAAO;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAErB,CAAC;AAACC,GAAA,GANWT,sBAAsB;AAQnC,eAAeA,sBAAsB;AACrC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAD,EAAA,EAAAU,GAAA;AAAAC,YAAA,CAAAX,EAAA;AAAAW,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}